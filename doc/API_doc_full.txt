# API Docs

> **Warning:** This is a beta version and actively under development. Please open a ticket on [Discord](https://discord.com/invite/edgex) if you encounter any problems.

### API Endpoint Domain

#### HTTP Endpoint

```
https://pro.edgex.exchange
```

#### WebSocket Endpoint

```
wss://quote.edgex.exchange
```

#### Authentication

> The authentication method for **third-party API** calls _**differs**_ from _web authentication_ methods. **Third-party API** calls only require two [authentication](authentication#auth-header) request headers.

# Authentication

Authentication is crucial for ensuring that only authorized users can access private APIs. This document outlines the authentication mechanisms used for public and private APIs.

## Public API

Public APIs do not require authentication. These interfaces are accessible to anyone without the need for any credentials.

```
No authentication is required for public interfaces.
```

## Private API

Private APIs require authentication to ensure that only authorized users can access them. Authentication is achieved using custom headers that include a timestamp and a signature.

### Auth Header

The following headers must be included in the request to authenticate access to private APIs:

| Name                    | Location | Type   | Required | Description                                                                 |
| ----------------------- | -------- | ------ | -------- | --------------------------------------------------------------------------- |
| `X-edgeX-Api-Timestamp` | header   | string | must     | The timestamp when the request was made. This helps prevent replay attacks. |
| `X-edgeX-Api-Signature` | header   | string | must     | The signature generated using the private key and request details.          |

### CURL Examble

```curl
curl --location --request GET 'https://pro.edgex.exchange/api/v1/private/account/getPositionTransactionPage?filterTypeList=SETTLE_FUNDING_FEE&size=10&accountId=544159487963955214' \
--header 'X-edgeX-Api-Signature: 06d28020763542c0afc296dc8743797c6fda8ea9727745b57b671f70326dfed6077cd******************************aff3162e39d05d9df1c3ddf9648650382d6e62ff1076b14c0e6c687088d3917d8490e5412a080a6e9ea940c720ddd' \
--header 'X-edgeX-Api-Timestamp: 1736313025024'
```

### Signature Elements

The signature is generated using the following elements:

| **Signature Element**          | **Description**                                                                     |
| ------------------------------ | ----------------------------------------------------------------------------------- |
| `X-edgeX-Api-Timestamp`        | The timestamp when the request was made. This is retrieved from the request header. |
| **Request Method (Uppercase)** | The HTTP method of the request, converted to uppercase (e.g., GET, POST).           |
| **Request Path**               | The URI path of the request (e.g., `/api/v1/resource`).                             |
| **Request Parameter/Body**     | The query parameters or request body, sorted alphabetically.                        |

#### Request Parameter To Signature Content

The request parameters are concatenated into a single string that forms the signature content. This string includes the timestamp, HTTP method, request path, and sorted query parameters or request body, ensuring the integrity and authenticity of the request.

For example, the following request parameters are concatenated into a single string:

> 1735542383256GET/api/v1/private/account/getPositionTransactionPageaccountId=543429922991899150\&filterTypeList=SETTLE\_FUNDING\_FEE\&size=10

#### Generate Signature Java Example

Below is a Java implementation of the Ecdsa signature algorithm. This example demonstrates how to sign a message using a private key.

**Private API Auth Signature:** This is used for authentication. We do not want the hash computation to consume excessive CPU resources. Therefore, this will use SHA3 to hash the request body string before signing.

```java
import java.math.BigInteger;
import org.web3j.abi.TypeEncoder;
import org.web3j.abi.datatypes.Utf8String;
import org.web3j.abi.datatypes.generated.Uint256;
import org.web3j.crypto.Hash;
import org.web3j.utils.Numeric;

public class EcdsaSignatureDemo {
    public static final BigInteger K_MODULUS = Numeric
            .toBigInt("0x0800000000000010ffffffffffffffffb781126dcae7b2321e66a241adc64d2f");

    public static void main(String[] args) {
        String privateKeyHex = "0463ac809cc7d7c1baf*********************baff9fc6e3d8e5b160ea3fc";

        // Ensure that the private key is a hexadecimal string without the "0x" prefix.
        if (privateKeyHex.startsWith("0x")) {
            privateKeyHex = privateKeyHex.substring(2);
        }

        BigInteger mySecretKey = new BigInteger(privateKeyHex, 16);
        PrivateKey privateKey = PrivateKey.create(mySecretKey);

        String message = "1735542383256GET/api/v1/private/account/getPositionTransactionPageaccountId=543429922991899150&filterTypeList=SETTLE_FUNDING_FEE&size=10";
        String msg = TypeEncoder.encodePacked(new Utf8String(message));

        BigInteger msgHash = Numeric.toBigInt(Hash.sha3(Numeric.hexStringToByteArray(msg)));

        msgHash = msgHash.mod(K_MODULUS);

        Signature signature = Ecdsa.sign(msgHash, privateKey);

        String starkSignature = TypeEncoder.encodePacked(new Uint256(signature.r)) +
                TypeEncoder.encodePacked(new Uint256(signature.s)) +
                TypeEncoder.encodePacked(new Uint256(privateKey.publicKey().point.y));

        System.out.println(starkSignature);
    }

    public static Signature sign(BigInteger msgHash, PrivateKey privateKey) {
        Curve curve = privateKey.curve;
        BigInteger randNum = new BigInteger(curve.N.toByteArray().length * 8 - 1, new SecureRandom()).abs().add(BigInteger.ONE);
        Point randomSignPoint = EcMath.multiply(curve.G, randNum, curve.N, curve.A, curve.P);
        BigInteger r = randomSignPoint.x.mod(curve.N);
        BigInteger s = ((msgHash.add(r.multiply(privateKey.secret))).multiply(EcMath.inv(randNum, curve.N))).mod(curve.N);
        return Signature.create(r, s);
    }
}
```

#### Request Body To Body String Code Example

The following Java code example demonstrates how to convert a JSON request body into a sorted string format suitable for signature generation:

```java
import com.google.gson.JsonArray;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import java.util.ArrayList;
import java.util.List;
import java.util.TreeMap;
import java.util.stream.Collectors;

public class RequestBodyToString {
    private static final String EMPTY_STRING = "";

    private static String getValue(JsonElement valueJson) {
        if (valueJson.isJsonNull()) {
            return EMPTY_STRING;
        } else if (valueJson.isJsonPrimitive()) {
            return valueJson.getAsString();
        } else if (valueJson.isJsonArray()) {
            JsonArray valueArray = valueJson.getAsJsonArray();
            if (valueArray.isEmpty()) {
                return EMPTY_STRING;
            }
            List<String> values = new ArrayList<>();
            for (JsonElement itemValue : valueArray) {
                values.add(getValue(itemValue));
            }
            return String.join("&", values);
        } else if (valueJson.isJsonObject()) {
            TreeMap<String, String> sortedDataMap = new TreeMap<>();
            JsonObject valueJsonObj = valueJson.getAsJsonObject();
            for (String key : valueJsonObj.keySet()) {
                sortedDataMap.put(key, getValue(valueJsonObj.get(key)));
            }
            return sortedDataMap.keySet().stream()
                    .map(key -> key + "=" + sortedDataMap.get(key))
                    .collect(Collectors.joining("&"));
        }
        return EMPTY_STRING;
    }
}
```

### Signature Algorithm

The signature algorithm used is Ecdsa (Elliptic Curve Digital Signature Algorithm).

# L2 Signature

## How To Sign Message

### How To GET Your L2 Private Key

To sign messages on Layer 2, you need to obtain your L2 private key. This key is used to generate signatures that authorize various actions on the platform.

<figure><img src="https://306066812-files.gitbook.io/~/files/v0/b/gitbook-x-prod.appspot.com/o/spaces%2FpfcaPbebWLbUlo9XcPCp%2Fuploads%2Fgit-blob-7d724b6b784a7e308cb4e836bb25f3c952fa0fcb%2F20250102-134437.png?alt=media" alt=""><figcaption><p><strong>How To GET Your L2 Private Key</strong></p></figcaption></figure>

> **Warning:** Keep your private key secure and never share it with anyone. Anyone with access to your private key can sign messages on your behalf.

### Signature Algorithm

> The signature algorithm used is **Ecdsa** (Elliptic Curve Digital Signature Algorithm). This algorithm ensures that signatures are secure and verifiable.

**L2Signature for Operations (e.g., Order, Transfer, Withdraw):** This will use Pedersen hash for signing. However, this hash computation will consume significantly more CPU resources.

> [Python L2Signature Demo](https://github.com/starkware-libs/starkex-resources/blob/master/crypto/starkware/crypto/signature/signature_test.py#L62)

> [Java Script L2Signature Demo](https://www.npmjs.com/package/@starkware-industries/starkware-crypto-utils#signing-a-starkex-order)

#### Java L2Signature Demo

Below is a Java implementation of the Ecdsa signature algorithm. This example demonstrates how to sign a message using a private key.

```java

    public static CreateOrderRequest signOrder(
            CreateOrderRequest request,
            Contract contract,
            Coin quotelCoin,
            PrivateKey privateKey) {
        BigInteger msgHash = L2SignUtil.hashLimitOrder(
                request.getSide() == OrderSide.BUY,
                BigIntUtil.toBigInt(quotelCoin.getStarkExAssetId()),
                BigIntUtil.toBigInt(contract.getStarkExSyntheticAssetId()),
                BigIntUtil.toBigInt(quotelCoin.getStarkExAssetId()),
                UnsignedLong.valueOf(new BigDecimal(request.getL2Value())
                        .multiply(new BigDecimal(BigIntUtil.toBigInt(quotelCoin.getStarkExResolution())))
                        .toBigIntegerExact()),
                UnsignedLong.valueOf(new BigDecimal(request.getL2Size())
                        .multiply(new BigDecimal(BigIntUtil.toBigInt(contract.getStarkExResolution())))
                        .toBigIntegerExact()),
                UnsignedLong.valueOf(new BigDecimal(request.getL2LimitFee())
                        .multiply(new BigDecimal(BigIntUtil.toBigInt(quotelCoin.getStarkExResolution())))
                        .toBigIntegerExact()),
                UnsignedLong.fromLongBits(request.getAccountId()),
                UnsignedInteger.valueOf(request.getL2Nonce()),
                UnsignedInteger.valueOf(request.getL2ExpireTime() / (60 * 60 * 1000L)));
        Signature signature = Ecdsa.sign(msgHash, privateKey);
        return request.toBuilder()
                .setL2Signature(L2Signature.newBuilder()
                        .setR(BigIntUtil.toHexStr(signature.r))
                        .setS(BigIntUtil.toHexStr(signature.s))
                        .build())
                .build();
    }

    public static BigInteger hashLimitOrder(
            boolean isBuyingSynthetic,
            BigInteger assetIdCollateral,
            BigInteger assetIdSynthetic,
            BigInteger assetIdFee,
            UnsignedLong amountCollateral,
            UnsignedLong amountSynthetic,
            UnsignedLong maxAmountFee,
            UnsignedLong positionId,
            UnsignedInteger nonce,
            UnsignedInteger expirationTimestamp) {
        BigInteger assetIdSell;
        BigInteger assetIdBuy;
        UnsignedLong amountSell;
        UnsignedLong amountBuy;
        if (isBuyingSynthetic) {
            assetIdSell = assetIdCollateral;
            assetIdBuy = assetIdSynthetic;
            amountSell = amountCollateral;
            amountBuy = amountSynthetic;
        } else {
            assetIdSell = assetIdSynthetic;
            assetIdBuy = assetIdCollateral;
            amountSell = amountSynthetic;
            amountBuy = amountCollateral;
        }
        BigInteger packedMessage0 = amountSell.bigIntegerValue();
        packedMessage0 = packedMessage0.shiftLeft(64).add(amountBuy.bigIntegerValue());
        packedMessage0 = packedMessage0.shiftLeft(64).add(maxAmountFee.bigIntegerValue());
        packedMessage0 = packedMessage0.shiftLeft(32).add(nonce.bigIntegerValue());

        BigInteger packedMessage1 = BigInteger.valueOf(3);
        packedMessage1 = packedMessage1.shiftLeft(64).add(positionId.bigIntegerValue());
        packedMessage1 = packedMessage1.shiftLeft(64).add(positionId.bigIntegerValue());
        packedMessage1 = packedMessage1.shiftLeft(64).add(positionId.bigIntegerValue());
        packedMessage1 = packedMessage1.shiftLeft(32).add(expirationTimestamp.bigIntegerValue());
        packedMessage1 = packedMessage1.shiftLeft(17);

        BigInteger msg = pedersenHash(assetIdSell, assetIdBuy);
        msg = pedersenHash(msg, assetIdFee);
        msg = pedersenHash(msg, packedMessage0);
        msg = pedersenHash(msg, packedMessage1);
        return msg;
    }

    public static BigInteger pedersenHash(BigInteger... input) {
        BigInteger[][] points = PEDERSEN_POINTS;
        Point shiftPoint = new Point(points[0][0], points[0][1]);
        for (int i = 0; i < input.length; i++) {
            BigInteger x = input[i];
            for (int j = 0; j < 252; j++) {
                int pos = 2 + i * 252 + j;
                Point pt = new Point(points[pos][0], points[pos][1]);
                if (x.and(BigInteger.ONE).intValue() != 0) {
                    shiftPoint = EcMath.add(shiftPoint, pt, Curve.secp256k1.A, Curve.secp256k1.P);
                }
                x = x.shiftRight(1);
            }
        }
        return shiftPoint.x;
    }

    public static Signature sign(BigInteger msgHash, PrivateKey privateKey) {
        Curve curve = privateKey.curve;
        BigInteger randNum = new BigInteger(curve.N.toByteArray().length * 8 - 1, new SecureRandom()).abs().add(BigInteger.ONE);
        Point randomSignPoint = EcMath.multiply(curve.G, randNum, curve.N, curve.A, curve.P);
        BigInteger r = randomSignPoint.x.mod(curve.N);
        BigInteger s = ((msgHash.add(r.multiply(privateKey.secret))).multiply(EcMath.inv(randNum, curve.N))).mod(curve.N);
        return Signature.create(r, s);
    }

```

## Signature Construction Guide

This section provides detailed instructions on constructing signatures for various actions on the platform.

### Withdrawal Signature

Used to authorize withdrawing assets from Layer 2 to an Ethereum address.

#### Parameters

* `assetIdCollateral` - Asset ID for the collateral token from [`meta_data.coinList.starkExAssetId`](public-api/metadata-api)
* `positionId` - User's account ID in Layer 2
* `ethAddress` - Destination Ethereum address for withdrawal
* `nonce` - Unique transaction identifier to prevent replay attacks
* `expirationTimestamp` - Unix timestamp when signature expires
* `amount` - Amount to withdraw in base units

#### Calculation

The following TypeScript function constructs the withdrawal message for signing:

```typescript
// Construct withdrawal message for signing
function getWithdrawalToAddressMsg({
  assetIdCollateral,
  positionId,
  ethAddress, 
  nonce,
  expirationTimestamp,
  amount
}) {
  // Pack parameters into 256-bit words
  const w1 = assetIdCollateral;
  let w5 = BigInt(withdrawalToAddress); // Constant identifier
  w5 = (w5 << 64) + BigInt(positionId);
  w5 = (w5 << 32) + BigInt(nonce); 
  w5 = (w5 << 64) + BigInt(amount);
  w5 = (w5 << 32) + BigInt(expirationTimestamp);
  w5 = w5 << 49;

  // Calculate Pedersen hash
  return pedersen([
    pedersen([w1, ethAddress]),
    w5.toString(16)
  ]);
}
```

### Limit Order Signature

Used to authorize a limit order for perpetual trading.

#### Parameters

* `assetIdSynthetic` - Synthetic asset ID from [`meta_data.contractList.starkExSyntheticAssetId`](public-api/metadata-api)
* `assetIdCollateral` - Collateral asset ID from [`meta_data.coinList.starkExAssetId`](public-api/metadata-api)
* `isBuyingSynthetic` - `true` for buy orders, `false` for sell orders
* `assetIdFee` - Fee token asset ID from [`meta_data.coinList.starkExAssetId`](public-api/metadata-api)
* `amountSynthetic` - Amount of synthetic asset
* `amountCollateral` - Amount of collateral asset
* `maxAmountFee` - Maximum fee amount allowed
* `nonce` - Unique order identifier
* `positionId` - User's position ID
* `expirationTimestamp` - Unix timestamp when order expires

#### Calculation

The following TypeScript function constructs the limit order message for signing:

```typescript
function getLimitOrderMsg({
  assetIdSynthetic,
  assetIdCollateral,
  isBuyingSynthetic,
  assetIdFee,
  amountSynthetic,
  amountCollateral,
  maxAmountFee,
  nonce,
  positionId,
  expirationTimestamp
}) {
  // Determine sell/buy assets based on order side
  const [assetIdSell, assetIdBuy] = isBuyingSynthetic 
    ? [assetIdCollateral, assetIdSynthetic]
    : [assetIdSynthetic, assetIdCollateral];
  const [amountSell, amountBuy] = isBuyingSynthetic
    ? [amountCollateral, amountSynthetic] 
    : [amountSynthetic, amountCollateral];

  // Pack order data into 256-bit words
  const w1 = assetIdSell;
  const w2 = assetIdBuy;
  const w3 = assetIdFee;

  // Calculate message hash
  let msg = pedersen([w1, w2]);
  msg = pedersen([msg, w3]);

  let w4 = BigInt(amountSell);
  w4 = (w4 << 64) + BigInt(amountBuy);
  w4 = (w4 << 64) + BigInt(maxAmountFee);
  w4 = (w4 << 32) + BigInt(nonce);
  msg = pedersen([msg, w4.toString(16)]);

  let w5 = BigInt(limitOrderWithFees); // Constant identifier
  w5 = (w5 << 64) + BigInt(positionId);
  w5 = (w5 << 64) + BigInt(positionId);
  w5 = (w5 << 64) + BigInt(positionId);
  w5 = (w5 << 32) + BigInt(expirationTimestamp);
  w5 = w5 << 17;

  return pedersen([msg, w5.toString(16)]);
}
```

### Transfer Signature

Used to authorize transfers between Layer 2 accounts.

#### Parameters

* `assetId` - Asset ID being transferred
* `receiverPublicKey` - Recipient's public key
* `senderPositionId` - Sender's position ID
* `receiverPositionId` - Recipient's position ID
* `srcFeePositionId` - Fee source position ID
* `nonce` - Unique transfer identifier
* `amount` - Transfer amount
* `expirationTimestamp` - Unix timestamp when transfer expires
* `assetIdFee` - Fee token asset ID (optional, default '0')
* `maxAmountFee` - Maximum fee amount (optional, default '0')

#### Calculation

The following TypeScript function constructs the transfer message for signing:

```typescript
function getTransferMsg({
  assetId,
  receiverPublicKey,
  senderPositionId,
  receiverPositionId,
  srcFeePositionId,
  nonce,
  amount,
  expirationTimestamp,
  assetIdFee = '0',
  maxAmountFee = '0'
}) {
  // Pack transfer data into 256-bit words
  const w1 = assetId;
  const w2 = assetIdFee;
  const w3 = receiverPublicKey;

  let w4 = BigInt(senderPositionId);
  w4 = (w4 << 64) + BigInt(receiverPositionId);
  w4 = (w4 << 64) + BigInt(srcFeePositionId); 
  w4 = (w4 << 32) + BigInt(nonce);

  let w5 = BigInt(transfer); // Constant identifier
  w5 = (w5 << 64) + BigInt(amount);
  w5 = (w5 << 64) + BigInt(maxAmountFee);
  w5 = (w5 << 32) + BigInt(expirationTimestamp);
  w5 = w5 << 81;

  // Calculate message hash
  let msg = pedersen([w1, w2]);
  msg = pedersen([msg, w3]);
  msg = pedersen([msg, w4.toString(16)]);
  return pedersen([msg, w5.toString(16)]);
}
```

For more details on the signature construction, see the [StarkEx documentation](https://docs.starkware.co/starkex/perpetual/signature_construction_perpetual.html).

# Meta Data API

## MetaDataPublicApi

### GET Server Time

GET /api/v1/public/meta/getServerTime

> Example Response

> 200 Response

```json
{
    "code": "SUCCESS",
    "data": {
        "timeMillis": "1734596189305"
    },
    "msg": null,
    "errorParam": null,
    "requestTime": "1734596189305",
    "responseTime": "1734596189305",
    "traceId": "a69e6ec51701d7246cb344a719c99cbf"
}
```

#### Response Body

| Status Code | Status Code Description                                 | Description      | Data Model               |
| ----------- | ------------------------------------------------------- | ---------------- | ------------------------ |
| 200         | [OK](https://tools.ietf.org/html/rfc7231#section-6.3.1) | default response | [Result](#getservertime) |

### GET Meta Data

GET /api/v1/public/meta/getMetaData

> Example Response

> 200 Response

```json
{
    "code": "SUCCESS",
    "data": {
        "global": {
            "appName": "edgeX",
            "appEnv": "testnet",
            "appOnlySignOn": "https://testnet.edgex.exchange",
            "feeAccountId": "123456",
            "feeAccountL2Key": "0x1e240",
            "poolAccountId": "542076087396467085",
            "poolAccountL2Key": "0x3bf794b4433e0a8b353da361bb7284c670914d27ed04698e6abed0bf1198028",
            "fastWithdrawAccountId": "542076087396467085",
            "fastWithdrawAccountL2Key": "0x3bf794b4433e0a8b353da361bb7284c670914d27ed04698e6abed0bf1198028",
            "fastWithdrawMaxAmount": "100000",
            "fastWithdrawRegistryAddress": "0xb2846943C2EdA3830Fb784d2a6de93435267b11D",
            "starkExChainId": "0xaa36a7",
            "starkExContractAddress": "0xa3Cb2622C532e46c4376FAd4AbFDf9eDC717BABf",
            "starkExCollateralCoin": {
                "coinId": "1000",
                "coinName": "USDT",
                "stepSize": "0.000001",
                "showStepSize": "0.0001",
                "iconUrl": "https://static.edgex.exchange/icons/coin/USDT.svg",
                "starkExAssetId": "0x33bda5c923bae4e84825b74762d5482889b9512465fbffc50d1ae4b82e345c3",
                "starkExResolution": "0xf4240"
            },
            "starkExMaxFundingRate": 1120,
            "starkExOrdersTreeHeight": 64,
            "starkExPositionsTreeHeight": 64,
            "starkExFundingValidityPeriod": 604800,
            "starkExPriceValidityPeriod": 31536000,
            "maintenanceReason": ""
        },
        "coinList": [
            {
                "coinId": "1000",
                "coinName": "USDT",
                "stepSize": "0.000001",
                "showStepSize": "0.0001",
                "iconUrl": "https://static.edgex.exchange/icons/coin/USDT.svg",
                "starkExAssetId": "0x33bda5c923bae4e84825b74762d5482889b9512465fbffc50d1ae4b82e345c3",
                "starkExResolution": "0xf4240"
            },
            {
                "coinId": "1001",
                "coinName": "BTC",
                "stepSize": "0.001",
                "showStepSize": "0.001",
                "iconUrl": "https://static.edgex.exchange/icons/coin/BTC.svg",
                "starkExAssetId": null,
                "starkExResolution": null
            }
        ],
        "contractList": [
            {
                "contractId": "10000001",
                "contractName": "BTCUSDT",
                "baseCoinId": "1001",
                "quoteCoinId": "1000",
                "tickSize": "0.1",
                "stepSize": "0.001",
                "minOrderSize": "0.001",
                "maxOrderSize": "50.000",
                "maxOrderBuyPriceRatio": "0.05",
                "minOrderSellPriceRatio": "0.05",
                "maxPositionSize": "60.000",
                "riskTierList": [
                    {
                        "tier": 1,
                        "positionValueUpperBound": "50000",
                        "maxLeverage": "100",
                        "maintenanceMarginRate": "0.005",
                        "starkExRisk": "21474837",
                        "starkExUpperBound": "214748364800000000000"
                    },
                    {
                        "tier": 22,
                        "positionValueUpperBound": "79228162514264337593543",
                        "maxLeverage": "6",
                        "maintenanceMarginRate": "0.105",
                        "starkExRisk": "450971567",
                        "starkExUpperBound": "340282366920938463463374607431768211455"
                    }
                ],
                "defaultTakerFeeRate": "0.00055",
                "defaultMakerFeeRate": "0.0002",
                "defaultLeverage": "50",
                "liquidateFeeRate": "0.01",
                "enableTrade": true,
                "enableDisplay": true,
                "enableOpenPosition": true,
                "fundingInterestRate": "0.0003",
                "fundingImpactMarginNotional": "10",
                "fundingMaxRate": "0.000234",
                "fundingMinRate": "-0.000234",
                "fundingRateIntervalMin": "240",
                "displayDigitMerge": "0.1,0.5,1,2,5",
                "displayMaxLeverage": "50",
                "displayMinLeverage": "1",
                "displayNewIcon": false,
                "displayHotIcon": true,
                "matchServerName": "edgex-match-server",
                "starkExSyntheticAssetId": "0x425443322d31300000000000000000",
                "starkExResolution": "0x2540be400",
                "starkExOraclePriceQuorum": "0x1",
                "starkExOraclePriceSignedAssetId": [
                    "0x425443555344000000000000000000004d616b6572",
                    "0x425443555344000000000000000000005374437277",
                    "0x4254435553440000000000000000000053746f726b",
                    "0x425443555344000000000000000000004465787472",
                    "0x4254435553440000000000000000000053744b6169"
                ],
                "starkExOraclePriceSigner": [
                    "0x28253746dcd68a62df58cda44db2613ab11c8d17deb036feaec5ece1f8a16c1",
                    "0x41dbe627aeab66504b837b3abd88ae2f58ba6d98ee7bbd7f226c4684d9e6225",
                    "0xcc85afe4ca87f9628370c432c447e569a01dc96d160015c8039959db8521c4",
                    "0x2af704df5467285c5d1bd7c08ee33c49057fb2a05ecdc4f949293190f28ce7e",
                    "0x63f0f8507cc674ff668985a1ea854d3b73835a8181bfbb4564ae422bf68a2c0"
                ]
            },
            {
                "contractId": "10000002",
                "contractName": "ETHUSDT",
                "baseCoinId": "1002",
                "quoteCoinId": "1000",
                "tickSize": "0.01",
                "stepSize": "0.01",
                "minOrderSize": "0.01",
                "maxOrderSize": "500.00",
                "maxOrderBuyPriceRatio": "0.05",
                "minOrderSellPriceRatio": "0.05",
                "maxPositionSize": "800.00",
                "riskTierList": [
                    {
                        "tier": 1,
                        "positionValueUpperBound": "50000",
                        "maxLeverage": "100",
                        "maintenanceMarginRate": "0.005",
                        "starkExRisk": "21474837",
                        "starkExUpperBound": "214748364800000000000"
                    },
                    {
                        "tier": 22,
                        "positionValueUpperBound": "79228162514264337593543",
                        "maxLeverage": "6",
                        "maintenanceMarginRate": "0.105",
                        "starkExRisk": "450971567",
                        "starkExUpperBound": "340282366920938463463374607431768211455"
                    }
                ],
                "defaultTakerFeeRate": "0.00055",
                "defaultMakerFeeRate": "0.0002",
                "defaultLeverage": "50",
                "liquidateFeeRate": "0.01",
                "enableTrade": true,
                "enableDisplay": true,
                "enableOpenPosition": true,
                "fundingInterestRate": "0.0003",
                "fundingImpactMarginNotional": "100",
                "fundingMaxRate": "0.000234",
                "fundingMinRate": "-0.000234",
                "fundingRateIntervalMin": "240",
                "displayDigitMerge": "0.01,0.02,0.04,0.1,0.2",
                "displayMaxLeverage": "50",
                "displayMinLeverage": "1",
                "displayNewIcon": true,
                "displayHotIcon": false,
                "matchServerName": "edgex-match-server",
                "starkExSyntheticAssetId": "0x4554482d3900000000000000000000",
                "starkExResolution": "0x3b9aca00",
                "starkExOraclePriceQuorum": "0x1",
                "starkExOraclePriceSignedAssetId": [
                    "0x455448555344000000000000000000004d616b6572",
                    "0x455448555344000000000000000000005374437277",
                    "0x4554485553440000000000000000000053746f726b",
                    "0x455448555344000000000000000000004465787472",
                    "0x4554485553440000000000000000000053744b6169"
                ],
                "starkExOraclePriceSigner": [
                    "0x28253746dcd68a62df58cda44db2613ab11c8d17deb036feaec5ece1f8a16c1",
                    "0x41dbe627aeab66504b837b3abd88ae2f58ba6d98ee7bbd7f226c4684d9e6225",
                    "0xcc85afe4ca87f9628370c432c447e569a01dc96d160015c8039959db8521c4",
                    "0x2af704df5467285c5d1bd7c08ee33c49057fb2a05ecdc4f949293190f28ce7e",
                    "0x63f0f8507cc674ff668985a1ea854d3b73835a8181bfbb4564ae422bf68a2c0"
                ]
            }
        ],
        "multiChain": {
            "coinId": "1000",
            "maxWithdraw": "100000",
            "minWithdraw": "0",
            "minDeposit": "10",
            "chainList": [
                {
                    "chain": "Sepolia - Testnet",
                    "chainId": "11155111",
                    "chainIconUrl": "https://static.edgex.exchange/icons/chain/sepolia.svg",
                    "contractAddress": "0xC820e27D4821071129D4fB04CcD9ae8a370373bc",
                    "depositGasFeeLess": false,
                    "feeLess": false,
                    "feeRate": "0.0001",
                    "gasLess": false,
                    "gasToken": "ETH",
                    "minFee": "2",
                    "rpcUrl": "https://rpc.edgex.exchange/RMZZpeTnB6hjfcm8xNNyo6cKa9Zn4qgB/eth-sepolia",
                    "webTxUrl": "https://sepolia.etherscan.io/tx/",
                    "withdrawGasFeeLess": false,
                    "tokenList": [
                        {
                            "tokenAddress": "0xd98B590ebE0a3eD8C144170bA4122D402182976f",
                            "decimals": "6",
                            "iconUrl": "https://static.edgex.exchange/icons/coin/USDT.svg",
                            "token": "USDT",
                            "pullOff": false,
                            "withdrawEnable": true,
                            "useFixedRate": false,
                            "fixedRate": ""
                        }
                    ],
                    "txConfirm": "10",
                    "blockTime": "12",
                    "allowAaDeposit": true,
                    "allowAaWithdraw": false,
                    "appRpcUrl": "https://rpc.edgex.exchange/GujYf2XWDvzXDpQdXno92DGRhfy7HuLK/eth-sepolia"
                },
                {
                    "chain": "BNB - Testnet",
                    "chainId": "97",
                    "chainIconUrl": "https://static.edgex.exchange/icons/chain/sepolia.svg",
                    "contractAddress": "0xBe8dCAE2b5E58BdEe4695F7f366fF0A8B0A414D1",
                    "depositGasFeeLess": false,
                    "feeLess": false,
                    "feeRate": "0.0001",
                    "gasLess": false,
                    "gasToken": "BSC",
                    "minFee": "2",
                    "rpcUrl": "https://rpc.edgex.exchange/RMZZpeTnB6hjfcm8xNNyo6cKa9Zn4qgB/bsc-testnet",
                    "webTxUrl": "https://testnet.bscscan.com/tx/",
                    "withdrawGasFeeLess": false,
                    "tokenList": [
                        {
                            "tokenAddress": "0xda6c748A7593826e410183F05893dbB363D025a1",
                            "decimals": "6",
                            "iconUrl": "https://static.edgex.exchange/icons/coin/USDT.svg",
                            "token": "USDT",
                            "pullOff": false,
                            "withdrawEnable": true,
                            "useFixedRate": false,
                            "fixedRate": ""
                        }
                    ],
                    "txConfirm": "10",
                    "blockTime": "3",
                    "allowAaDeposit": false,
                    "allowAaWithdraw": false,
                    "appRpcUrl": "https://rpc.edgex.exchange/GujYf2XWDvzXDpQdXno92DGRhfy7HuLK/bsc-testnet"
                },
                {
                    "chain": "Arbitrum - Testnet",
                    "chainId": "421614",
                    "chainIconUrl": "https://static.edgex.exchange/icons/chain/sepolia.svg",
                    "contractAddress": "0xeeA926DB072E839063321776ddAdaddeECdF9718",
                    "depositGasFeeLess": false,
                    "feeLess": false,
                    "feeRate": "0.0001",
                    "gasLess": false,
                    "gasToken": "ETH",
                    "minFee": "2",
                    "rpcUrl": "https://rpc.edgex.exchange/RMZZpeTnB6hjfcm8xNNyo6cKa9Zn4qgB/arbitrum-sepolia",
                    "webTxUrl": "https://sepolia.arbiscan.io/tx/",
                    "withdrawGasFeeLess": false,
                    "tokenList": [
                        {
                            "tokenAddress": "0x608babb39bb03C038b8DABc3D4bF4e0D02d455Cd",
                            "decimals": "18",
                            "iconUrl": "https://static.edgex.exchange/icons/coin/USDT.svg",
                            "token": "USDT",
                            "pullOff": false,
                            "withdrawEnable": true,
                            "useFixedRate": false,
                            "fixedRate": ""
                        }
                    ],
                    "txConfirm": "10",
                    "blockTime": "3",
                    "allowAaDeposit": true,
                    "allowAaWithdraw": true,
                    "appRpcUrl": "https://rpc.edgex.exchange/GujYf2XWDvzXDpQdXno92DGRhfy7HuLK/arbitrum-sepolia"
                }
            ]
        }
    },
    "msg": null,
    "errorParam": null,
    "requestTime": "1734595526342",
    "responseTime": "1734595526343",
    "traceId": "1ee9b62c30925f0df6bd6c8604f32df4"
}
```

#### Response Body

| Status Code | Status Code Description                                 | Description      | Data Model                |
| ----------- | ------------------------------------------------------- | ---------------- | ------------------------- |
| 200         | [OK](https://tools.ietf.org/html/rfc7231#section-6.3.1) | default response | [Result](#MetadataResult) |

## Data Models

#### MetadataResult

| Name         | Type                        | Required | Constraints | Description                                             |
| ------------ | --------------------------- | -------- | ----------- | ------------------------------------------------------- |
| code         | string                      | false    | none        | Status code. "SUCCESS" for success, others for failure. |
| data         | [MetaData](#schemametadata) | false    | none        | Global metadata                                         |
| errorParam   | object                      | false    | none        | Parameter information in error message                  |
| requestTime  | string(timestamp)           | false    | none        | Server request receiving time                           |
| responseTime | string(timestamp)           | false    | none        | Server response returning time                          |
| traceId      | string                      | false    | none        | Call traceId                                            |

#### schemametadata

| Name         | Type                            | Required | Constraints | Description                          |
| ------------ | ------------------------------- | -------- | ----------- | ------------------------------------ |
| global       | [Global](#schemaglobal)         | false    | none        | Global meta information              |
| coinList     | \[[Coin](#schemacoin)]          | false    | none        | All coin meta information            |
| contractList | \[[Contract](#schemacontract)]  | false    | none        | All contract meta information        |
| multiChain   | [MultiChain](#schemamultichain) | false    | none        | Cross-chain withdrawal related class |

#### schemamultichain

| Name        | Type                     | Required | Constraints | Description                         |
| ----------- | ------------------------ | -------- | ----------- | ----------------------------------- |
| coinId      | string(int64)            | false    | none        | Asset id for deposit and withdrawal |
| maxWithdraw | string                   | false    | none        | Maximum withdrawal amount           |
| minWithdraw | string                   | false    | none        | Minimum withdrawal amount           |
| minDeposit  | string                   | false    | none        | Minimum deposit amount              |
| chainList   | \[[Chain](#schemachain)] | false    | none        | Supported chains                    |

#### schemachain

| Name               | Type                                         | Required | Constraints | Description                                                                                                       |
| ------------------ | -------------------------------------------- | -------- | ----------- | ----------------------------------------------------------------------------------------------------------------- |
| chain              | string                                       | false    | none        | Main chain name                                                                                                   |
| chainId            | string(int64)                                | false    | none        | chainId                                                                                                           |
| chainIconUrl       | string                                       | false    | none        | Main chain icon url                                                                                               |
| contractAddress    | string                                       | false    | none        | Contract address                                                                                                  |
| depositGasFeeLess  | boolean                                      | false    | none        | Whether to charge deposit fee                                                                                     |
| feeLess            | boolean                                      | false    | none        | Whether to exempt from fees                                                                                       |
| feeRate            | string                                       | false    | none        | Fee rate                                                                                                          |
| gasLess            | boolean                                      | false    | none        | Whether to charge gas fee                                                                                         |
| gasToken           | string                                       | false    | none        | Main chain token name                                                                                             |
| minFee             | string                                       | false    | none        | Minimum withdrawal fee. If gas + value\*fee\_rate is less than min\_fee, it will be charged according to min\_fee |
| rpcUrl             | string                                       | false    | none        | Online node service of the chain                                                                                  |
| webTxUrl           | string                                       | false    | none        | Transaction tx link                                                                                               |
| withdrawGasFeeLess | boolean                                      | false    | none        | Whether to charge withdrawal fee                                                                                  |
| tokenList          | \[[MultiChainToken](#schemamultichaintoken)] | false    | none        | Collection of cross-chain related token information                                                               |
| txConfirm          | string(int64)                                | false    | none        | Number of confirmations for on-chain deposit                                                                      |
| blockTime          | string                                       | false    | none        | Block time                                                                                                        |
| appRpcUrl          | string                                       | false    | none        | none                                                                                                              |

#### schemamultichaintoken

| Name           | Type          | Required | Constraints | Description                                         |
| -------------- | ------------- | -------- | ----------- | --------------------------------------------------- |
| tokenAddress   | string        | false    | none        | Token contract address                              |
| decimals       | string(int64) | false    | none        | Token precision                                     |
| iconUrl        | string        | false    | none        | Token icon url                                      |
| token          | string        | false    | none        | Token name                                          |
| pullOff        | boolean       | false    | none        | Whether to delist, default is false                 |
| withdrawEnable | boolean       | false    | none        | Whether to support withdrawal of this type of asset |
| useFixedRate   | boolean       | false    | none        | Whether to use a fixed exchange rate                |
| fixedRate      | string        | false    | none        | Fixed exchange rate                                 |

#### schemacontract

| Name                            | Type                           | Required | Constraints | Description                                                                                                                           |
| ------------------------------- | ------------------------------ | -------- | ----------- | ------------------------------------------------------------------------------------------------------------------------------------- |
| contractId                      | string(int64)                  | false    | none        | Perpetual contract pair identifier                                                                                                    |
| contractName                    | string                         | false    | none        | Perpetual contract pair name                                                                                                          |
| baseCoinId                      | string(int64)                  | false    | none        | e.g., 10000001 (BTC)                                                                                                                  |
| quoteCoinId                     | string(int64)                  | false    | none        | e.g., 1001 (USD/USDT)                                                                                                                 |
| tickSize                        | string(decimal)                | false    | none        | Minimum price increment (quoteCoinId)                                                                                                 |
| stepSize                        | string(decimal)                | false    | none        | Minimum quantity increment (baseCoinId)                                                                                               |
| minOrderSize                    | string(decimal)                | false    | none        | Minimum order quantity (baseCoinId)                                                                                                   |
| maxOrderSize                    | string(decimal)                | false    | none        | Maximum order quantity (baseCoinId)                                                                                                   |
| maxOrderBuyPriceRatio           | string(decimal)                | false    | none        | Maximum limit buy order price ratio (compared to oracle price), decimal (quote\_coin\_id)                                             |
| minOrderSellPriceRatio          | string(decimal)                | false    | none        | Minimum limit sell order price ratio (compared to oracle price), decimal (quote\_coin\_id)                                            |
| maxPositionSize                 | string(decimal)                | false    | none        | Maximum position quantity (baseCoinId)                                                                                                |
| riskTierList                    | \[[RiskTier](#schemarisktier)] | false    | none        | List of risk limit tiers                                                                                                              |
| defaultTakerFeeRate             | string(decimal)                | false    | none        | Default taker fee rate for the contract                                                                                               |
| defaultMakerFeeRate             | string(decimal)                | false    | none        | Default maker fee rate for the contract                                                                                               |
| defaultLeverage                 | string(decimal)                | false    | none        | Initial default leverage multiplier when user has not set a trading leverage                                                          |
| liquidateFeeRate                | string(decimal)                | false    | none        | Liquidation fee rate                                                                                                                  |
| enableTrade                     | boolean                        | false    | none        | Whether trading is allowed. true: allowed, false: not allowed                                                                         |
| enableDisplay                   | boolean                        | false    | none        | Whether to display. true: display, false: hide                                                                                        |
| enableOpenPosition              | boolean                        | false    | none        | Whether opening positions is allowed. true: allowed to open and close, false: only allowed to close positions                         |
| fundingInterestRate             | string(decimal)                | false    | none        | Default value of overall interest rate, e.g., 0.0003                                                                                  |
| fundingImpactMarginNotional     | string(decimal)                | false    | none        | Quantity for calculating depth-weighted bid/ask price, e.g., 8000                                                                     |
| fundingMaxRate                  | string(decimal)                | false    | none        | Maximum funding rate, e.g., 0.000234                                                                                                  |
| fundingMinRate                  | string(decimal)                | false    | none        | Minimum funding rate, e.g., -0.000234                                                                                                 |
| fundingRateIntervalMin          | string(decimal)                | false    | none        | Settlement interval of funding rate (in minutes, must be an integer multiple of 60 minutes, settlement starts from 00:00 UTC) decimal |
| displayDigitMerge               | string(decimal)                | false    | none        | Depth merge. e.g., "1,0.1,0.001"                                                                                                      |
| displayMaxLeverage              | string(decimal)                | false    | none        | Maximum leverage multiplier to display, decimal. e.g., 20                                                                             |
| displayMinLeverage              | string(decimal)                | false    | none        | Minimum leverage multiplier to display, decimal. e.g., 1                                                                              |
| displayNewIcon                  | boolean                        | false    | none        | Whether it is a newly listed pair                                                                                                     |
| displayHotIcon                  | boolean                        | false    | none        | Whether it is a hot pair                                                                                                              |
| matchServerName                 | string                         | false    | none        | Matching service name, e.g., xxx-match-server-a. This value cannot be changed once configured, otherwise data migration is required.  |
| starkExSyntheticAssetId         | string(int64)                  | false    | none        | Synthetic asset id of the current pair, bigint for hex str.                                                                           |
| starkExResolution               | string(int64)                  | false    | none        | Processing precision of the quantity held by the current pair, bigint for hex str                                                     |
| starkExOraclePriceQuorum        | string(int64)                  | false    | none        | Legal number of oracle prices, bigint for hex str                                                                                     |
| starkExOraclePriceSignedAssetId | \[string]                      | false    | none        | bigint for hex str                                                                                                                    |
| starkExOraclePriceSigner        | \[string]                      | false    | none        | bigint for hex str                                                                                                                    |

#### schemarisktier

| Name                    | Type            | Required | Constraints | Description                                                                                                                                                                |
| ----------------------- | --------------- | -------- | ----------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |
| tier                    | integer(int32)  | false    | none        | Tier, starting from 1                                                                                                                                                      |
| positionValueUpperBound | string(decimal) | false    | none        | Upper limit of position value for the tier (inclusive)                                                                                                                     |
| maxLeverage             | string(decimal) | false    | none        | Maximum available leverage for the tier                                                                                                                                    |
| maintenanceMarginRate   | string(decimal) | false    | none        | Maintenance margin rate for the tier (only for display, the actual maintenance margin rate used is stark\_ex\_risk / 2^32 as an accurate maintenance margin rate), decimal |
| starkExRisk             | string(int64)   | false    | none        | 1 ≤ risk < 2^32                                                                                                                                                            |
| starkExUpperBound       | string(int64)   | false    | none        | bigint. 0 ≤ upper\_bound ≤ 2^128-1                                                                                                                                         |

#### schemacoin

| Name              | Type            | Required | Constraints | Description                                                        |
| ----------------- | --------------- | -------- | ----------- | ------------------------------------------------------------------ |
| coinId            | string(int64)   | false    | none        | Coin id                                                            |
| coinName          | string          | false    | none        | Coin name                                                          |
| stepSize          | string(decimal) | false    | none        | Minimum quantity unit                                              |
| showStepSize      | string(decimal) | false    | none        | Minimum unit displayed to the user                                 |
| iconUrl           | string(url)     | false    | none        | Coin icon url                                                      |
| starkExAssetId    | string(int64)   | false    | none        | starkex asset id. If empty, it means it does not exist             |
| starkExResolution | string          | false    | none        | starkex processing precision. If empty, it means it does not exist |

#### schemaglobal

| Name                         | Type                | Required | Constraints | Description                                                                                                                                                              |
| ---------------------------- | ------------------- | -------- | ----------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------ |
| appName                      | string              | false    | none        | xxx                                                                                                                                                                      |
| appEnv                       | string              | false    | none        | dev/testnet/mainnet                                                                                                                                                      |
| appOnlySignOn                | string              | false    | none        | https://xxx.exchange                                                                                                                                                     |
| feeAccountId                 | string(int64)       | false    | none        | Fee account id                                                                                                                                                           |
| feeAccountL2Key              | string              | false    | none        | Fee account l2Key, bigint for hex str                                                                                                                                    |
| poolAccountId                | string(int64)       | false    | none        | Asset pool account id                                                                                                                                                    |
| poolAccountL2Key             | string              | false    | none        | Asset pool account l2Key, bigint for hex str                                                                                                                             |
| fastWithdrawAccountId        | string(int64)       | false    | none        | Fast withdrawal account id                                                                                                                                               |
| fastWithdrawAccountL2Key     | string              | false    | none        | Fast withdrawal account l2Key, bigint for hex str                                                                                                                        |
| fastWithdrawMaxAmount        | string              | false    | none        | Maximum amount for fast withdrawal                                                                                                                                       |
| fastWithdrawRegistryAddress  | string              | false    | none        | Fast withdrawal account address                                                                                                                                          |
| starkExChainId               | string              | false    | none        | Chain id of starkex. bigint for hex str                                                                                                                                  |
| starkExContractAddress       | string              | false    | none        | starkex contract address.                                                                                                                                                |
| starkExCollateralCoin        | [Coin](#schemacoin) | false    | none        | Coin meta information                                                                                                                                                    |
| starkExMaxFundingRate        | integer(int32)      | false    | none        | Maximum funding rate per second after starkex precision processing. i.e. stark\_ex\_max\_funding\_rate \* 2^32 is the actual maximum funding rate per second. E.g.: 1120 |
| starkExOrdersTreeHeight      | integer(int32)      | false    | none        | Order merkle tree height. E.g.: 64                                                                                                                                       |
| starkExPositionsTreeHeight   | integer(int32)      | false    | none        | Account merkle tree height. E.g.: 64                                                                                                                                     |
| starkExFundingValidityPeriod | integer(int32)      | false    | none        | Funding rate submission validity period in seconds. E.g.: 86400                                                                                                          |
| starkExPriceValidityPeriod   | integer(int32)      | false    | none        | Oracle price submission validity period in seconds. E.g.: 86400                                                                                                          |
| maintenanceReason            | string              | false    | none        | Maintenance reason, empty if no maintenance                                                                                                                              |

#### getservertime

| Name         | Type                                  | Required | Constraints | Description                                             |
| ------------ | ------------------------------------- | -------- | ----------- | ------------------------------------------------------- |
| code         | string                                | false    | none        | Status code. "SUCCESS" for success, others for failure. |
| data         | [GetServerTime](#schemagetservertime) | false    | none        | Server time                                             |
| errorParam   | object                                | false    | none        | Parameter information in error message                  |
| requestTime  | string(timestamp)                     | false    | none        | Server request receiving time                           |
| responseTime | string(timestamp)                     | false    | none        | Server response returning time                          |
| traceId      | string                                | false    | none        | Call traceId                                            |

#### schemagetservertime

| Name       | Type          | Required | Constraints | Description                    |
| ---------- | ------------- | -------- | ----------- | ------------------------------ |
| timeMillis | string(int64) | false    | none        | Server timestamp, milliseconds |

# Quote API

## QuotePublicApi

### GET Get Quote Summary

GET /api/v1/public/quote/getTicketSummary

#### Request Parameters

| Name   | Location | Type   | Required | Description    |
| ------ | -------- | ------ | -------- | -------------- |
| period | query    | string | No       | Summary period |

> Response Example

> 200 Response

```json
{
    "code": "SUCCESS",
    "data": {
        "tickerSummary": {
            "period": "LAST_DAY_1",
            "trades": "31450",
            "value": "201048203.7979",
            "openInterest": "13.565"
        }
    },
    "msg": null,
    "errorParam": null,
    "requestTime": "1734596957000",
    "responseTime": "1734596957003",
    "traceId": "574a8b43497ebd0bca55d0b257d034fa"
}
```

#### Response

| Status Code | Status Code Meaning                                     | Description      | Data Model                       |
| ----------- | ------------------------------------------------------- | ---------------- | -------------------------------- |
| 200         | [OK](https://tools.ietf.org/html/rfc7231#section-6.3.1) | default response | [Result](#gettickersummarymodel) |

### GET Query 24-Hour Quotes

GET /api/v1/public/quote/getTicker

#### Request Parameters

| Name       | Location | Type   | Required | Description |
| ---------- | -------- | ------ | -------- | ----------- |
| contractId | query    | string | No       | Contract ID |

> Response Example

> 200 Response

```json
{
    "code": "SUCCESS",
    "data": [
        {
            "contractId": "10000001",
            "contractName": "BTCUSDT",
            "priceChange": "-2270.5",
            "priceChangePercent": "-0.021849",
            "trades": "79372",
            "size": "499.487",
            "value": "50821443.7464",
            "high": "105331.5",
            "low": "98755.0",
            "open": "103913.2",
            "close": "101642.7",
            "highTime": "1734524115631",
            "lowTime": "1734575388228",
            "startTime": "1734510600000",
            "endTime": "1734597000000",
            "lastPrice": "101642.7",
            "indexPrice": "101676.380723500",
            "oraclePrice": "101636.3750002346932888031005859375",
            "openInterest": "0.105",
            "fundingRate": "-0.00012236",
            "fundingTime": "1734595200000",
            "nextFundingTime": "1734609600000"
        }
    ],
    "msg": null,
    "errorParam": null,
    "requestTime": "1734597508246",
    "responseTime": "1734597508250",
    "traceId": "a49014b0ad76a121193d4717294f85fc"
}
```

#### Response

| Status Code | Status Code Meaning                                     | Description      | Data Model                        |
| ----------- | ------------------------------------------------------- | ---------------- | --------------------------------- |
| 200         | [OK](https://tools.ietf.org/html/rfc7231#section-6.3.1) | default response | [Result](#schemaresultlistticker) |

### GET Query Multi-Contract Quantitative K-Line

GET /api/v1/public/quote/getMultiContractKline

#### Request Parameters

| Name                          | Location | Type   | Required | Description                                                                           |
| ----------------------------- | -------- | ------ | -------- | ------------------------------------------------------------------------------------- |
| contractIdList                | query    | string | No       | Collection of Contract IDs                                                            |
| priceType                     | query    | string | No       | Price type                                                                            |
| klineType                     | query    | string | No       | K-line type                                                                           |
| size                          | query    | string | No       | Number to retrieve. Must be greater than 0 and less than or equal to 200              |
| filterBeginKlineTimeInclusive | query    | string | No       | Query start time (if 0, means from current time). Returns in descending order by time |
| filterEndKlineTimeExclusive   | query    | string | No       | Query end time                                                                        |

> Request Example

```
https://pro.edgex.exchange/api/v1/public/quote/getMultiContractKline?contractIdList=10000001&klineType=HOUR_1&filterBeginKlineTimeInclusive=1733416860000&filterEndKlineTimeExclusive=1734601200000&priceType=LAST_PRICE
```

> Response Example

> 200 Response

```json
{
    "code": "SUCCESS",
    "data": [
        {
            "contractId": "10000001",
            "klineList": [
                {
                    "klineId": "687194849731486048",
                    "contractId": "10000001",
                    "contractName": "BTCUSDT",
                    "klineType": "HOUR_1",
                    "klineTime": "1734595200000",
                    "priceType": "LAST_PRICE",
                    "trades": "3123",
                    "size": "7.947",
                    "value": "807240.1268",
                    "high": "101798.4",
                    "low": "101326.3",
                    "open": "101603.8",
                    "close": "101605.6",
                    "makerBuySize": "5.222",
                    "makerBuyValue": "530431.6634"
                }
            ]
        }
    ],
    "msg": null,
    "errorParam": null,
    "requestTime": "1734601896988",
    "responseTime": "1734601897009",
    "traceId": "7edd9609a0c5976c1cb58bdee3d08088"
}

```

#### Response

| Status Code | Status Code Meaning                                     | Description      | Data Model                               |
| ----------- | ------------------------------------------------------- | ---------------- | ---------------------------------------- |
| 200         | [OK](https://tools.ietf.org/html/rfc7231#section-6.3.1) | default response | [Result](#schemaresultlistcontractkline) |

#### Response Data Structure

### GET Query K-Line

GET /api/v1/public/quote/getKline

#### Request Parameters

| Name                          | Location | Type   | Required | Description                                                                           |
| ----------------------------- | -------- | ------ | -------- | ------------------------------------------------------------------------------------- |
| contractId                    | query    | string | No       | Contract ID                                                                           |
| priceType                     | query    | string | No       | Price type                                                                            |
| klineType                     | query    | string | No       | K-line type                                                                           |
| size                          | query    | string | No       | Number to retrieve. Must be greater than 0 and less than or equal to 1000             |
| offsetData                    | query    | string | No       | Pagination offset. If empty, get the first page                                       |
| filterBeginKlineTimeInclusive | query    | string | No       | Query start time (if 0, means from current time). Returns in descending order by time |
| filterEndKlineTimeExclusive   | query    | string | No       | Query end time                                                                        |

> Request Example

```
https://pro.edgex.exchange/api/v1/public/quote/getKline?contractId=10000002&klineType=HOUR_1&filterBeginKlineTimeInclusive=1733416860000&filterEndKlineTimeExclusive=1734601200000&priceType=LAST_PRICE
```

> Response Example

> 200 Response

```json
{
    "code": "SUCCESS",
    "data": {
        "dataList": [
            {
                "klineId": "687194918450962784",
                "contractId": "10000002",
                "contractName": "ETHUSDT",
                "klineType": "HOUR_1",
                "klineTime": "1734595200000",
                "priceType": "LAST_PRICE",
                "trades": "3142",
                "size": "111.96",
                "value": "412199.6286",
                "high": "3694.59",
                "low": "3667.42",
                "open": "3694.57",
                "close": "3670.42",
                "makerBuySize": "52.21",
                "makerBuyValue": "192147.4907"
            }
        ],
        "nextPageOffsetData": ""
    },
    "msg": null,
    "errorParam": null,
    "requestTime": "1734601267556",
    "responseTime": "1734601267581",
    "traceId": "72cfd2eeb27fc602aa64990ad84cd8dd"
}
```

#### Response

| Status Code | Status Code Meaning                                     | Description      | Data Model                           |
| ----------- | ------------------------------------------------------- | ---------------- | ------------------------------------ |
| 200         | [OK](https://tools.ietf.org/html/rfc7231#section-6.3.1) | default response | [Result](#schemaresultpagedatakline) |

### GET Get Exchange Long Short Ratio

GET /api/v1/public/quote/getExchangeLongShortRatio

#### Request Parameters

| Name                 | Location | Type   | Required | Description                                   |
| -------------------- | -------- | ------ | -------- | --------------------------------------------- |
| range                | query    | string | No       | If empty, return data with the smallest range |
| filterContractIdList | query    | string | No       | If empty, return data for all contracts       |
| filterExchangeList   | query    | string | No       | If empty, return data for all exchanges       |

> Response Example

> 200 Response

```json
{
    "code": "SUCCESS",
    "data": {
        "exchangeLongShortRatioList": [
            {
                "range": "30m",
                "contractId": "10000001",
                "exchange": "_total_",
                "buyRatio": "50.9900",
                "sellRatio": "49.0100",
                "buyVolUsd": "567855766.2701",
                "sellVolUsd": "545892952.7900",
                "createdTime": "1734597018839",
                "updatedTime": "1734597018839"
            }
        ],
        "allRangeList": [
            "30m",
            "1h",
            "4h",
            "12h",
            "24h"
        ]
    },
    "msg": null,
    "errorParam": null,
    "requestTime": "1734597836994",
    "responseTime": "1734597837001",
    "traceId": "60af97ec1357f9d00da50bada9e4364c"
}
```

#### Response

| Status Code | Status Code Meaning                                     | Description      | Data Model                       |
| ----------- | ------------------------------------------------------- | ---------------- | -------------------------------- |
| 200         | [OK](https://tools.ietf.org/html/rfc7231#section-6.3.1) | default response | [Result](#gettickersummarymodel) |

### GET Query Order Book Depth

GET /api/v1/public/quote/getDepth

#### Request Parameters

| Name       | Location | Type   | Required | Description                                        |
| ---------- | -------- | ------ | -------- | -------------------------------------------------- |
| contractId | query    | string | No       | Contract ID                                        |
| level      | query    | string | No       | Depth level. Currently 15 and 200 levels available |

> Response Example

> 200 Response

```json
{
    "code": "SUCCESS",
    "data": [
        {
            "startVersion": "201223746",
            "endVersion": "201223747",
            "level": 15,
            "contractId": "10000001",
            "contractName": "BTCUSDT",
            "asks": [
                {
                    "price": "101695.9",
                    "size": "0.579"
                },
                {
                    "price": "101696.0",
                    "size": "0.923"
                },
                {
                    "price": "101703.0",
                    "size": "0.129"
                }
            ],
            "bids": [
                {
                    "price": "101695.5",
                    "size": "1.710"
                },
                {
                    "price": "101694.1",
                    "size": "0.189"
                },
                {
                    "price": "101692.9",
                    "size": "0.223"
                }
            ],
            "depthType": "SNAPSHOT"
        }
    ],
    "msg": null,
    "errorParam": null,
    "requestTime": "1734598036434",
    "responseTime": "1734598036435",
    "traceId": "99b69f04bac0df6e37961f249b9545e4"
}
```

#### Response

| Status Code | Status Code Meaning                                     | Description      | Data Model                       |
| ----------- | ------------------------------------------------------- | ---------------- | -------------------------------- |
| 200         | [OK](https://tools.ietf.org/html/rfc7231#section-6.3.1) | default response | [Result](#schemaresultlistdepth) |

#### Response Data Structure

## Data Models

#### schemaresultlistdepth

| Name         | Type                     | Required | Constraints | Chinese Name | Description                                             |
| ------------ | ------------------------ | -------- | ----------- | ------------ | ------------------------------------------------------- |
| code         | string                   | false    | none        |              | Status code. "SUCCESS" for success, others for failures |
| data         | \[[Depth](#schemadepth)] | false    | none        |              | Correct response data                                   |
| errorParam   | object                   | false    | none        |              | Parameter information in error messages                 |
| requestTime  | string(timestamp)        | false    | none        |              | Server request reception time                           |
| responseTime | string(timestamp)        | false    | none        |              | Server response return time                             |
| traceId      | string                   | false    | none        |              | Call trace ID                                           |

#### schemadepth

| Name         | Type                             | Required | Constraints | Chinese Name | Description                     |
| ------------ | -------------------------------- | -------- | ----------- | ------------ | ------------------------------- |
| startVersion | string(int64)                    | false    | none        |              | Start order book version number |
| endVersion   | string(int64)                    | false    | none        |              | End order book version number   |
| level        | integer(int32)                   | false    | none        |              | Depth level                     |
| contractId   | string(int64)                    | false    | none        |              | Contract ID                     |
| contractName | string                           | false    | none        |              | Contract name                   |
| asks         | \[[BookOrder](#schemabookorder)] | false    | none        |              | Ask list                        |
| bids         | \[[BookOrder](#schemabookorder)] | false    | none        |              | Bid list                        |
| depthType    | string                           | false    | none        |              | Depth type                      |

**Enum Values**

| Property  | Value                |
| --------- | -------------------- |
| depthType | UNKNOWN\_DEPTH\_TYPE |
| depthType | SNAPSHOT             |
| depthType | CHANGED              |
| depthType | UNRECOGNIZED         |

#### schemabookorder

| Name  | Type            | Required | Constraints | Chinese Name | Description |
| ----- | --------------- | -------- | ----------- | ------------ | ----------- |
| price | string(decimal) | false    | none        |              | Price       |
| size  | string(decimal) | false    | none        |              | Quantity    |

#### schemaresultpagedatakline

| Name         | Type                                  | Required | Constraints | Chinese Name | Description                                             |
| ------------ | ------------------------------------- | -------- | ----------- | ------------ | ------------------------------------------------------- |
| code         | string                                | false    | none        |              | Status code. "SUCCESS" for success, others for failures |
| data         | [PageDataKline](#schemapagedatakline) | false    | none        |              | Generic paginated response                              |
| errorParam   | object                                | false    | none        |              | Parameter information in error messages                 |
| requestTime  | string(timestamp)                     | false    | none        |              | Server request reception time                           |
| responseTime | string(timestamp)                     | false    | none        |              | Server response return time                             |
| traceId      | string                                | false    | none        |              | Call trace ID                                           |

#### schemapagedatakline

| Name               | Type                     | Required | Constraints | Chinese Name | Description                                                              |
| ------------------ | ------------------------ | -------- | ----------- | ------------ | ------------------------------------------------------------------------ |
| dataList           | \[[Kline](#schemakline)] | false    | none        |              | Data list                                                                |
| nextPageOffsetData | string                   | false    | none        |              | Offset for the next page. If there is no next page, it's an empty string |

#### schemakline

| Name          | Type            | Required | Constraints | Chinese Name | Description              |
| ------------- | --------------- | -------- | ----------- | ------------ | ------------------------ |
| klineId       | string(int64)   | false    | none        |              | K-Line ID                |
| contractId    | string(int64)   | false    | none        |              | Perpetual contract ID    |
| contractName  | string          | false    | none        |              | Perpetual contract name  |
| klineType     | string          | false    | none        |              | K-Line type              |
| klineTime     | string(int64)   | false    | none        |              | K-Line time              |
| priceType     | string          | false    | none        |              | Price type of the K-line |
| trades        | string(int64)   | false    | none        |              | Number of trades         |
| size          | string(decimal) | false    | none        |              | Volume                   |
| value         | string(decimal) | false    | none        |              | Value                    |
| high          | string(decimal) | false    | none        |              | High price               |
| low           | string(decimal) | false    | none        |              | Low price                |
| open          | string(decimal) | false    | none        |              | Opening price            |
| close         | string(decimal) | false    | none        |              | Closing price            |
| makerBuySize  | string(decimal) | false    | none        |              | Maker buy volume         |
| makerBuyValue | string(decimal) | false    | none        |              | Maker buy value          |

**Enum Values**

| Property  | Value                |
| --------- | -------------------- |
| klineType | UNKNOWN\_KLINE\_TYPE |
| klineType | MINUTE\_1            |
| klineType | MINUTE\_5            |
| klineType | MINUTE\_15           |
| klineType | MINUTE\_30           |
| klineType | HOUR\_1              |
| klineType | HOUR\_2              |
| klineType | HOUR\_4              |
| klineType | HOUR\_6              |
| klineType | HOUR\_8              |
| klineType | HOUR\_12             |
| klineType | DAY\_1               |
| klineType | WEEK\_1              |
| klineType | MONTH\_1             |
| klineType | UNRECOGNIZED         |
| priceType | UNKNOWN\_PRICE\_TYPE |
| priceType | ORACLE\_PRICE        |
| priceType | INDEX\_PRICE         |
| priceType | LAST\_PRICE          |
| priceType | ASK1\_PRICE          |
| priceType | BID1\_PRICE          |
| priceType | OPEN\_INTEREST       |
| priceType | UNRECOGNIZED         |

#### schemaresultlistcontractkline

| Name         | Type                                               | Required | Constraints | Chinese Name | Description                                             |
| ------------ | -------------------------------------------------- | -------- | ----------- | ------------ | ------------------------------------------------------- |
| code         | string                                             | false    | none        |              | Status code. "SUCCESS" for success, others for failures |
| data         | \[[ContractMultiKline](#schemacontractmultikline)] | false    | none        |              | Correct response data                                   |
| errorParam   | object                                             | false    | none        |              | Parameter information in error messages                 |
| requestTime  | string(timestamp)                                  | false    | none        |              | Server request reception time                           |
| responseTime | string(timestamp)                                  | false    | none        |              | Server response return time                             |
| traceId      | string                                             | false    | none        |              | Call trace ID                                           |

#### schemacontractmultikline

| Name       | Type                     | Required | Constraints | Chinese Name | Description              |
| ---------- | ------------------------ | -------- | ----------- | ------------ | ------------------------ |
| contractId | string(int64)            | false    | none        |              | Perpetual contract ID    |
| klineList  | \[[Kline](#schemakline)] | false    | none        |              | Collection of kline data |

#### schemaresultlistticker

| Name         | Type                       | Required | Constraints | Chinese Name | Description                                             |
| ------------ | -------------------------- | -------- | ----------- | ------------ | ------------------------------------------------------- |
| code         | string                     | false    | none        |              | Status code. "SUCCESS" for success, others for failures |
| data         | \[[Ticker](#schematicker)] | false    | none        |              | Correct response data                                   |
| errorParam   | object                     | false    | none        |              | Parameter information in error messages                 |
| requestTime  | string(timestamp)          | false    | none        |              | Server request reception time                           |
| responseTime | string(timestamp)          | false    | none        |              | Server response return time                             |
| traceId      | string                     | false    | none        |              | Call trace ID                                           |

#### schematicker

| Name               | Type            | Required | Constraints | Chinese Name | Description                          |
| ------------------ | --------------- | -------- | ----------- | ------------ | ------------------------------------ |
| contractId         | string(int64)   | false    | none        |              | Contract ID                          |
| contractName       | string          | false    | none        |              | Contract Name                        |
| priceChange        | string(decimal) | false    | none        |              | Price change                         |
| priceChangePercent | string(decimal) | false    | none        |              | Price change percentage              |
| trades             | string(int64)   | false    | none        |              | 24-hour number of trades             |
| size               | string(decimal) | false    | none        |              | 24-hour trading volume               |
| value              | string(decimal) | false    | none        |              | 24-hour trading value                |
| high               | string(decimal) | false    | none        |              | 24-hour high price                   |
| low                | string(decimal) | false    | none        |              | 24-hour low price                    |
| open               | string(decimal) | false    | none        |              | 24-hour opening price                |
| close              | string(decimal) | false    | none        |              | 24-hour closing price                |
| highTime           | string(int64)   | false    | none        |              | 24-hour high price time              |
| lowTime            | string(int64)   | false    | none        |              | 24-hour low price time               |
| startTime          | string(int64)   | false    | none        |              | 24-hour quote start time             |
| endTime            | string(int64)   | false    | none        |              | 24-hour quote end time               |
| lastPrice          | string(decimal) | false    | none        |              | Latest trade price                   |
| indexPrice         | string(decimal) | false    | none        |              | Current index price                  |
| oraclePrice        | string(decimal) | false    | none        |              | Current oracle price                 |
| openInterest       | string(decimal) | false    | none        |              | Open Interest                        |
| fundingRate        | string          | false    | none        |              | Current already settled funding rate |
| fundingTime        | string(int64)   | false    | none        |              | Funding rate settlement time         |
| nextFundingTime    | string(int64)   | false    | none        |              | Next funding rate settlement time    |

#### gettickersummarymodel

| Name         | Type                                        | Required | Constraints | Chinese Name | Description                                             |
| ------------ | ------------------------------------------- | -------- | ----------- | ------------ | ------------------------------------------------------- |
| code         | string                                      | false    | none        |              | Status code. "SUCCESS" for success, others for failures |
| data         | [GetTickerSummary](#schemagettickersummary) | false    | none        |              | Get quote summary response                              |
| errorParam   | object                                      | false    | none        |              | Parameter information in error messages                 |
| requestTime  | string(timestamp)                           | false    | none        |              | Server request reception time                           |
| responseTime | string(timestamp)                           | false    | none        |              | Server response return time                             |
| traceId      | string                                      | false    | none        |              | Call trace ID                                           |

#### schemagettickersummary

| Name          | Type                                  | Required | Constraints | Chinese Name | Description   |
| ------------- | ------------------------------------- | -------- | ----------- | ------------ | ------------- |
| tickerSummary | [TickerSummary](#schematickersummary) | false    | none        |              | Quote summary |

#### schematickersummary

| Name         | Type   | Required | Constraints | Chinese Name | Description                     |
| ------------ | ------ | -------- | ----------- | ------------ | ------------------------------- |
| period       | string | false    | none        |              | Summary period                  |
| trades       | string | false    | none        |              | Total exchange number of trades |
| value        | string | false    | none        |              | Total traded value              |
| openInterest | string | false    | none        |              | Current total open interest     |

**Enum Values**

| Property | Value           |
| -------- | --------------- |
| period   | UNKNOWN\_PERIOD |
| period   | LAST\_DAY\_1    |
| period   | LAST\_DAY\_7    |
| period   | LAST\_DAY\_30   |
| period   | UNRECOGNIZED    |

# Funding API

## FundingPublicApi

### GET Get Latest Funding Rate by Contract ID

GET /api/v1/public/funding/getLatestFundingRate

#### Request Parameters

| Name       | Location | Type   | Required | Description |
| ---------- | -------- | ------ | -------- | ----------- |
| contractId | query    | string | No       | Contract ID |

> Example Response

> 200 Response

```json
{
    "code": "SUCCESS",
    "data": [
        {
            "contractId": "10000001",
            "fundingTime": "1734595200000",
            "fundingTimestamp": "1734597720000",
            "oraclePrice": "101559.9220921285450458526611328125",
            "indexPrice": "101522.558968500",
            "fundingRate": "-0.00005537",
            "isSettlement": false,
            "forecastFundingRate": "-0.00012293",
            "previousFundingRate": "0.00000567",
            "previousFundingTimestamp": "1734595140000",
            "premiumIndex": "-0.00036207",
            "avgPremiumIndex": "-0.00032293",
            "premiumIndexTimestamp": "1734597720000",
            "impactMarginNotional": "100",
            "impactAskPrice": "101485.8",
            "impactBidPrice": "101484.7",
            "interestRate": "0.0003",
            "predictedFundingRate": "0.00005000",
            "fundingRateIntervalMin": "240",
            "starkExFundingIndex": "101559.9220921285450458526611328125"
        }
    ],
    "msg": null,
    "errorParam": null,
    "requestTime": "1734597737870",
    "responseTime": "1734597737873",
    "traceId": "5e27ebfb0ae79f51bbd347d2bf3585f9"
}
```

#### Response Codes

| Status Code | Status Code Description                                 | Description      | Data Model                            |
| ----------- | ------------------------------------------------------- | ---------------- | ------------------------------------- |
| 200         | [OK](https://tools.ietf.org/html/rfc7231#section-6.3.1) | default response | [Result](#schemapagedatafundingrate>) |

### GET Get Funding Rate History by Contract ID with Pagination

GET /api/v1/public/funding/getFundingRatePage

#### Request Parameters

| Name                        | Location | Type   | Required | Description                                                                                                                                        |
| --------------------------- | -------- | ------ | -------- | -------------------------------------------------------------------------------------------------------------------------------------------------- |
| contractId                  | query    | string | No       | Contract ID                                                                                                                                        |
| size                        | query    | string | No       | Number of items to retrieve. Must be greater than 0 and less than or equal to 100                                                                  |
| offsetData                  | query    | string | No       | Pagination offset. If not provided or empty, retrieves the first page                                                                              |
| filterSettlementFundingRate | query    | string | No       | If true, only query settlement funding rates (funding rate settlement occurs every 8 hours, with a predicted funding rate calculated every minute) |
| filterBeginTimeInclusive    | query    | string | No       | Start time. If not provided, retrieves the oldest data                                                                                             |
| filterEndTimeExclusive      | query    | string | No       | End time. If not provided, retrieves the latest data                                                                                               |

> Example Response

> 200 Response

```json
{
    "code": "SUCCESS",
    "data": {
        "dataList": [
            {
                "contractId": "10000001",
                "fundingTime": "1733702400000",
                "fundingTimestamp": "1733702400000",
                "oraclePrice": "101120.888977311551570892333984375",
                "indexPrice": "101121.681521500",
                "fundingRate": "0.00005000",
                "isSettlement": true,
                "forecastFundingRate": "",
                "previousFundingRate": "0.00005000",
                "previousFundingTimestamp": "1733702340000",
                "premiumIndex": "0.00022566",
                "avgPremiumIndex": "0.00017953",
                "premiumIndexTimestamp": "1733702400000",
                "impactMarginNotional": "500",
                "impactAskPrice": "101269.6",
                "impactBidPrice": "101269.1",
                "interestRate": "0.0003",
                "predictedFundingRate": "0.00005000",
                "fundingRateIntervalMin": "240",
                "starkExFundingIndex": "101120.888977311551570892333984375"
            }
        ],
        "nextPageOffsetData": "0880A08A97B532"
    },
    "msg": null,
    "errorParam": null,
    "requestTime": "1734597585432",
    "responseTime": "1734597586672",
    "traceId": "02465a59be5d19088ba7e4b5c6b94f6d"
}
```

#### Response Codes

| Status Code | Status Code Description                                 | Description      | Data Model                      |
| ----------- | ------------------------------------------------------- | ---------------- | ------------------------------- |
| 200         | [OK](https://tools.ietf.org/html/rfc7231#section-6.3.1) | default response | [Result](#pagedatafundingrate>) |

## Data Models

#### pagedatafundingrate

| Name         | Type                                              | Required | Constraints | Description                                                     |
| ------------ | ------------------------------------------------- | -------- | ----------- | --------------------------------------------------------------- |
| code         | string                                            | false    | none        | Status code. "SUCCESS" for success, otherwise indicates failure |
| data         | [PageDataFundingRate](#schemapagedatafundingrate) | false    | none        | General pagination response                                     |
| errorParam   | object                                            | false    | none        | Parameter information in the error message                      |
| requestTime  | string(timestamp)                                 | false    | none        | Server request reception time                                   |
| responseTime | string(timestamp)                                 | false    | none        | Server response time                                            |
| traceId      | string                                            | false    | none        | Call trace ID                                                   |

#### schemapagedatafundingrate

| Name               | Type                                 | Required | Constraints | Description                                                                  |
| ------------------ | ------------------------------------ | -------- | ----------- | ---------------------------------------------------------------------------- |
| dataList           | \[[FundingRate](#schemafundingrate)] | false    | none        | Data list                                                                    |
| nextPageOffsetData | string                               | false    | none        | Offset data to retrieve the next page. Empty string if there is no next page |

#### listfundingrate

| Name         | Type                                 | Required | Constraints | Description                                                     |
| ------------ | ------------------------------------ | -------- | ----------- | --------------------------------------------------------------- |
| code         | string                               | false    | none        | Status code. "SUCCESS" for success, otherwise indicates failure |
| data         | \[[FundingRate](#schemafundingrate)] | false    | none        | Successful response data                                        |
| errorParam   | object                               | false    | none        | Parameter information in the error message                      |
| requestTime  | string(timestamp)                    | false    | none        | Server request reception time                                   |
| responseTime | string(timestamp)                    | false    | none        | Server response time                                            |
| traceId      | string                               | false    | none        | Call trace ID                                                   |

#### schemafundingrate

| Name                     | Type          | Required | Constraints | Description                                                                                                                                                                            |
| ------------------------ | ------------- | -------- | ----------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |
| contractId               | string(int64) | false    | none        | Contract ID                                                                                                                                                                            |
| fundingTime              | string(int64) | false    | none        | Funding rate settlement time. E.g., the funding rate for the 08:00-09:00 period is calculated from the previous 07:00-08:00 data, finalized at 08:00, and used for settlement at 09:00 |
| fundingTimestamp         | string(int64) | false    | none        | Funding rate calculation time in milliseconds                                                                                                                                          |
| oraclePrice              | string        | false    | none        | Oracle price                                                                                                                                                                           |
| indexPrice               | string        | false    | none        | Index price                                                                                                                                                                            |
| fundingRate              | string        | false    | none        | Funding rate                                                                                                                                                                           |
| isSettlement             | boolean       | false    | none        | Funding rate settlement flag                                                                                                                                                           |
| forecastFundingRate      | string        | false    | none        | Forecast funding rate                                                                                                                                                                  |
| previousFundingRate      | string        | false    | none        | Previous funding rate                                                                                                                                                                  |
| previousFundingTimestamp | string(int64) | false    | none        | Previous funding rate calculation time in milliseconds                                                                                                                                 |
| premiumIndex             | string        | false    | none        | Premium index                                                                                                                                                                          |
| avgPremiumIndex          | string        | false    | none        | Average premium index                                                                                                                                                                  |
| premiumIndexTimestamp    | string        | false    | none        | Premium index calculation time                                                                                                                                                         |
| impactMarginNotional     | string        | false    | none        | Quantity required for deep weighted buy/sell price calculation                                                                                                                         |
| impactAskPrice           | string        | false    | none        | Deep weighted ask price                                                                                                                                                                |
| impactBidPrice           | string        | false    | none        | Deep weighted bid price                                                                                                                                                                |
| interestRate             | string        | false    | none        | Fixed interest rate                                                                                                                                                                    |
| predictedFundingRate     | string        | false    | none        | Comprehensive interest rate (interestRate/frequency)                                                                                                                                   |
| fundingRateIntervalMin   | string(int64) | false    | none        | Funding rate time interval in minutes                                                                                                                                                  |
| starkExFundingIndex      | string        | false    | none        | StarkEx funding index                                                                                                                                                                  |

# Account API

## AccountPrivateApi

### GET Get Position Transaction Page

GET /api/v1/private/account/getPositionTransactionPage

#### Request Parameters

| Name                            | Location | Type   | Required | Description                                                                                                                                                  |
| ------------------------------- | -------- | ------ | -------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------ |
| accountId                       | query    | string | No       | Account ID                                                                                                                                                   |
| size                            | query    | string | No       | Number of items to retrieve. Must be greater than 0 and less than or equal to 100                                                                            |
| offsetData                      | query    | string | No       | Pagination offset. If empty or not provided, the first page is retrieved                                                                                     |
| filterCoinIdList                | query    | string | No       | Filter position transaction records by specified coin IDs. If not provided, all collateral transaction records are retrieved                                 |
| filterContractIdList            | query    | string | No       | Filter position transaction records by specified contract IDs. If not provided, all position transaction records are retrieved                               |
| filterTypeList                  | query    | string | No       | Filter position transaction records by specified types. If not provided, all position transaction records are retrieved                                      |
| filterStartCreatedTimeInclusive | query    | string | No       | Filter position transaction records created after or at the specified start time (inclusive). If not provided or 0, retrieves records from the earliest time |
| filterEndCreatedTimeExclusive   | query    | string | No       | Filter position transaction records created before the specified end time (exclusive). If not provided or 0, retrieves records up to the latest time         |
| filterCloseOnly                 | query    | string | No       | Whether to return only position transactions that include closing positions. `true`: only return records with closing; `false`: return all records           |
| filterOpenOnly                  | query    | string | No       | Whether to return only position transactions that include opening positions. `true`: only return records with opening; `false`: return all records           |

> Response Example

> 200 Response

```json
{
    "code": "SUCCESS",
    "data": {
        "dataList": [
            {
                "id": "564809510904923406",
                "userId": "543429922866069763",
                "accountId": "543429922991899150",
                "coinId": "1000",
                "contractId": "10000001",
                "type": "SELL_POSITION",
                "deltaOpenSize": "-0.001",
                "deltaOpenValue": "-96.813200",
                "deltaOpenFee": "0.048406",
                "deltaFundingFee": "0.000000",
                "beforeOpenSize": "0.001",
                "beforeOpenValue": "96.813200",
                "beforeOpenFee": "-0.048406",
                "beforeFundingFee": "0",
                "fillCloseSize": "-0.001",
                "fillCloseValue": "-96.857100",
                "fillCloseFee": "-0.048428",
                "fillOpenSize": "0.000",
                "fillOpenValue": "0.000000",
                "fillOpenFee": "0.000000",
                "fillPrice": "96857.1",
                "liquidateFee": "0",
                "realizePnl": "-0.004528",
                "isLiquidate": false,
                "isDeleverage": false,
                "fundingTime": "0",
                "fundingRate": "",
                "fundingIndexPrice": "",
                "fundingOraclePrice": "",
                "fundingPositionSize": "",
                "orderId": "564809510842007822",
                "orderFillTransactionId": "564809510875562254",
                "collateralTransactionId": "564809510904922382",
                "forceTradeId": "0",
                "extraType": "",
                "extraDataJson": "",
                "censorStatus": "CENSOR_SUCCESS",
                "censorTxId": "892720",
                "censorTime": "1734661081049",
                "censorFailCode": "",
                "censorFailReason": "",
                "l2TxId": "1084271",
                "l2RejectTime": "0",
                "l2RejectCode": "",
                "l2RejectReason": "",
                "l2ApprovedTime": "0",
                "createdTime": "1734661081049",
                "updatedTime": "1734661081053"
            }
        ],
        "nextPageOffsetData": ""
    },
    "msg": null,
    "errorParam": null,
    "requestTime": "1734661416266",
    "responseTime": "1734661416277",
    "traceId": "a87a52a4e189045b7b7b9948ea7b5c54"
}
```

#### Response

| Status Code | Status Code Description                                 | Description      | Data Model                         |
| ----------- | ------------------------------------------------------- | ---------------- | ---------------------------------- |
| 200         | [OK](https://tools.ietf.org/html/rfc7231#section-6.3.1) | default response | [Result](#positiontransactionpage) |

### GET Get Position Transactions By Account ID and Transaction ID

GET /api/v1/private/account/getPositionTransactionById

#### Request Parameters

| Name                      | Location | Type   | Required | Description              |
| ------------------------- | -------- | ------ | -------- | ------------------------ |
| accountId                 | query    | string | No       | Account ID               |
| positionTransactionIdList | query    | string | No       | Position Transaction IDs |

> Response Example

> 200 Response

```json
{
    "code": "SUCCESS",
    "data": {
        "dataList": [
            {
                "id": "564809510904923406",
                "userId": "543429922866069763",
                "accountId": "543429922991899150",
                "coinId": "1000",
                "contractId": "10000001",
                "type": "SELL_POSITION",
                "deltaOpenSize": "-0.001",
                "deltaOpenValue": "-96.813200",
                "deltaOpenFee": "0.048406",
                "deltaFundingFee": "0.000000",
                "beforeOpenSize": "0.001",
                "beforeOpenValue": "96.813200",
                "beforeOpenFee": "-0.048406",
                "beforeFundingFee": "0",
                "fillCloseSize": "-0.001",
                "fillCloseValue": "-96.857100",
                "fillCloseFee": "-0.048428",
                "fillOpenSize": "0.000",
                "fillOpenValue": "0.000000",
                "fillOpenFee": "0.000000",
                "fillPrice": "96857.1",
                "liquidateFee": "0",
                "realizePnl": "-0.004528",
                "isLiquidate": false,
                "isDeleverage": false,
                "fundingTime": "0",
                "fundingRate": "",
                "fundingIndexPrice": "",
                "fundingOraclePrice": "",
                "fundingPositionSize": "",
                "orderId": "564809510842007822",
                "orderFillTransactionId": "564809510875562254",
                "collateralTransactionId": "564809510904922382",
                "forceTradeId": "0",
                "extraType": "",
                "extraDataJson": "",
                "censorStatus": "CENSOR_SUCCESS",
                "censorTxId": "892720",
                "censorTime": "1734661081049",
                "censorFailCode": "",
                "censorFailReason": "",
                "l2TxId": "1084271",
                "l2RejectTime": "0",
                "l2RejectCode": "",
                "l2RejectReason": "",
                "l2ApprovedTime": "0",
                "createdTime": "1734661081049",
                "updatedTime": "1734661081053"
            }
        ],
        "nextPageOffsetData": ""
    },
    "msg": null,
    "errorParam": null,
    "requestTime": "1734661416266",
    "responseTime": "1734661416277",
    "traceId": "a87a52a4e189045b7b7b9948ea7b5c54"
}
```

#### Response

| Status Code | Status Code Description                                 | Description      | Data Model                     |
| ----------- | ------------------------------------------------------- | ---------------- | ------------------------------ |
| 200         | [OK](https://tools.ietf.org/html/rfc7231#section-6.3.1) | default response | [Result](#positiontransaction) |

### GET Get Position Term Page by Account ID

GET /api/v1/private/account/getPositionTermPage

#### Request Parameters

| Name                            | Location | Type   | Required | Description                                                                                                                                           |
| ------------------------------- | -------- | ------ | -------- | ----------------------------------------------------------------------------------------------------------------------------------------------------- |
| accountId                       | query    | string | No       | Account ID                                                                                                                                            |
| size                            | query    | string | No       | Number of items to retrieve. Must be greater than 0 and less than or equal to 100                                                                     |
| offsetData                      | query    | string | No       | Pagination offset. If empty or not provided, the first page is retrieved                                                                              |
| filterCoinIdList                | query    | string | No       | Filter position term records by specified coin IDs. If not provided, all position term records are retrieved                                          |
| filterContractIdList            | query    | string | No       | Filter position term records by specified contract IDs. If not provided, all position term records are retrieved                                      |
| filterIsLongPosition            | query    | string | No       | Filter position term records by position direction. If not provided, all position term records are retrieved                                          |
| filterStartCreatedTimeInclusive | query    | string | No       | Filter position term records created after or at the specified start time (inclusive). If not provided or 0, retrieves records from the earliest time |
| filterEndCreatedTimeExclusive   | query    | string | No       | Filter position term records created before the specified end time (exclusive). If not provided or 0, retrieves records up to the latest time         |

> Response Example

> 200 Response

```json
{
    "code": "SUCCESS",
    "data": {
        "dataList": [
            {
                "userId": "543429922866069763",
                "accountId": "543429922991899150",
                "coinId": "1000",
                "contractId": "10000001",
                "termCount": 2,
                "cumOpenSize": "0.001",
                "cumOpenValue": "96.813000",
                "cumOpenFee": "-0.048406",
                "cumCloseSize": "0",
                "cumCloseValue": "0",
                "cumCloseFee": "0",
                "cumFundingFee": "0",
                "cumLiquidateFee": "0",
                "createdTime": "1734661093450",
                "updatedTime": "1734661093450",
                "currentLeverage": "50"
            },
            {
                "userId": "543429922866069763",
                "accountId": "543429922991899150",
                "coinId": "1000",
                "contractId": "10000001",
                "termCount": 1,
                "cumOpenSize": "0.001",
                "cumOpenValue": "96.813200",
                "cumOpenFee": "-0.048406",
                "cumCloseSize": "-0.001",
                "cumCloseValue": "-96.857100",
                "cumCloseFee": "-0.048428",
                "cumFundingFee": "0",
                "cumLiquidateFee": "0",
                "createdTime": "1734661018663",
                "updatedTime": "1734661081053",
                "currentLeverage": "50"
            }
        ],
        "nextPageOffsetData": ""
    },
    "msg": null,
    "errorParam": null,
    "requestTime": "1734661416272",
    "responseTime": "1734661416281",
    "traceId": "ad4515e50fa7a57610736753d8f987aa"
}
```

#### Response

| Status Code | Status Code Description                                 | Description      | Data Model              |
| ----------- | ------------------------------------------------------- | ---------------- | ----------------------- |
| 200         | [OK](https://tools.ietf.org/html/rfc7231#section-6.3.1) | default response | [Result](#positionterm) |

### GET Get Position By Account ID and Contract ID

GET /api/v1/private/account/getPositionByContractId

#### Request Parameters

| Name           | Location | Type   | Required | Description            |
| -------------- | -------- | ------ | -------- | ---------------------- |
| accountId      | query    | string | No       | Account ID             |
| contractIdList | query    | string | No       | Specified contract IDs |

> Response Example

> 200 Response

```json
{
    "code": "SUCCESS",
    "data": [
        {
            "userId": "543429922866069763",
            "accountId": "543429922991899150",
            "coinId": "1000",
            "contractId": "10000001",
            "openSize": "0.001",
            "openValue": "97.444500",
            "openFee": "-0.017540",
            "fundingFee": "0.000000",
            "longTermCount": 3,
            "longTermStat": {
                "cumOpenSize": "0.001",
                "cumOpenValue": "97.444500",
                "cumOpenFee": "-0.017540",
                "cumCloseSize": "0",
                "cumCloseValue": "0",
                "cumCloseFee": "0",
                "cumFundingFee": "0",
                "cumLiquidateFee": "0"
            },
            "longTermCreatedTime": "1734662617992",
            "longTermUpdatedTime": "1734662617992",
            "shortTermCount": 0,
            "shortTermStat": {
                "cumOpenSize": "0",
                "cumOpenValue": "0",
                "cumOpenFee": "0",
                "cumCloseSize": "0",
                "cumCloseValue": "0",
                "cumCloseFee": "0",
                "cumFundingFee": "0",
                "cumLiquidateFee": "0"
            },
            "shortTermCreatedTime": "0",
            "shortTermUpdatedTime": "0",
            "longTotalStat": {
                "cumOpenSize": "0.004",
                "cumOpenValue": "388.464500",
                "cumOpenFee": "-0.131882",
                "cumCloseSize": "-0.003",
                "cumCloseValue": "-291.736700",
                "cumCloseFee": "-0.083506",
                "cumFundingFee": "0",
                "cumLiquidateFee": "0"
            },
            "shortTotalStat": {
                "cumOpenSize": "0",
                "cumOpenValue": "0",
                "cumOpenFee": "0",
                "cumCloseSize": "0",
                "cumCloseValue": "0",
                "cumCloseFee": "0",
                "cumFundingFee": "0",
                "cumLiquidateFee": "0"
            },
            "createdTime": "1734661018663",
            "updatedTime": "1734662617992"
        }
    ],
    "msg": null,
    "errorParam": null,
    "requestTime": "1734664849770",
    "responseTime": "1734664849790",
    "traceId": "17a421d1b23652c5b3836239274b0352"
}
```

#### Response

| Status Code | Status Code Description                                 | Description      | Data Model |
| ----------- | ------------------------------------------------------- | ---------------- | ---------- |
| 200         | [OK](https://tools.ietf.org/html/rfc7231#section-6.3.1) | default response | Inline     |

#### Response Data Structure

### GET Get Collateral Transaction Page by Account ID

GET /api/v1/private/account/getCollateralTransactionPage

#### Request Parameters

| Name                            | Location | Type   | Required | Description                                                                                                                                                    |
| ------------------------------- | -------- | ------ | -------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------- |
| accountId                       | query    | string | No       | Account ID                                                                                                                                                     |
| size                            | query    | string | No       | Number of items to retrieve. Must be greater than 0 and less than or equal to 100                                                                              |
| offsetData                      | query    | string | No       | Pagination offset. If empty or not provided, the first page is retrieved                                                                                       |
| filterCoinIdList                | query    | string | No       | Filter collateral transaction records by specified coin IDs. If not provided, all collateral transaction records are retrieved                                 |
| filterTypeList                  | query    | string | No       | Filter collateral transaction records by specified transaction types. If not provided, all collateral transaction records are retrieved                        |
| filterStartCreatedTimeInclusive | query    | string | No       | Filter collateral transaction records created after or at the specified start time (inclusive). If not provided or 0, retrieves records from the earliest time |
| filterEndCreatedTimeExclusive   | query    | string | No       | Filter collateral transaction records created before the specified end time (exclusive). If not provided or 0, retrieves records up to the latest time         |

> Response Example

> 200 Response

```json
{
    "code": "SUCCESS",
    "data": {
        "dataList": [
            {
                "id": "564815957260763406",
                "userId": "543429922866069763",
                "accountId": "543429922991899150",
                "coinId": "1000",
                "contractId": "10000001",
                "orderId": "564815695875932430",
                "orderSide": "BUY",
                "fillSize": "0.001",
                "fillValue": "97.4445",
                "fillFee": "0.017540",
                "fillPrice": "97444.5",
                "liquidateFee": "0",
                "realizePnl": "-0.017540",
                "direction": "MAKER",
                "isPositionTpsl": false,
                "isLiquidate": false,
                "isDeleverage": false,
                "isWithoutMatch": false,
                "matchSequenceId": "35196430",
                "matchIndex": 0,
                "matchTime": "1734662617982",
                "matchAccountId": "555790606509539863",
                "matchOrderId": "564815957235597591",
                "matchFillId": "05d14491-db7d-478a-9d9f-2dc55c3ff3ca",
                "positionTransactionId": "564815957294318862",
                "collateralTransactionId": "564815957294317838",
                "extraType": "",
                "extraDataJson": "",
                "censorStatus": "CENSOR_SUCCESS",
                "censorTxId": "893031",
                "censorTime": "1734662617988",
                "censorFailCode": "",
                "censorFailReason": "",
                "l2TxId": "1084582",
                "l2RejectTime": "0",
                "l2RejectCode": "",
                "l2RejectReason": "",
                "l2ApprovedTime": "0",
                "createdTime": "1734662617984",
                "updatedTime": "1734662617992"
            }
        ],
        "nextPageOffsetData": ""
    },
    "msg": null,
    "errorParam": null,
    "requestTime": "1734662681040",
    "responseTime": "1734662681051",
    "traceId": "770fcce6222c2d88b65b4ecb36e84c43"
}
```

#### Response

| Status Code | Status Code Description                                 | Description      | Data Model |
| ----------- | ------------------------------------------------------- | ---------------- | ---------- |
| 200         | [OK](https://tools.ietf.org/html/rfc7231#section-6.3.1) | default response | Inline     |

#### Response Data Structure

### GET Get Collateral Transactions By Account ID and Transaction ID

GET /api/v1/private/account/getCollateralTransactionById

#### Request Parameters

| Name                        | Location | Type   | Required | Description                |
| --------------------------- | -------- | ------ | -------- | -------------------------- |
| accountId                   | query    | string | No       | Account ID                 |
| collateralTransactionIdList | query    | string | No       | Collateral Transaction IDs |

> Response Example

> 200 Response

```json
{
    "code": "SUCCESS",
    "data": [
        {
            "id": "563516408265179918",
            "userId": "543429922866069763",
            "accountId": "543429922991899150",
            "coinId": "1000",
            "type": "DEPOSIT",
            "deltaAmount": "10.000000",
            "deltaLegacyAmount": "10.000000",
            "beforeAmount": "6.000000",
            "beforeLegacyAmount": "6.000000",
            "fillCloseSize": "",
            "fillCloseValue": "",
            "fillCloseFee": "",
            "fillOpenSize": "",
            "fillOpenValue": "",
            "fillOpenFee": "",
            "fillPrice": "",
            "liquidateFee": "",
            "realizePnl": "",
            "isLiquidate": false,
            "isDeleverage": false,
            "fundingTime": "0",
            "fundingRate": "",
            "fundingIndexPrice": "",
            "fundingOraclePrice": "",
            "fundingPositionSize": "",
            "depositId": "563516408235819790",
            "withdrawId": "0",
            "transferInId": "0",
            "transferOutId": "0",
            "transferReason": "UNKNOWN_TRANSFER_REASON",
            "orderId": "0",
            "orderFillTransactionId": "0",
            "orderAccountId": "0",
            "positionContractId": "0",
            "positionTransactionId": "0",
            "forceWithdrawId": "0",
            "forceTradeId": "0",
            "extraType": "",
            "extraDataJson": "",
            "censorStatus": "L2_APPROVED",
            "censorTxId": "830852",
            "censorTime": "1734352781355",
            "censorFailCode": "",
            "censorFailReason": "",
            "l2TxId": "1022403",
            "l2RejectTime": "0",
            "l2RejectCode": "",
            "l2RejectReason": "",
            "l2ApprovedTime": "1734353551654",
            "createdTime": "1734352781355",
            "updatedTime": "1734353551715"
        }
    ],
    "msg": null,
    "errorParam": null,
    "requestTime": "1734664486740",
    "responseTime": "1734664486761",
    "traceId": "b3086f53c2d4503f6a4790b80f0e534b"
}
```

#### Response

| Status Code | Status Code Description                                 | Description      | Data Model |
| ----------- | ------------------------------------------------------- | ---------------- | ---------- |
| 200         | [OK](https://tools.ietf.org/html/rfc7231#section-6.3.1) | default response | Inline     |

#### Response Data Structure

### GET Get Collateral By Account ID and Coin ID

GET /api/v1/private/account/getCollateralByCoinId

#### Request Parameters

| Name       | Location | Type   | Required | Description                                                                                                   |
| ---------- | -------- | ------ | -------- | ------------------------------------------------------------------------------------------------------------- |
| accountId  | query    | string | No       | Account ID                                                                                                    |
| coinIdList | query    | string | No       | Filter collateral information by specified coin IDs. If not provided, all collateral information is retrieved |

> Response Example

> 200 Response

```json
{
    "code": "SUCCESS",
    "data": [
        {
            "userId": "543429922866069763",
            "accountId": "543429922991899150",
            "coinId": "1000",
            "amount": "-81.943188",
            "legacyAmount": "15.501312",
            "cumDepositAmount": "70.000000",
            "cumWithdrawAmount": "0",
            "cumTransferInAmount": "0",
            "cumTransferOutAmount": "-55.000000",
            "cumPositionBuyAmount": "-388.4645",
            "cumPositionSellAmount": "291.7367",
            "cumFillFeeAmount": "-0.215388",
            "cumFundingFeeAmount": "0",
            "cumFillFeeIncomeAmount": "0",
            "createdTime": "1730204434094",
            "updatedTime": "1734663352066"
        }
    ],
    "msg": null,
    "errorParam": null,
    "requestTime": "1734664569244",
    "responseTime": "1734664569260",
    "traceId": "4b7ff82fb92aa3b10d9fc0367a069270"
}
```

#### Response

| Status Code | Status Code Description                                 | Description      | Data Model |
| ----------- | ------------------------------------------------------- | ---------------- | ---------- |
| 200         | [OK](https://tools.ietf.org/html/rfc7231#section-6.3.1) | default response | Inline     |

#### Response Data Structure

### GET Get Account Page by User ID

GET /api/v1/private/account/getAccountPage

#### Request Parameters

| Name       | Location | Type   | Required | Description                                                                       |
| ---------- | -------- | ------ | -------- | --------------------------------------------------------------------------------- |
| size       | query    | string | No       | Number of items to retrieve. Must be greater than 0 and less than or equal to 100 |
| offsetData | query    | string | No       | Pagination offset. If empty or not provided, the first page is retrieved          |

> Response Example

> 200 Response

```json
{
    "code": "SUCCESS",
    "data": {
        "dataList": [
            {
                "id": "543429922991899150",
                "userId": "543429922866069763",
                "ethAddress": "0x1fB51aa234287C3CA1F957eA9AD0E148Bb814b7A",
                "l2Key": "0x5580341e2c99823a0a35356b8ac84e372dd38fd1f4b50f607b931ec8038c211",
                "l2KeyYCoordinate": "0x6ea3dd81a7fc864893c8c6f674e4a4510c369f939bdc0259a0980dfde882c2d",
                "clientAccountId": "main",
                "isSystemAccount": false,
                "defaultTradeSetting": {
                    "isSetFeeRate": true,
                    "takerFeeRate": "0.000500",
                    "makerFeeRate": "0.000180",
                    "isSetFeeDiscount": false,
                    "takerFeeDiscount": "0",
                    "makerFeeDiscount": "0",
                    "isSetMaxLeverage": false,
                    "maxLeverage": "0"
                },
                "contractIdToTradeSetting": {
                    "10000001": {
                        "isSetFeeRate": false,
                        "takerFeeRate": "",
                        "makerFeeRate": "",
                        "isSetFeeDiscount": false,
                        "takerFeeDiscount": "",
                        "makerFeeDiscount": "",
                        "isSetMaxLeverage": true,
                        "maxLeverage": "50"
                    }
                },
                "maxLeverageLimit": "0",
                "createOrderPerMinuteLimit": 0,
                "createOrderDelayMillis": 0,
                "extraType": "",
                "extraDataJson": "",
                "status": "NORMAL",
                "isLiquidating": false,
                "createdTime": "1730204434094",
                "updatedTime": "1733993378059"
            }
        ],
        "nextPageOffsetData": "551109015904453258"
    },
    "msg": null,
    "errorParam": null,
    "requestTime": "1734661416005",
    "responseTime": "1734661416008",
    "traceId": "dc6a8442169c8cdb831ceb15c812b7fc"
}
```

#### Response

| Status Code | Status Code Description                                 | Description      | Data Model                     |
| ----------- | ------------------------------------------------------- | ---------------- | ------------------------------ |
| 200         | [OK](https://tools.ietf.org/html/rfc7231#section-6.3.1) | default response | [Result](#schemaresultaccount) |

### GET Get Account Deleverage Light

GET /api/v1/private/account/getAccountDeleverageLight

#### Request Parameters

| Name      | Location | Type   | Required | Description |
| --------- | -------- | ------ | -------- | ----------- |
| accountId | query    | string | No       | Account ID  |

> Response Example

> 200 Response

```json
{
    "code": "SUCCESS",
    "data": {
        "positionContractIdToLightNumberMap": {
            "10000001": 3
        }
    },
    "msg": null,
    "errorParam": null,
    "requestTime": "1734661307929",
    "responseTime": "1734661307935",
    "traceId": "202ee8ba15ab633b68a35a8bc9756952"
}
```

#### Response

| Status Code | Status Code Description                                 | Description      | Data Model                           |
| ----------- | ------------------------------------------------------- | ---------------- | ------------------------------------ |
| 200         | [OK](https://tools.ietf.org/html/rfc7231#section-6.3.1) | default response | [Result](#getaccountdeleveragelight) |

### GET Get Account By Account ID

GET /api/v1/private/account/getAccountById

#### Request Parameters

| Name      | Location | Type   | Required | Description |
| --------- | -------- | ------ | -------- | ----------- |
| accountId | query    | string | No       | Account ID  |

> Response Example

> 200 Response

```json
{
    "code": "SUCCESS",
    "data": {
        "id": "543429922991899150",
        "userId": "543429922866069763",
        "ethAddress": "0x1fB51aa234287C3CA1F957eA9AD0E148Bb814b7A",
        "l2Key": "0x5580341e2c99823a0a35356b8ac84e372dd38fd1f4b50f607b931ec8038c211",
        "l2KeyYCoordinate": "0x6ea3dd81a7fc864893c8c6f674e4a4510c369f939bdc0259a0980dfde882c2d",
        "clientAccountId": "main",
        "isSystemAccount": false,
        "defaultTradeSetting": {
            "isSetFeeRate": true,
            "takerFeeRate": "0.000500",
            "makerFeeRate": "0.000180",
            "isSetFeeDiscount": false,
            "takerFeeDiscount": "0",
            "makerFeeDiscount": "0",
            "isSetMaxLeverage": false,
            "maxLeverage": "0"
        },
        "contractIdToTradeSetting": {
            "10000001": {
                "isSetFeeRate": false,
                "takerFeeRate": "",
                "makerFeeRate": "",
                "isSetFeeDiscount": false,
                "takerFeeDiscount": "",
                "makerFeeDiscount": "",
                "isSetMaxLeverage": true,
                "maxLeverage": "50"
            }
        },
        "maxLeverageLimit": "0",
        "createOrderPerMinuteLimit": 0,
        "createOrderDelayMillis": 0,
        "extraType": "",
        "extraDataJson": "",
        "status": "NORMAL",
        "isLiquidating": false,
        "createdTime": "1730204434094",
        "updatedTime": "1733993378059"
    },
    "msg": null,
    "errorParam": null,
    "requestTime": "1734664605752",
    "responseTime": "1734664605760",
    "traceId": "c7be70afbf00d7f879d2809e0f042dfe"
}
```

#### Response

| Status Code | Status Code Description                                 | Description      | Data Model         |
| ----------- | ------------------------------------------------------- | ---------------- | ------------------ |
| 200         | [OK](https://tools.ietf.org/html/rfc7231#section-6.3.1) | default response | [Result](#account) |

### GET Account Asset

GET /api/v1/private/account/getAccountAsset

#### Request Parameters

| Name      | Location | Type   | Required | Description |
| --------- | -------- | ------ | -------- | ----------- |
| accountId | query    | string | No       | Account ID  |

> Response Example

> 200 Response

```json
{
    "code": "SUCCESS",
    "data": {
        "account": {
            "id": "543429922991899150",
            "userId": "543429922866069763",
            "ethAddress": "0x1fB51aa234287C3CA1F957eA9AD0E148Bb814b7A",
            "l2Key": "0x5580341e2c99823a0a35356b8ac84e372dd38fd1f4b50f607b931ec8038c211",
            "l2KeyYCoordinate": "0x6ea3dd81a7fc864893c8c6f674e4a4510c369f939bdc0259a0980dfde882c2d",
            "clientAccountId": "main",
            "isSystemAccount": false,
            "defaultTradeSetting": {
                "isSetFeeRate": true,
                "takerFeeRate": "0.000500",
                "makerFeeRate": "0.000180",
                "isSetFeeDiscount": false,
                "takerFeeDiscount": "0",
                "makerFeeDiscount": "0",
                "isSetMaxLeverage": false,
                "maxLeverage": "0"
            },
            "contractIdToTradeSetting": {
                "10000001": {
                    "isSetFeeRate": false,
                    "takerFeeRate": "",
                    "makerFeeRate": "",
                    "isSetFeeDiscount": false,
                    "takerFeeDiscount": "",
                    "makerFeeDiscount": "",
                    "isSetMaxLeverage": true,
                    "maxLeverage": "50"
                }
            },
            "maxLeverageLimit": "0",
            "createOrderPerMinuteLimit": 0,
            "createOrderDelayMillis": 0,
            "extraType": "",
            "extraDataJson": "",
            "status": "NORMAL",
            "isLiquidating": false,
            "createdTime": "1730204434094",
            "updatedTime": "1733993378059"
        },
        "collateralList": [
            {
                "userId": "543429922866069763",
                "accountId": "543429922991899150",
                "coinId": "1000",
                "amount": "-81.943188",
                "legacyAmount": "15.501312",
                "cumDepositAmount": "70.000000",
                "cumWithdrawAmount": "0",
                "cumTransferInAmount": "0",
                "cumTransferOutAmount": "-55.000000",
                "cumPositionBuyAmount": "-388.4645",
                "cumPositionSellAmount": "291.7367",
                "cumFillFeeAmount": "-0.215388",
                "cumFundingFeeAmount": "0",
                "cumFillFeeIncomeAmount": "0",
                "createdTime": "1730204434094",
                "updatedTime": "1734663352066"
            }
        ],
        "positionList": [
            {
                "userId": "543429922866069763",
                "accountId": "543429922991899150",
                "coinId": "1000",
                "contractId": "10000001",
                "openSize": "0.001",
                "openValue": "97.444500",
                "openFee": "-0.017540",
                "fundingFee": "0.000000",
                "longTermCount": 3,
                "longTermStat": {
                    "cumOpenSize": "0.001",
                    "cumOpenValue": "97.444500",
                    "cumOpenFee": "-0.017540",
                    "cumCloseSize": "0",
                    "cumCloseValue": "0",
                    "cumCloseFee": "0",
                    "cumFundingFee": "0",
                    "cumLiquidateFee": "0"
                },
                "longTermCreatedTime": "1734662617992",
                "longTermUpdatedTime": "1734662617992",
                "shortTermCount": 0,
                "shortTermStat": {
                    "cumOpenSize": "0",
                    "cumOpenValue": "0",
                    "cumOpenFee": "0",
                    "cumCloseSize": "0",
                    "cumCloseValue": "0",
                    "cumCloseFee": "0",
                    "cumFundingFee": "0",
                    "cumLiquidateFee": "0"
                },
                "shortTermCreatedTime": "0",
                "shortTermUpdatedTime": "0",
                "longTotalStat": {
                    "cumOpenSize": "0.004",
                    "cumOpenValue": "388.464500",
                    "cumOpenFee": "-0.131882",
                    "cumCloseSize": "-0.003",
                    "cumCloseValue": "-291.736700",
                    "cumCloseFee": "-0.083506",
                    "cumFundingFee": "0",
                    "cumLiquidateFee": "0"
                },
                "shortTotalStat": {
                    "cumOpenSize": "0",
                    "cumOpenValue": "0",
                    "cumOpenFee": "0",
                    "cumCloseSize": "0",
                    "cumCloseValue": "0",
                    "cumCloseFee": "0",
                    "cumFundingFee": "0",
                    "cumLiquidateFee": "0"
                },
                "createdTime": "1734661018663",
                "updatedTime": "1734662617992"
            }
        ],
        "version": "1021",
        "positionAssetList": [
            {
                "userId": "543429922866069763",
                "accountId": "543429922991899150",
                "coinId": "1000",
                "contractId": "10000001",
                "positionValue": "97.734426609240472316741943359375",
                "maxLeverage": "50",
                "initialMarginRequirement": "1.954688532184809446334838867187500000",
                "starkExRiskRate": "0.00500000012107193470001220703125",
                "starkExRiskValue": "0.48867214487909847796080764492643311314168386161327362060546875",
                "avgEntryPrice": "97444.5",
                "liquidatePrice": "82354.9",
                "bankruptPrice": "81943.1",
                "worstClosePrice": "81984.2",
                "unrealizePnl": "0.289926609240472316741943359375",
                "termRealizePnl": "0.000000",
                "totalRealizePnl": "0.716700"
            }
        ],
        "collateralAssetModelList": [
            {
                "userId": "543429922866069763",
                "accountId": "543429922991899150",
                "coinId": "1000",
                "totalEquity": "15.791238609240472316741943359375",
                "totalPositionValueAbs": "97.734426609240472316741943359375",
                "initialMarginRequirement": "1.954688532184809446334838867187500000",
                "starkExRiskValue": "0.48867214487909847796080764492643311314168386161327362060546875",
                "pendingWithdrawAmount": "0",
                "pendingTransferOutAmount": "0",
                "orderFrozenAmount": "0",
                "availableAmount": "13.836550"
            }
        ],
        "oraclePriceList": []
    },
    "msg": null,
    "errorParam": null,
    "requestTime": "1734664627939",
    "responseTime": "1734664627957",
    "traceId": "4a3a5cd027ea6c255c8c944567b634f1"
}
```

#### Response

| Status Code | Status Code Description                                 | Description      | Data Model                      |
| ----------- | ------------------------------------------------------- | ---------------- | ------------------------------- |
| 200         | [OK](https://tools.ietf.org/html/rfc7231#section-6.3.1) | default response | [Result](#accountassetsnapshot) |

### GET Get Account Asset Snapshot Page by Account ID

GET /api/v1/private/account/getAccountAssetSnapshotPage

#### Request Parameters

| Name                     | Location | Type   | Required | Description                                                                                                                               |
| ------------------------ | -------- | ------ | -------- | ----------------------------------------------------------------------------------------------------------------------------------------- |
| accountId                | query    | string | No       | Account ID                                                                                                                                |
| size                     | query    | string | No       | Number of items to retrieve. Must be greater than 0 and less than or equal to 1000                                                        |
| offsetData               | query    | string | No       | Pagination offset. If empty or not provided, the first page is retrieved                                                                  |
| coinId                   | query    | string | Yes      | Filter by the specified coin ID.                                                                                                          |
| filterTimeTag            | query    | string | No       | Specifies time tag. If not provided or 0, returns snapshots by the hour. 1 returns snapshots by the day                                   |
| filterStartTimeInclusive | query    | string | No       | Filter snapshots created after or at the specified start time (inclusive). If not provided or 0, retrieves records from the earliest time |
| filterEndTimeExclusive   | query    | string | No       | Filter snapshots created before the specified end time (exclusive). If not provided or 0, retrieves records up to the latest time         |

> Response Example

> 200 Response

```json
{
    "code": "SUCCESS",
    "data": {
        "dataList": [
            {
                "userId": "543429922866069763",
                "accountId": "543429922991899150",
                "coinId": "1000",
                "timeTag": 1,
                "snapshotTime": "1734652800000",
                "totalEquity": "16.000000",
                "termRealizePnl": "0",
                "unrealizePnl": "0",
                "totalRealizePnl": "0"
            },
            {
                "userId": "543429922866069763",
                "accountId": "543429922991899150",
                "coinId": "1000",
                "timeTag": 1,
                "snapshotTime": "1734566400000",
                "totalEquity": "16.000000",
                "termRealizePnl": "0",
                "unrealizePnl": "0",
                "totalRealizePnl": "0"
            }
        ],
        "nextPageOffsetData": ""
    },
    "msg": null,
    "errorParam": null,
    "requestTime": "1734663257066",
    "responseTime": "1734663257075",
    "traceId": "f52222cd41b6ff8bcd059a57ecd986a1"
}
```

#### Response

| Status Code | Status Code Description                                 | Description      | Data Model                       |
| ----------- | ------------------------------------------------------- | ---------------- | -------------------------------- |
| 200         | [OK](https://tools.ietf.org/html/rfc7231#section-6.3.1) | default response | [Result](#accountassetsnapshot>) |

## Data Models

#### accountassetsnapshot

| Name                       | Type                                                                | Required | Constraints | Description                | Notes                                                          |
| -------------------------- | ------------------------------------------------------------------- | -------- | ----------- | -------------------------- | -------------------------------------------------------------- |
| code                       | string                                                              | false    | none        | Status Code                | Returns "SUCCESS" on success; otherwise, it indicates failure. |
| data                       | [PageDataAccountAssetSnapshot](#schemapagedataaccountassetsnapshot) | false    | none        | Generic Paginated Response |                                                                |
| errorParam                 | object                                                              | false    | none        | Error Parameters           | Error message parameter information                            |
| » **additionalProperties** | string                                                              | false    | none        | Error Parameters           | Error message parameter information                            |
| requestTime                | string(timestamp)                                                   | false    | none        | Server Request Time        | Time at which the server received the request                  |
| responseTime               | string(timestamp)                                                   | false    | none        | Server Response Time       | Time at which the server sent the response                     |
| traceId                    | string                                                              | false    | none        | Trace ID                   | Invocation trace ID                                            |

#### schemapagedataaccountassetsnapshot

| Name               | Type                                                   | Required | Constraints | Description      | Notes                                                                    |
| ------------------ | ------------------------------------------------------ | -------- | ----------- | ---------------- | ------------------------------------------------------------------------ |
| dataList           | \[[AccountAssetSnapshot](#schemaaccountassetsnapshot)] | false    | none        | Data List        |                                                                          |
| nextPageOffsetData | string                                                 | false    | none        | Next Page Offset | Offset for retrieving the next page. If no next page data, empty string. |

#### schemaaccountassetsnapshot

| Name            | Type           | Required | Constraints | Description            | Notes                                                          |
| --------------- | -------------- | -------- | ----------- | ---------------------- | -------------------------------------------------------------- |
| userId          | string(int64)  | false    | none        | User ID                | ID of the owning user                                          |
| accountId       | string(int64)  | false    | none        | Account ID             | ID of the owning account                                       |
| coinId          | string(int64)  | false    | none        | Collateral Coin ID     | ID of the associated collateral coin                           |
| timeTag         | integer(int32) | false    | none        | Time Tag               | Time tag. 1 represents the snapshot time is for the whole day. |
| snapshotTime    | string(int64)  | false    | none        | Snapshot Time          | Snapshot time, hourly timestamp at the top of the hour.        |
| totalEquity     | string         | false    | none        | Total Collateral Value | Current total value of the collateral                          |
| termRealizePnl  | string         | false    | none        | Term Realized PnL      | Realized PnL for the term                                      |
| unrealizePnl    | string         | false    | none        | Unrealized PnL         | Unrealized PnL                                                 |
| totalRealizePnl | string         | false    | none        | Total Realized PnL     | Total realized PnL of the position                             |

#### schemaresultgetaccountasset

| Name         | Type                                      | Required | Constraints | Description                | Notes                                                          |
| ------------ | ----------------------------------------- | -------- | ----------- | -------------------------- | -------------------------------------------------------------- |
| code         | string                                    | false    | none        | Status Code                | Returns "SUCCESS" on success; otherwise, it indicates failure. |
| data         | [GetAccountAsset](#schemagetaccountasset) | false    | none        | Get Account Asset Response | Response structure for fetching account asset data.            |
| errorParam   | object                                    | false    | none        | Error Parameters           | Error message parameter information                            |
| requestTime  | string(timestamp)                         | false    | none        | Server Request Time        | Time at which the server received the request                  |
| responseTime | string(timestamp)                         | false    | none        | Server Response Time       | Time at which the server sent the response                     |
| traceId      | string                                    | false    | none        | Trace ID                   | Invocation trace ID                                            |

#### schemagetaccountasset

| Name                     | Type                                         | Required | Constraints | Description                          | Notes                                                                 |
| ------------------------ | -------------------------------------------- | -------- | ----------- | ------------------------------------ | --------------------------------------------------------------------- |
| account                  | [Account](#schemaaccount)                    | false    | none        | Account Information                  | Account information data.                                             |
| collateralList           | \[[Collateral](#schemacollateral)]           | false    | none        | Collateral Information List          | List of collateral information data.                                  |
| positionList             | \[[Position](#schemaposition)]               | false    | none        | Perpetual Contract Position List     | List of perpetual contract position information.                      |
| version                  | string(int64)                                | false    | none        | Account Version                      | Account version number, incremented with each update.                 |
| positionAssetList        | \[[PositionAsset](#schemapositionasset)]     | false    | none        | Position Asset Information List      | List of position asset information.                                   |
| collateralAssetModelList | \[[CollateralAsset](#schemacollateralasset)] | false    | none        | Account-Level Asset Information List | List of account-level asset information.                              |
| oraclePriceList          | \[[IndexPrice](#schemaindexprice)]           | false    | none        | Oracle Price List                    | List of all oracle prices used to calculate assets (only those used). |

#### schemaindexprice

| Name                 | Type                                                   | Required | Constraints | Description                        | Notes                                                                           |
| -------------------- | ------------------------------------------------------ | -------- | ----------- | ---------------------------------- | ------------------------------------------------------------------------------- |
| contractId           | string(int64)                                          | false    | none        | Contract ID                        | Contract ID                                                                     |
| priceType            | string                                                 | false    | none        | Price Type                         |                                                                                 |
| priceValue           | string                                                 | false    | none        | Price Value                        | Price value                                                                     |
| createdTime          | string(int64)                                          | false    | none        | Creation Time                      | Time of creation                                                                |
| oraclePriceSignature | \[[OraclePriceSignature](#schemaoraclepricesignature)] | false    | none        | Oracle Price Signature Information | Oracle price signature information, only exists when price\_type=ORACLE\_PRICE. |

**Enumerated Values**

| Property  | Value                |
| --------- | -------------------- |
| priceType | UNKNOWN\_PRICE\_TYPE |
| priceType | ORACLE\_PRICE        |
| priceType | INDEX\_PRICE         |
| priceType | LAST\_PRICE          |
| priceType | ASK1\_PRICE          |
| priceType | BID1\_PRICE          |
| priceType | OPEN\_INTEREST       |
| priceType | UNRECOGNIZED         |

#### schemaoraclepricesignature

| Name            | Type                              | Required | Constraints | Description                         | Notes                                                                       |
| --------------- | --------------------------------- | -------- | ----------- | ----------------------------------- | --------------------------------------------------------------------------- |
| contractId      | string(int64)                     | false    | none        | Contract ID                         | Contract ID                                                                 |
| signer          | string                            | false    | none        | Signer ID                           | Signer identifier                                                           |
| price           | string                            | false    | none        | Signed Price                        | The price signed (price after stark ex precision processing)                |
| externalAssetId | string                            | false    | none        | Concatenated Asset and Oracle Names | Concatenation of the asset name and the oracle name (both in hex encoding). |
| signature       | [L2Signature](#schemal2signature) | false    | none        | L2 Signature Information            | L2 signature information                                                    |
| timestamp       | string(int64)                     | false    | none        | Signature Creation Time             | The time the signature was created.                                         |

#### schemal2signature

| Name | Type   | Required | Constraints | Description | Notes                 |
| ---- | ------ | -------- | ----------- | ----------- | --------------------- |
| r    | string | false    | none        | R Value     | Bigint for hex string |
| s    | string | false    | none        | S Value     | Bigint for hex string |
| v    | string | false    | none        | V Value     | Bigint for hex string |

#### schemacollateralasset

| Name                     | Type          | Required | Constraints | Description                     | Notes                                                          |
| ------------------------ | ------------- | -------- | ----------- | ------------------------------- | -------------------------------------------------------------- |
| userId                   | string(int64) | false    | none        | User ID                         | ID of the owning user.                                         |
| accountId                | string(int64) | false    | none        | Account ID                      | ID of the owning account.                                      |
| coinId                   | string(int64) | false    | none        | Collateral Coin ID              | ID of the associated collateral coin.                          |
| totalEquity              | string        | false    | none        | Total Collateral Value          | Current total value of the collateral.                         |
| totalPositionValueAbs    | string        | false    | none        | Sum of Absolute Position Values | Sum of the absolute position values for the current collateral |
| initialMarginRequirement | string        | false    | none        | Initial Margin Requirement      | The initial margin requirement for the current collateral.     |
| starkExRiskValue         | string        | false    | none        | Total StarkEx Risk Value        | The total starkEx risk amount for the current collateral.      |
| pendingWithdrawAmount    | string        | false    | none        | Pending Withdrawal Amount       | The amount of collateral pending withdrawal.                   |
| pendingTransferOutAmount | string        | false    | none        | Pending Transfer Out Amount     | The amount of collateral pending transfer out.                 |
| orderFrozenAmount        | string        | false    | none        | Order Frozen Amount             | The amount of collateral frozen by orders.                     |
| availableAmount          | string        | false    | none        | Available Amount                | The amount of collateral available for use.                    |

#### schemapositionasset

| Name                     | Type          | Required | Constraints | Description                | Notes                                                                                                          |
| ------------------------ | ------------- | -------- | ----------- | -------------------------- | -------------------------------------------------------------------------------------------------------------- |
| userId                   | string(int64) | false    | none        | User ID                    | ID of the owning user.                                                                                         |
| accountId                | string(int64) | false    | none        | Account ID                 | ID of the owning account.                                                                                      |
| coinId                   | string(int64) | false    | none        | Collateral Coin ID         | ID of the associated collateral coin.                                                                          |
| contractId               | string(int64) | false    | none        | Contract ID                | ID of the associated contract.                                                                                 |
| positionValue            | string        | false    | none        | Position Value             | Position value, positive for long positions, negative for short positions.                                     |
| maxLeverage              | string        | false    | none        | Maximum Leverage           | The maximum leverage for current contract position.                                                            |
| initialMarginRequirement | string        | false    | none        | Initial Margin Requirement | Initial margin requirement for the position.                                                                   |
| starkExRiskRate          | string        | false    | none        | StarkEx Risk Rate          | StarkEx risk rate calculated based on risk tiers. Similar to maintenance margin rate with different precision. |
| starkExRiskValue         | string        | false    | none        | StarkEx Risk Value         | StarkEx risk amount, similar to maintenance margin, with different precision.                                  |
| avgEntryPrice            | string        | false    | none        | Average Entry Price        | Average entry price.                                                                                           |
| liquidatePrice           | string        | false    | none        | Liquidation Price          | Liquidation price (force liquidation price). If oracle price reaches this price, liquidation is triggered.     |
| bankruptPrice            | string        | false    | none        | Bankruptcy Price           | Bankruptcy price. If the oracle price reaches this level, account total value is less than 0.                  |
| worstClosePrice          | string        | false    | none        | Worst Close Price          | The worst closing price. The closing transaction price can not be worse than this price.                       |
| unrealizePnl             | string        | false    | none        | Unrealized PnL             | Unrealized profit and loss for the position.                                                                   |
| termRealizePnl           | string        | false    | none        | Term Realized PnL          | Realized PnL for the term.                                                                                     |
| totalRealizePnl          | string        | false    | none        | Total Realized PnL         | Total realized PnL of the position.                                                                            |

#### schemaposition

| Name                 | Type                                | Required | Constraints | Description                          | Notes                                                                                             |
| -------------------- | ----------------------------------- | -------- | ----------- | ------------------------------------ | ------------------------------------------------------------------------------------------------- |
| userId               | string(int64)                       | false    | none        | User ID                              | ID of the owning user.                                                                            |
| accountId            | string(int64)                       | false    | none        | Account ID                           | ID of the owning account.                                                                         |
| coinId               | string(int64)                       | false    | none        | Collateral Coin ID                   | ID of the associated collateral coin.                                                             |
| contractId           | string(int64)                       | false    | none        | Contract ID                          | ID of the associated contract.                                                                    |
| openSize             | string                              | false    | none        | Current Open Size                    | Current open size (positive for long, negative for short).                                        |
| openValue            | string                              | false    | none        | Current Open Value                   | Current open value (increases upon opening, proportionally decreases upon closing).               |
| openFee              | string                              | false    | none        | Current Open Fee                     | Current allocated open fee (increases upon opening, proportionally decreases upon closing).       |
| fundingFee           | string                              | false    | none        | Current Funding Fee                  | Current allocated funding fee (increases upon settlement, proportionally decreases upon closing). |
| longTermCount        | integer(int32)                      | false    | none        | Long Position Term Count             | Long position term count. Starts from 1, increases by one upon complete closure of a position     |
| longTermStat         | [PositionStat](#schemapositionstat) | false    | none        | Long Position Cumulative Statistics  | Cumulative statistics for the position.                                                           |
| longTermCreatedTime  | string                              | false    | none        | Long Position Term Creation Time     | Creation time for the long position term.                                                         |
| longTermUpdatedTime  | string                              | false    | none        | Long Position Term Update Time       | Update time for the long position term.                                                           |
| shortTermCount       | integer(int32)                      | false    | none        | Short Position Term Count            | Short position term count. Starts from 1, increases by one upon complete closure of a position    |
| shortTermStat        | [PositionStat](#schemapositionstat) | false    | none        | Short Position Cumulative Statistics | Cumulative statistics for the position.                                                           |
| shortTermCreatedTime | string                              | false    | none        | Short Position Term Creation Time    | Creation time for the short position term.                                                        |
| shortTermUpdatedTime | string                              | false    | none        | Short Position Term Update Time      | Update time for the short position term.                                                          |
| longTotalStat        | [PositionStat](#schemapositionstat) | false    | none        | Long Cumulative Statistics           | Cumulative statistics for the position.                                                           |
| shortTotalStat       | [PositionStat](#schemapositionstat) | false    | none        | Short Cumulative Statistics          | Cumulative statistics for the position.                                                           |
| createdTime          | string(int64)                       | false    | none        | Creation Time                        | Creation time.                                                                                    |
| updatedTime          | string(int64)                       | false    | none        | Update Time                          | Update time.                                                                                      |

#### schemapositionstat

| Name            | Type   | Required | Constraints | Description              | Notes                            |
| --------------- | ------ | -------- | ----------- | ------------------------ | -------------------------------- |
| cumOpenSize     | string | false    | none        | Cumulative Open Size     | Cumulative open size.            |
| cumOpenValue    | string | false    | none        | Cumulative Open Value    | Cumulative open value.           |
| cumOpenFee      | string | false    | none        | Cumulative Open Fee      | Cumulative open fees.            |
| cumCloseSize    | string | false    | none        | Cumulative Close Size    | Cumulative close size.           |
| cumCloseValue   | string | false    | none        | Cumulative Close Value   | Cumulative close value.          |
| cumCloseFee     | string | false    | none        | Cumulative Close Fee     | Cumulative close fees.           |
| cumFundingFee   | string | false    | none        | Cumulative Funding Fee   | Cumulative funding fees settled. |
| cumLiquidateFee | string | false    | none        | Cumulative Liquidate Fee | Cumulative liquidation fees.     |

#### schemacollateral

| Name                   | Type            | Required | Constraints | Description                             | Notes                                                                  |
| ---------------------- | --------------- | -------- | ----------- | --------------------------------------- | ---------------------------------------------------------------------- |
| userId                 | string(int64)   | false    | none        | User ID                                 | ID of the owning user.                                                 |
| accountId              | string(int64)   | false    | none        | Account ID                              | ID of the owning account.                                              |
| coinId                 | string(int64)   | false    | none        | Coin ID                                 | Collateral coin ID.                                                    |
| amount                 | string(decimal) | false    | none        | Collateral Amount                       | Collateral amount, actually of decimal type.                           |
| legacyAmount           | string(decimal) | false    | none        | Legacy Amount                           | Legacy balance field, for display purposes only, not for calculations. |
| cumDepositAmount       | string(decimal) | false    | none        | Cumulative Deposit Amount               | Cumulative deposit amount.                                             |
| cumWithdrawAmount      | string(decimal) | false    | none        | Cumulative Withdrawal Amount            | Cumulative withdrawal amount.                                          |
| cumTransferInAmount    | string(decimal) | false    | none        | Cumulative Transfer In Amount           | Cumulative transfer in amount.                                         |
| cumTransferOutAmount   | string(decimal) | false    | none        | Cumulative Transfer Out Amount          | Cumulative transfer out amount.                                        |
| cumPositionBuyAmount   | string(decimal) | false    | none        | Cumulative Position Buy Amount          | Cumulative collateral amount deducted from position buy.               |
| cumPositionSellAmount  | string(decimal) | false    | none        | Cumulative Position Sell Amount         | Cumulative collateral amount added from position sell.                 |
| cumFillFeeAmount       | string(decimal) | false    | none        | Cumulative Fill Fee Amount              | Cumulative transaction fee amount.                                     |
| cumFundingFeeAmount    | string(decimal) | false    | none        | Cumulative Funding Fee Amount           | Cumulative funding fee amount.                                         |
| cumFillFeeIncomeAmount | string(decimal) | false    | none        | Cumulative Order Fill Fee Income Amount | Cumulative amount from order fill fee income.                          |
| createdTime            | string(int64)   | false    | none        | Creation Time                           | Creation time.                                                         |
| updatedTime            | string(int64)   | false    | none        | Update Time                             | Update time.                                                           |

#### schemaaccount

| Name                       | Type                                | Required | Constraints | Description                           | Notes                                                                                                                                                                                                                                      |
| -------------------------- | ----------------------------------- | -------- | ----------- | ------------------------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ |
| id                         | string(int64)                       | false    | none        | Account ID                            | Account ID, must be greater than 0.                                                                                                                                                                                                        |
| userId                     | string(int64)                       | false    | none        | User ID                               | ID of the owning user.                                                                                                                                                                                                                     |
| ethAddress                 | string                              | false    | none        | Wallet ETH Address                    | Wallet ETH address.                                                                                                                                                                                                                        |
| l2Key                      | string                              | false    | none        | L2 Account Key                        | Account key on L2. Stark key in starkEx. Bigint for hex string                                                                                                                                                                             |
| l2KeyYCoordinate           | string                              | false    | none        | L2 Key Y Coordinate                   | Used only for verifying l2Signature. Not returned to end users. Bigint for hex string.                                                                                                                                                     |
| clientAccountId            | string                              | false    | none        | Client Account ID                     | Client account ID for idempotency check.                                                                                                                                                                                                   |
| isSystemAccount            | boolean                             | false    | none        | System Account                        | Whether it is a system account (system accounts are not subject to contract risk settings, use separate MQ for trade messages).                                                                                                            |
| defaultTradeSetting        | [TradeSetting](#schematradesetting) | false    | none        | Default Trade Setting                 | Trade settings. Trade setting calculation priority: Account contract trade settings -> Account default trade settings -> Contract configuration trade settings. Note: Only one of `is_set_fee_rate` and `is_set_fee_discount` can be true. |
| contractIdToTradeSetting   | object                              | false    | none        | Contract-Level Account Trade Settings | Account contract-level trade settings.                                                                                                                                                                                                     |
| » **additionalProperties** | [TradeSetting](#schematradesetting) | false    | none        | Contract-Level Account Trade Settings | Trade settings. Trade setting calculation priority: Account contract trade settings -> Account default trade settings -> Contract configuration trade settings. Note: Only one of `is_set_fee_rate` and `is_set_fee_discount` can be true. |
| maxLeverageLimit           | string                              | false    | none        | Maximum Leverage Limit                | User-set maximum leverage limit. If 0, uses the leverage limit of the corresponding trading contract.                                                                                                                                      |
| createOrderPerMinuteLimit  | integer(int32)                      | false    | none        | Order Creation Limit per Minute       | Order frequency limit per minute. If 0, default limit is used; if < 0, no limit is applied.                                                                                                                                                |
| createOrderDelayMillis     | integer(int32)                      | false    | none        | Order Creation Delay Milliseconds     | Order delay milliseconds, must be greater than or equal to 0.                                                                                                                                                                              |
| extraType                  | string                              | false    | none        | Extra Type                            | Extra type for upper-layer use.                                                                                                                                                                                                            |
| extraDataJson              | string                              | false    | none        | Extra Data                            | Extra data in JSON format, default is an empty string.                                                                                                                                                                                     |
| status                     | string                              | false    | none        | Account Status                        | Account status.                                                                                                                                                                                                                            |
| isLiquidating              | boolean                             | false    | none        | Is Liquidating                        | Whether is being liquidated.                                                                                                                                                                                                               |
| createdTime                | string(int64)                       | false    | none        | Creation Time                         | Creation time.                                                                                                                                                                                                                             |
| updatedTime                | string(int64)                       | false    | none        | Update Time                           | Update time.                                                                                                                                                                                                                               |

**Enumerated Values**

| Property | Value                    |
| -------- | ------------------------ |
| status   | UNKNOWN\_ACCOUNT\_STATUS |
| status   | CENSORING                |
| status   | NORMAL                   |
| status   | DISABLED                 |
| status   | INVALID                  |
| status   | UNRECOGNIZED             |

#### schematradesetting

| Name             | Type            | Required | Constraints | Description                     | Notes                                                                           |
| ---------------- | --------------- | -------- | ----------- | ------------------------------- | ------------------------------------------------------------------------------- |
| isSetFeeRate     | boolean         | false    | none        | Whether Fee Rate is Set         | Whether to set a specific fee rate value.                                       |
| takerFeeRate     | string(decimal) | false    | none        | Taker Fee Rate                  | Taker fee rate, range \[0, 1), valid only when is\_set\_fee\_rate=true.         |
| makerFeeRate     | string(decimal) | false    | none        | Maker Fee Rate                  | Maker fee rate, range \[0, 1), valid only when is\_set\_fee\_rate=true.         |
| isSetFeeDiscount | boolean         | false    | none        | Whether Fee Discount is Set     | Whether to set a fee discount.                                                  |
| takerFeeDiscount | string(decimal) | false    | none        | Taker Fee Discount              | Taker fee discount, range \[0, 1), valid only when is\_set\_fee\_discount=true. |
| makerFeeDiscount | string(decimal) | false    | none        | Maker Fee Discount              | Maker fee discount, range \[0, 1), valid only when is\_set\_fee\_discount=true. |
| isSetMaxLeverage | boolean         | false    | none        | Whether Maximum Leverage is Set | Whether to set maximum trading leverage.                                        |
| maxLeverage      | string(decimal) | false    | none        | Maximum Leverage                | Maximum trading leverage.                                                       |

#### schemaresultaccount

| Name         | Type                      | Required | Constraints | Description          | Notes                                                          |
| ------------ | ------------------------- | -------- | ----------- | -------------------- | -------------------------------------------------------------- |
| code         | string                    | false    | none        | Status Code          | Returns "SUCCESS" on success; otherwise, it indicates failure. |
| data         | [Account](#schemaaccount) | false    | none        | Account Information  | Account information data.                                      |
| errorParam   | object                    | false    | none        | Error Parameters     | Error message parameter information                            |
| requestTime  | string(timestamp)         | false    | none        | Server Request Time  | Time at which the server received the request                  |
| responseTime | string(timestamp)         | false    | none        | Server Response Time | Time at which the server sent the response                     |
| traceId      | string                    | false    | none        | Trace ID             | Invocation trace ID                                            |

#### getaccountdeleveragelight

| Name         | Type                                                          | Required | Constraints | Description                           | Notes                                                          |
| ------------ | ------------------------------------------------------------- | -------- | ----------- | ------------------------------------- | -------------------------------------------------------------- |
| code         | string                                                        | false    | none        | Status Code                           | Returns "SUCCESS" on success; otherwise, it indicates failure. |
| data         | [GetAccountDeleverageLight](#schemagetaccountdeleveragelight) | false    | none        | Get Account Deleverage Light Response | Response structure for fetching deleverage light information.  |
| errorParam   | object                                                        | false    | none        | Error Parameters                      | Error message parameter information                            |
| requestTime  | string(timestamp)                                             | false    | none        | Server Request Time                   | Time at which the server received the request                  |
| responseTime | string(timestamp)                                             | false    | none        | Server Response Time                  | Time at which the server sent the response                     |
| traceId      | string                                                        | false    | none        | Trace ID                              | Invocation trace ID                                            |

#### Response structure for fetching deleverage light information.

| Name                               | Type   | Required | Constraints | Description                                   | Notes                                                                                                  |
| ---------------------------------- | ------ | -------- | ----------- | --------------------------------------------- | ------------------------------------------------------------------------------------------------------ |
| positionContractIdToLightNumberMap | object | false    | none        | Map from Position Contract ID to Light Number | Maps position contract ID to light number. `light_number` ranges from 1-5, which represent 1-5 lights. |

#### account

| Name         | Type                                      | Required | Constraints | Description                | Notes                                                          |
| ------------ | ----------------------------------------- | -------- | ----------- | -------------------------- | -------------------------------------------------------------- |
| code         | string                                    | false    | none        | Status Code                | Returns "SUCCESS" on success; otherwise, it indicates failure. |
| data         | [PageDataAccount](#schemapagedataaccount) | false    | none        | Generic Paginated Response | Generic paginated response.                                    |
| errorParam   | object                                    | false    | none        | Error Parameters           | Error message parameter information                            |
| requestTime  | string(timestamp)                         | false    | none        | Server Request Time        | Time at which the server received the request                  |
| responseTime | string(timestamp)                         | false    | none        | Server Response Time       | Time at which the server sent the response                     |
| traceId      | string                                    | false    | none        | Trace ID                   | Invocation trace ID                                            |

#### Generic Paginated Response

| Name               | Type                         | Required | Constraints | Description      | Notes                                                                    |
| ------------------ | ---------------------------- | -------- | ----------- | ---------------- | ------------------------------------------------------------------------ |
| dataList           | \[[Account](#schemaaccount)] | false    | none        | Data List        | List of account data.                                                    |
| nextPageOffsetData | string                       | false    | none        | Next Page Offset | Offset for retrieving the next page. If no next page data, empty string. |

#### collateral

| Name         | Type                               | Required | Constraints | Description          | Notes                                                          |
| ------------ | ---------------------------------- | -------- | ----------- | -------------------- | -------------------------------------------------------------- |
| code         | string                             | false    | none        | Status Code          | Returns "SUCCESS" on success; otherwise, it indicates failure. |
| data         | \[[Collateral](#schemacollateral)] | false    | none        | Response Data        | Correct response data.                                         |
| errorParam   | object                             | false    | none        | Error Parameters     | Error message parameter information                            |
| requestTime  | string(timestamp)                  | false    | none        | Server Request Time  | Time at which the server received the request                  |
| responseTime | string(timestamp)                  | false    | none        | Server Response Time | Time at which the server sent the response                     |
| traceId      | string                             | false    | none        | Trace ID             | Invocation trace ID                                            |

#### collateraltransaction

| Name         | Type                                                     | Required | Constraints | Description          | Notes                                                          |
| ------------ | -------------------------------------------------------- | -------- | ----------- | -------------------- | -------------------------------------------------------------- |
| code         | string                                                   | false    | none        | Status Code          | Returns "SUCCESS" on success; otherwise, it indicates failure. |
| data         | \[[CollateralTransaction](#schemacollateraltransaction)] | false    | none        | Response Data        | Correct response data.                                         |
| errorParam   | object                                                   | false    | none        | Error Parameters     | Error message parameter information                            |
| requestTime  | string(timestamp)                                        | false    | none        | Server Request Time  | Time at which the server received the request                  |
| responseTime | string(timestamp)                                        | false    | none        | Server Response Time | Time at which the server sent the response                     |
| traceId      | string                                                   | false    | none        | Trace ID             | Invocation trace ID                                            |

#### Collateral transaction details

| Name                   | Type            | Required | Constraints | Description                             | Notes                                                                                                                                          |
| ---------------------- | --------------- | -------- | ----------- | --------------------------------------- | ---------------------------------------------------------------------------------------------------------------------------------------------- |
| id                     | string(int64)   | false    | none        | Unique Identifier                       | Unique identifier.                                                                                                                             |
| userId                 | string(int64)   | false    | none        | User ID                                 | ID of the owning user.                                                                                                                         |
| accountId              | string(int64)   | false    | none        | Account ID                              | ID of the owning account.                                                                                                                      |
| coinId                 | string(int64)   | false    | none        | Coin ID                                 | Collateral coin ID.                                                                                                                            |
| type                   | string          | false    | none        | Detail Type                             | Detail type.                                                                                                                                   |
| deltaAmount            | string(decimal) | false    | none        | Collateral Change Amount                | Amount of the collateral change.                                                                                                               |
| deltaLegacyAmount      | string(decimal) | false    | none        | Legacy Balance Change Amount            | Change amount of the legacy balance field.                                                                                                     |
| beforeAmount           | string(decimal) | false    | none        | Collateral Amount Before Change         | Collateral amount before the change.                                                                                                           |
| beforeLegacyAmount     | string(decimal) | false    | none        | Legacy Balance Amount Before Change     | Legacy balance before the change.                                                                                                              |
| fillCloseSize          | string(decimal) | false    | none        | Transaction Close Size                  | Transaction close size (positive for buy, negative for sell).                                                                                  |
| fillCloseValue         | string          | false    | none        | Transaction Close Value                 | Transaction close value (positive for buy, negative for sell).                                                                                 |
| fillCloseFee           | string          | false    | none        | Transaction Close Fee                   | Transaction close fee (typically zero or negative).                                                                                            |
| fillOpenSize           | string(decimal) | false    | none        | Transaction Open Size                   | Transaction open size (positive for buy, negative for sell).                                                                                   |
| fillOpenValue          | string          | false    | none        | Transaction Open Value                  | Transaction open value (positive for buy, negative for sell).                                                                                  |
| fillOpenFee            | string          | false    | none        | Transaction Open Fee                    | Transaction open fee (typically zero or negative).                                                                                             |
| fillPrice              | string(decimal) | false    | none        | Transaction Price                       | Transaction price (not precise, for display).                                                                                                  |
| liquidateFee           | string(decimal) | false    | none        | Liquidation Fee                         | Liquidation fee (if close transaction is a liquidation, typically zero or negative).                                                           |
| realizePnl             | string(decimal) | false    | none        | Realized Profit and Loss                | Realized profit and loss from a close (if a close transaction. Not precise, for display).                                                      |
| isLiquidate            | boolean         | false    | none        | Is Liquidation                          | Whether the transaction is a liquidation.                                                                                                      |
| isDeleverage           | boolean         | false    | none        | Is Auto-Deleveraging                    | Whether the transaction is from auto-deleveraging.                                                                                             |
| fundingTime            | string(int64)   | false    | none        | Funding Settlement Time                 | Funding settlement time.                                                                                                                       |
| fundingRate            | string(decimal) | false    | none        | Funding Rate                            | Funding rate.                                                                                                                                  |
| fundingIndexPrice      | string(decimal) | false    | none        | Funding Index Price                     | Index price related to funding rate.                                                                                                           |
| fundingOraclePrice     | string(decimal) | false    | none        | Funding Oracle Price                    | Oracle price related to funding rate.                                                                                                          |
| fundingPositionSize    | string(decimal) | false    | none        | Position Size During Funding Settlement | Position size during funding settlement (positive for long, negative for short).                                                               |
| depositId              | string(int64)   | false    | none        | Deposit Order ID                        | Associated deposit order ID when type=DEPOSIT.                                                                                                 |
| withdrawId             | string(int64)   | false    | none        | Withdrawal Order ID                     | Associated withdrawal order ID when type=WITHDRAW.                                                                                             |
| transferInId           | string(int64)   | false    | none        | Transfer In Order ID                    | Associated transfer-in order ID when type=TRANSFER\_IN.                                                                                        |
| transferOutId          | string(int64)   | false    | none        | Transfer Out Order ID                   | Associated transfer-out order ID when type=TRANSFER\_OUT.                                                                                      |
| transferReason         | string          | false    | none        | Transfer Reason                         | Transfer reason when type=TRANSFER\_IN/TRANSFER\_OUT.                                                                                          |
| orderId                | string(int64)   | false    | none        | Order ID                                | Associated order ID when type=POSITION\_BUY/POSITION\_SELL/FILL\_FEE\_INCOME.                                                                  |
| orderFillTransactionId | string(int64)   | false    | none        | Order Fill Transaction ID               | Associated order fill transaction ID when type=POSITION\_BUY/POSITION\_SELL/FILL\_FEE\_INCOME.                                                 |
| orderAccountId         | string(int64)   | false    | none        | Order Account ID                        | Associated order account ID when type=FILL\_FEE\_INCOME.                                                                                       |
| positionContractId     | string(int64)   | false    | none        | Position Contract ID                    | Associated position contract ID when type=POSITION\_BUY/POSITION\_SELL/POSITION\_FUNDING/FILL\_FEE\_INCOME.                                    |
| positionTransactionId  | string(int64)   | false    | none        | Position Transaction ID                 | Associated position transaction ID when type=POSITION\_BUY/POSITION\_SELL/POSITION\_FUNDING.                                                   |
| forceWithdrawId        | string          | false    | none        | Force Withdrawal Order ID               | Associated force withdrawal order ID when type=WITHDRAW.                                                                                       |
| forceTradeId           | string          | false    | none        | Force Trade ID                          | Associated force trade order ID when type=POSITION\_BUY/POSITION\_SELL.                                                                        |
| extraType              | string          | false    | none        | Extra Type                              | Extra type for upper-layer business use.                                                                                                       |
| extraDataJson          | string          | false    | none        | Extra Data                              | Extra data in JSON format, default is empty string.                                                                                            |
| censorStatus           | string          | false    | none        | Current Censoring Status                | Current censoring status.                                                                                                                      |
| censorTxId             | string(int64)   | false    | none        | Censoring Processing Sequence Number    | Censoring processing sequence number, exists when censor\_status=CENSOR\_SUCCESS/CENSOR\_FAILURE/L2\_APPROVED/L2\_REJECT/L2\_REJECT\_APPROVED. |
| censorTime             | string(int64)   | false    | none        | Censoring Processing Time               | Censoring processing time, exists when censor\_status=CENSOR\_SUCCESS/CENSOR\_FAILURE/L2\_APPROVED/L2\_REJECT/L2\_REJECT\_APPROVED.            |
| censorFailCode         | string          | false    | none        | Censoring Failure Code                  | Censoring failure code, exists when censor\_status=CENSOR\_FAILURE.                                                                            |
| censorFailReason       | string          | false    | none        | Censoring Failure Reason                | Censoring failure reason, exists when censor\_status=CENSOR\_FAILURE.                                                                          |
| l2TxId                 | string(int64)   | false    | none        | L2 Push Transaction ID                  | L2 push transaction ID, exists when censor\_status=CENSOR\_SUCCESS/L2\_APPROVED/L2\_REJECT/L2\_REJECT\_APPROVED.                               |
| l2RejectTime           | string(int64)   | false    | none        | L2 Rejection Time                       | L2 rejection time, exists when censor\_status=L2\_REJECT/L2\_REJECT\_APPROVED.                                                                 |
| l2RejectCode           | string          | false    | none        | L2 Rejection Error Code                 | L2 rejection error code, exists when censor\_status=L2\_REJECT/L2\_REJECT\_APPROVED.                                                           |
| l2RejectReason         | string          | false    | none        | L2 Rejection Reason                     | L2 rejection reason, exists when censor\_status=L2\_REJECT/L2\_REJECT\_APPROVED.                                                               |
| l2ApprovedTime         | string(int64)   | false    | none        | L2 Batch Verification Time              | L2 batch verification time, exists when censor\_status=L2\_APPROVED/L2\_REJECT\_APPROVED.                                                      |
| createdTime            | string(int64)   | false    | none        | Creation Time                           | Creation time.                                                                                                                                 |
| updatedTime            | string(int64)   | false    | none        | Update Time                             | Update time.                                                                                                                                   |

**Enumerated Values**

| Property       | Value                                   |
| -------------- | --------------------------------------- |
| type           | UNKNOWN\_COLLATERAL\_TRANSACTION\_TYPE  |
| type           | DEPOSIT                                 |
| type           | WITHDRAW                                |
| type           | TRANSFER\_IN                            |
| type           | TRANSFER\_OUT                           |
| type           | POSITION\_BUY                           |
| type           | POSITION\_SELL                          |
| type           | POSITION\_FUNDING                       |
| type           | FILL\_FEE\_INCOME                       |
| type           | BUG\_FIX\_COLLATERAL\_TRANSACTION\_TYPE |
| type           | UNRECOGNIZED                            |
| transferReason | UNKNOWN\_TRANSFER\_REASON               |
| transferReason | USER\_TRANSFER                          |
| transferReason | FAST\_WITHDRAW                          |
| transferReason | CROSS\_DEPOSIT                          |
| transferReason | CROSS\_WITHDRAW                         |
| transferReason | UNRECOGNIZED                            |
| censorStatus   | UNKNOWN\_TRANSACTION\_STATUS            |
| censorStatus   | INIT                                    |
| censorStatus   | CENSOR\_SUCCESS                         |
| censorStatus   | CENSOR\_FAILURE                         |
| censorStatus   | L2\_APPROVED                            |
| censorStatus   | L2\_REJECT                              |
| censorStatus   | L2\_REJECT\_APPROVED                    |
| censorStatus   | UNRECOGNIZED                            |

#### collateraltransaction

| Name         | Type                                                                  | Required | Constraints | Description                | Notes                                                          |
| ------------ | --------------------------------------------------------------------- | -------- | ----------- | -------------------------- | -------------------------------------------------------------- |
| code         | string                                                                | false    | none        | Status Code                | Returns "SUCCESS" on success; otherwise, it indicates failure. |
| data         | [PageDataCollateralTransaction](#schemapagedatacollateraltransaction) | false    | none        | Generic Paginated Response | Generic paginated response.                                    |
| errorParam   | object                                                                | false    | none        | Error Parameters           | Error message parameter information                            |
| requestTime  | string(timestamp)                                                     | false    | none        | Server Request Time        | Time at which the server received the request                  |
| responseTime | string(timestamp)                                                     | false    | none        | Server Response Time       | Time at which the server sent the response                     |
| traceId      | string                                                                | false    | none        | Trace ID                   | Invocation trace ID                                            |

#### schemapagedatacollateraltransaction

| Name               | Type                                                     | Required | Constraints | Description      | Notes                                                                    |
| ------------------ | -------------------------------------------------------- | -------- | ----------- | ---------------- | ------------------------------------------------------------------------ |
| dataList           | \[[CollateralTransaction](#schemacollateraltransaction)] | false    | none        | Data List        | List of collateral transaction data.                                     |
| nextPageOffsetData | string                                                   | false    | none        | Next Page Offset | Offset for retrieving the next page. If no next page data, empty string. |

#### position

| Name         | Type                           | Required | Constraints | Description          | Notes                                                          |
| ------------ | ------------------------------ | -------- | ----------- | -------------------- | -------------------------------------------------------------- |
| code         | string                         | false    | none        | Status Code          | Returns "SUCCESS" on success; otherwise, it indicates failure. |
| data         | \[[Position](#schemaposition)] | false    | none        | Response Data        | Correct response data.                                         |
| errorParam   | object                         | false    | none        | Error Parameters     | Error message parameter information                            |
| requestTime  | string(timestamp)              | false    | none        | Server Request Time  | Time at which the server received the request                  |
| responseTime | string(timestamp)              | false    | none        | Server Response Time | Time at which the server sent the response                     |
| traceId      | string                         | false    | none        | Trace ID             | Invocation trace ID                                            |

#### positionterm

| Name         | Type                                                | Required | Constraints | Description                | Notes                                                          |
| ------------ | --------------------------------------------------- | -------- | ----------- | -------------------------- | -------------------------------------------------------------- |
| code         | string                                              | false    | none        | Status Code                | Returns "SUCCESS" on success; otherwise, it indicates failure. |
| data         | [PageDataPositionTerm](#schemapagedatapositionterm) | false    | none        | Generic Paginated Response | Generic paginated response.                                    |
| errorParam   | object                                              | false    | none        | Error Parameters           | Error message parameter information                            |
| requestTime  | string(timestamp)                                   | false    | none        | Server Request Time        | Time at which the server received the request                  |
| responseTime | string(timestamp)                                   | false    | none        | Server Response Time       | Time at which the server sent the response                     |
| traceId      | string                                              | false    | none        | Trace ID                   | Invocation trace ID                                            |

#### schemapagedatapositionterm

| Name               | Type                                   | Required | Constraints | Description      | Notes                                                                    |
| ------------------ | -------------------------------------- | -------- | ----------- | ---------------- | ------------------------------------------------------------------------ |
| dataList           | \[[PositionTerm](#schemapositionterm)] | false    | none        | Data List        | List of position term data.                                              |
| nextPageOffsetData | string                                 | false    | none        | Next Page Offset | Offset for retrieving the next page. If no next page data, empty string. |

#### schemapositionterm

| Name            | Type           | Required | Constraints | Description                | Notes                                                                                                |
| --------------- | -------------- | -------- | ----------- | -------------------------- | ---------------------------------------------------------------------------------------------------- |
| userId          | string         | false    | none        | User ID                    | ID of the owning user.                                                                               |
| accountId       | string         | false    | none        | Account ID                 | ID of the owning account.                                                                            |
| coinId          | string         | false    | none        | Collateral Coin ID         | ID of the associated collateral coin.                                                                |
| contractId      | string         | false    | none        | Contract ID                | ID of the associated contract.                                                                       |
| termCount       | integer(int32) | false    | none        | Term Count                 | Term count. Starts from 1, increases by one each time a position is fully closed and then re-opened. |
| cumOpenSize     | string         | false    | none        | Cumulative Open Size       | Cumulative open size.                                                                                |
| cumOpenValue    | string         | false    | none        | Cumulative Open Value      | Cumulative open value.                                                                               |
| cumOpenFee      | string         | false    | none        | Cumulative Open Fee        | Cumulative open fees.                                                                                |
| cumCloseSize    | string         | false    | none        | Cumulative Close Size      | Cumulative close size.                                                                               |
| cumCloseValue   | string         | false    | none        | Cumulative Close Value     | Cumulative close value.                                                                              |
| cumCloseFee     | string         | false    | none        | Cumulative Close Fee       | Cumulative close fees.                                                                               |
| cumFundingFee   | string         | false    | none        | Cumulative Funding Fee     | Cumulative funding fees that have been settled.                                                      |
| cumLiquidateFee | string         | false    | none        | Cumulative Liquidation Fee | Cumulative liquidation fees.                                                                         |
| createdTime     | string(int64)  | false    | none        | Creation Time              | Creation time.                                                                                       |
| updatedTime     | string(int64)  | false    | none        | Update Time                | Update time.                                                                                         |
| currentLeverage | string         | false    | none        | Leverage at Close          | Leverage multiple at the time of close position.                                                     |

#### positiontransaction

| Name         | Type                                                 | Required | Constraints | Description          | Notes                                                          |
| ------------ | ---------------------------------------------------- | -------- | ----------- | -------------------- | -------------------------------------------------------------- |
| code         | string                                               | false    | none        | Status Code          | Returns "SUCCESS" on success; otherwise, it indicates failure. |
| data         | \[[PositionTransaction](#schemapositiontransaction)] | false    | none        | Response Data        | Correct response data.                                         |
| errorParam   | object                                               | false    | none        | Error Parameters     | Error message parameter information                            |
| requestTime  | string(timestamp)                                    | false    | none        | Server Request Time  | Time at which the server received the request                  |
| responseTime | string(timestamp)                                    | false    | none        | Server Response Time | Time at which the server sent the response                     |
| traceId      | string                                               | false    | none        | Trace ID             | Invocation trace ID                                            |

#### schemapositiontransaction

| Name                    | Type          | Required | Constraints | Description                             | Notes                                                                                                                                          |
| ----------------------- | ------------- | -------- | ----------- | --------------------------------------- | ---------------------------------------------------------------------------------------------------------------------------------------------- |
| id                      | string(int64) | false    | none        | Unique Identifier                       | Unique identifier.                                                                                                                             |
| userId                  | string(int64) | false    | none        | User ID                                 | ID of the owning user.                                                                                                                         |
| accountId               | string(int64) | false    | none        | Account ID                              | ID of the owning account.                                                                                                                      |
| coinId                  | string(int64) | false    | none        | Collateral Coin ID                      | ID of the associated collateral coin.                                                                                                          |
| contractId              | string(int64) | false    | none        | Contract ID                             | ID of the associated contract.                                                                                                                 |
| type                    | string        | false    | none        | Detail Type                             | Detail type.                                                                                                                                   |
| deltaOpenSize           | string        | false    | none        | Change in Open Size                     | Change in holding size.                                                                                                                        |
| deltaOpenValue          | string        | false    | none        | Change in Open Value                    | Change in open value.                                                                                                                          |
| deltaOpenFee            | string        | false    | none        | Change in Open Fee                      | Change in open fee.                                                                                                                            |
| deltaFundingFee         | string        | false    | none        | Change in Funding Fee                   | Change in funding fee.                                                                                                                         |
| beforeOpenSize          | string        | false    | none        | Open Size Before Change                 | Holding size before the change.                                                                                                                |
| beforeOpenValue         | string        | false    | none        | Open Value Before Change                | Open value before the change.                                                                                                                  |
| beforeOpenFee           | string        | false    | none        | Open Fee Before Change                  | Open fee before the change.                                                                                                                    |
| beforeFundingFee        | string        | false    | none        | Funding Fee Before Change               | Funding fee before the change.                                                                                                                 |
| fillCloseSize           | string        | false    | none        | Transaction Close Size                  | Transaction close size (positive for buy, negative for sell).                                                                                  |
| fillCloseValue          | string        | false    | none        | Transaction Close Value                 | Transaction close value (positive for buy, negative for sell).                                                                                 |
| fillCloseFee            | string        | false    | none        | Transaction Close Fee                   | Transaction close fee (typically zero or negative).                                                                                            |
| fillOpenSize            | string        | false    | none        | Transaction Open Size                   | Transaction open size (positive for buy, negative for sell).                                                                                   |
| fillOpenValue           | string        | false    | none        | Transaction Open Value                  | Transaction open value (positive for buy, negative for sell).                                                                                  |
| fillOpenFee             | string        | false    | none        | Transaction Open Fee                    | Transaction open fee (typically zero or negative).                                                                                             |
| fillPrice               | string        | false    | none        | Transaction Price                       | Transaction price (not precise, for display).                                                                                                  |
| liquidateFee            | string        | false    | none        | Liquidation Fee                         | Liquidation fee (if close transaction is a liquidation, typically zero or negative).                                                           |
| realizePnl              | string        | false    | none        | Realized Profit and Loss                | Realized profit and loss from a close (if a close transaction. Not precise, for display).                                                      |
| isLiquidate             | boolean       | false    | none        | Is Liquidation                          | Whether the transaction is a liquidation.                                                                                                      |
| isDeleverage            | boolean       | false    | none        | Is Auto-Deleveraging                    | Whether the transaction is from auto-deleveraging.                                                                                             |
| fundingTime             | string(int64) | false    | none        | Funding Settlement Time                 | Funding settlement time.                                                                                                                       |
| fundingRate             | string        | false    | none        | Funding Rate                            | Funding rate.                                                                                                                                  |
| fundingIndexPrice       | string        | false    | none        | Funding Index Price                     | Index price related to funding rate.                                                                                                           |
| fundingOraclePrice      | string        | false    | none        | Funding Oracle Price                    | Oracle price related to funding rate.                                                                                                          |
| fundingPositionSize     | string        | false    | none        | Position Size During Funding Settlement | Position size during funding settlement (positive for long, negative for short).                                                               |
| orderId                 | string(int64) | false    | none        | Order ID                                | Associated order ID.                                                                                                                           |
| orderFillTransactionId  | string(int64) | false    | none        | Order Fill Transaction ID               | Associated order fill transaction ID.                                                                                                          |
| collateralTransactionId | string(int64) | false    | none        | Collateral Transaction ID               | Associated collateral transaction detail ID.                                                                                                   |
| forceTradeId            | string        | false    | none        | Force Trade ID                          | Associated force trade order ID.                                                                                                               |
| extraType               | string        | false    | none        | Extra Type                              | Extra type for upper-layer business use.                                                                                                       |
| extraDataJson           | string        | false    | none        | Extra Data                              | Extra data in JSON format, default is empty string.                                                                                            |
| censorStatus            | string        | false    | none        | Current Censoring Status                | Current censoring status.                                                                                                                      |
| censorTxId              | string(int64) | false    | none        | Censoring Processing Sequence Number    | Censoring processing sequence number, exists when censor\_status=CENSOR\_SUCCESS/CENSOR\_FAILURE/L2\_APPROVED/L2\_REJECT/L2\_REJECT\_APPROVED. |
| censorTime              | string(int64) | false    | none        | Censoring Processing Time               | Censoring processing time, exists when censor\_status=CENSOR\_SUCCESS/CENSOR\_FAILURE/L2\_APPROVED/L2\_REJECT/L2\_REJECT\_APPROVED.            |
| censorFailCode          | string        | false    | none        | Censoring Failure Code                  | Censoring failure code, exists when censor\_status=CENSOR\_FAILURE.                                                                            |
| censorFailReason        | string        | false    | none        | Censoring Failure Reason                | Censoring failure reason, exists when censor\_status=CENSOR\_FAILURE.                                                                          |
| l2TxId                  | string(int64) | false    | none        | L2 Push Transaction ID                  | L2 push transaction ID, exists when censor\_status=CENSOR\_SUCCESS/L2\_APPROVED/L2\_REJECT/L2\_REJECT\_APPROVED.                               |
| l2RejectTime            | string(int64) | false    | none        | L2 Rejection Time                       | L2 rejection time, exists when censor\_status=L2\_REJECT/L2\_REJECT\_APPROVED.                                                                 |
| l2RejectCode            | string        | false    | none        | L2 Rejection Error Code                 | L2 rejection error code, exists when censor\_status=L2\_REJECT/L2\_REJECT\_APPROVED.                                                           |
| l2RejectReason          | string        | false    | none        | L2 Rejection Reason                     | L2 rejection reason, exists when censor\_status=L2\_REJECT/L2\_REJECT\_APPROVED.                                                               |
| l2ApprovedTime          | string(int64) | false    | none        | L2 Batch Verification Time              | L2 batch verification time, exists when censor\_status=L2\_APPROVED/L2\_REJECT\_APPROVED.                                                      |
| createdTime             | string(int64) | false    | none        | Creation Time                           | Creation time.                                                                                                                                 |
| updatedTime             | string(int64) | false    | none        | Update Time                             | Update time.                                                                                                                                   |

**Enumerated Values**

| Property     | Value                                 |
| ------------ | ------------------------------------- |
| type         | UNKNOWN\_POSITION\_TRANSACTION\_TYPE  |
| type         | BUY\_POSITION                         |
| type         | SELL\_POSITION                        |
| type         | SETTLE\_FUNDING\_FEE                  |
| type         | BUG\_FIX\_POSITION\_TRANSACTION\_TYPE |
| type         | UNRECOGNIZED                          |
| censorStatus | UNKNOWN\_TRANSACTION\_STATUS          |
| censorStatus | INIT                                  |
| censorStatus | CENSOR\_SUCCESS                       |
| censorStatus | CENSOR\_FAILURE                       |
| censorStatus | L2\_APPROVED                          |
| censorStatus | L2\_REJECT                            |
| censorStatus | L2\_REJECT\_APPROVED                  |
| censorStatus | UNRECOGNIZED                          |

#### positiontransactionpage

| Name         | Type                                                              | Required | Constraints | Description                | Notes                                                          |
| ------------ | ----------------------------------------------------------------- | -------- | ----------- | -------------------------- | -------------------------------------------------------------- |
| code         | string                                                            | false    | none        | Status Code                | Returns "SUCCESS" on success; otherwise, it indicates failure. |
| data         | [PageDataPositionTransaction](#schemapagedatapositiontransaction) | false    | none        | Generic Paginated Response | Generic paginated response.                                    |
| errorParam   | object                                                            | false    | none        | Error Parameters           | Error message parameter information                            |
| requestTime  | string(timestamp)                                                 | false    | none        | Server Request Time        | Time at which the server received the request                  |
| responseTime | string(timestamp)                                                 | false    | none        | Server Response Time       | Time at which the server sent the response                     |
| traceId      | string                                                            | false    | none        | Trace ID                   | Invocation trace ID                                            |

#### schemapagedatapositiontransaction

| Name               | Type                                                 | Required | Constraints | Description      | Notes                                                                    |
| ------------------ | ---------------------------------------------------- | -------- | ----------- | ---------------- | ------------------------------------------------------------------------ |
| dataList           | \[[PositionTransaction](#schemapositiontransaction)] | false    | none        | Data List        | List of position transaction data.                                       |
| nextPageOffsetData | string                                               | false    | none        | Next Page Offset | Offset for retrieving the next page. If no next page data, empty string. |

# Order API

## OrderPrivateApi

### POST Get Maximum Order Creation Size

POST /api/v1/private/order/getMaxCreateOrderSize

> Body Request Parameters

```json
{
  "accountId": "551109015904453258",
  "contractId": "10000001",
  "price": "97,463.4"
}
```

#### Request Parameters

| Name | Location | Type                                                            | Required | Description |
| ---- | -------- | --------------------------------------------------------------- | -------- | ----------- |
| body | body     | [GetMaxCreateOrderSizeParam](#schemagetmaxcreateordersizeparam) | No       | none        |

> Response Example

> 200 Response

```json
{
    "code": "SUCCESS",
    "data": {
        "maxBuySize": "0.004",
        "maxSellSize": "0.009",
        "ask1Price": "97532.1",
        "bid1Price": "97496.1"
    },
    "msg": null,
    "errorParam": null,
    "requestTime": "1734665285662",
    "responseTime": "1734665285679",
    "traceId": "38fc6d0f57f3e64c8c6239fae7d35f84"
}
```

#### Response

| Status Code | Status Code Description                                 | Description      | Schema                                       |
| ----------- | ------------------------------------------------------- | ---------------- | -------------------------------------------- |
| 200         | [OK](https://tools.ietf.org/html/rfc7231#section-6.3.1) | default response | [Result](#schemaresultgetmaxcreateordersize) |

### POST Create Order

POST /api/v1/private/order/createOrder

> Body Request Parameters

```json
{
    "price": "97393.8",
    "size": "0.001",
    "type": "LIMIT",
    "timeInForce": "GOOD_TIL_CANCEL",
    "reduceOnly": false,
    "isPositionTpsl": false,
    "isSetOpenTp": false,
    "isSetOpenSl": false,
    "accountId": "543429922991899150",
    "contractId": "10000001",
    "side": "BUY",
    "triggerPrice": "",
    "triggerPriceType": "LAST_PRICE",
    "clientOrderId": "21163368294502694",
    "expireTime": "1736476772359",
    "l2Nonce": "808219",
    "l2Value": "97.3938",
    "l2Size": "0.001",
    "l2LimitFee": "0.048697",
    "l2ExpireTime": "1737254372359",
    "l2Signature": "0537b3051bb9ffb98bb842ff6cadf69807a8dbf74f94d8c6106cf4f59b1fd2dc01aa2d93420408d60298831ddb82f7b482574ecb0fc285294dfeec732379ec40",
    "extraType": "",
    "extraDataJson": "",
    "symbol": "BTCUSDT",
    "showEqualValInput": true,
    "maxSellQTY": 0.009,
    "maxBuyQTY": 0.007
}
```

#### Request Parameters

| Name | Location | Type                                        | Required | Description |
| ---- | -------- | ------------------------------------------- | -------- | ----------- |
| body | body     | [CreateOrderParam](#schemacreateorderparam) | No       | none        |

> Response Example

> 200 Response

```json
{
    "code": "SUCCESS",
    "data": {
        "orderId": "564814927928230158"
    },
    "msg": null,
    "errorParam": null,
    "requestTime": "1734662372560",
    "responseTime": "1734662372575",
    "traceId": "364c0020d1fe90bbfcca3cf3a9d54759"
}
```

#### Response

| Status Code | Status Code Description                                 | Description      | Schema                             |
| ----------- | ------------------------------------------------------- | ---------------- | ---------------------------------- |
| 200         | [OK](https://tools.ietf.org/html/rfc7231#section-6.3.1) | default response | [Result](#schemaresultcreateorder) |

#### Response Data Structure

### POST Cancel Order by Order ID

POST /api/v1/private/order/cancelOrderById

> Body Request Parameters

```json
{
    "accountId": "551109015904453258",
    "orderIdList": [
        "564827797948727434"
    ]
}
```

#### Request Parameters

| Name | Location | Type                                                | Required | Description |
| ---- | -------- | --------------------------------------------------- | -------- | ----------- |
| body | body     | [CancelOrderByIdParam](#schemacancelorderbyidparam) | No       | none        |

> Response Example

> 200 Response

```json
{
    "code": "SUCCESS",
    "data": {
        "cancelResultMap": {
            "564827797948727434": "SUCCESS"
        }
    },
    "msg": null,
    "errorParam": null,
    "requestTime": "1734665453034",
    "responseTime": "1734665453043",
    "traceId": "5597699fd044ed965bfed23fb3728ba5"
}
```

#### Response

| Status Code | Status Code Description                                 | Description      | Schema                             |
| ----------- | ------------------------------------------------------- | ---------------- | ---------------------------------- |
| 200         | [OK](https://tools.ietf.org/html/rfc7231#section-6.3.1) | default response | [Result](#schemaresultcancelorder) |

### POST Cancel All Orders under Account

POST /api/v1/private/order/cancelAllOrder

> Body Request Parameters

```json
{
    "accountId": "551109015904453258"
}
```

#### Request Parameters

| Name | Location | Type                                              | Required | Description |
| ---- | -------- | ------------------------------------------------- | -------- | ----------- |
| body | body     | [CancelAllOrderParam](#schemacancelallorderparam) | No       | none        |

> Response Example

> 200 Response

```json
{
    "code": "SUCCESS",
    "data": {
        "cancelResultMap": {
            "564828209955209354": "SUCCESS"
        }
    },
    "msg": null,
    "errorParam": null,
    "requestTime": "1734665771719",
    "responseTime": "1734665771743",
    "traceId": "c0a1da9b75ad55d64ce0e98f86279c34"
}
```

#### Response

| Status Code | Status Code Description                                 | Description      | Schema |
| ----------- | ------------------------------------------------------- | ---------------- | ------ |
| 200         | [OK](https://tools.ietf.org/html/rfc7231#section-6.3.1) | default response | Inline |

#### Response Data Structure

### GET Get Orders by Account ID and Order IDs (Batch)

GET /api/v1/private/order/getOrderById

#### Request Parameters

| Name        | Location | Type   | Required | Description |
| ----------- | -------- | ------ | -------- | ----------- |
| accountId   | query    | string | No       | Account ID  |
| orderIdList | query    | string | No       | Order IDs   |

> Response Example

> 200 Response

```json
{
    "code": "SUCCESS",
    "data": [
        {
            "id": "564829588270612618",
            "userId": "543429922866069763",
            "accountId": "551109015904453258",
            "coinId": "1000",
            "contractId": "10000001",
            "side": "BUY",
            "price": "96260.7",
            "size": "0.001",
            "clientOrderId": "9311381563209122",
            "type": "LIMIT",
            "timeInForce": "GOOD_TIL_CANCEL",
            "reduceOnly": false,
            "triggerPrice": "0",
            "triggerPriceType": "UNKNOWN_PRICE_TYPE",
            "expireTime": "1736480267612",
            "sourceKey": "",
            "isPositionTpsl": false,
            "isLiquidate": false,
            "isDeleverage": false,
            "openTpslParentOrderId": "0",
            "isSetOpenTp": false,
            "openTp": {
                "side": "UNKNOWN_ORDER_SIDE",
                "price": "",
                "size": "",
                "clientOrderId": "",
                "triggerPrice": "",
                "triggerPriceType": "UNKNOWN_PRICE_TYPE",
                "expireTime": "0",
                "l2Nonce": "0",
                "l2Value": "",
                "l2Size": "",
                "l2LimitFee": "",
                "l2ExpireTime": "0",
                "l2Signature": {
                    "r": "",
                    "s": "",
                    "v": ""
                }
            },
            "isSetOpenSl": false,
            "openSl": {
                "side": "UNKNOWN_ORDER_SIDE",
                "price": "",
                "size": "",
                "clientOrderId": "",
                "triggerPrice": "",
                "triggerPriceType": "UNKNOWN_PRICE_TYPE",
                "expireTime": "0",
                "l2Nonce": "0",
                "l2Value": "",
                "l2Size": "",
                "l2LimitFee": "",
                "l2ExpireTime": "0",
                "l2Signature": {
                    "r": "",
                    "s": "",
                    "v": ""
                }
            },
            "isWithoutMatch": false,
            "withoutMatchFillSize": "0",
            "withoutMatchFillValue": "0",
            "withoutMatchPeerAccountId": "0",
            "withoutMatchPeerOrderId": "0",
            "maxLeverage": "50",
            "takerFeeRate": "0.000500",
            "makerFeeRate": "0.000180",
            "liquidateFeeRate": "0.01",
            "marketLimitPrice": "0",
            "marketLimitValue": "0",
            "l2Nonce": "3353661024",
            "l2Value": "96.260700",
            "l2Size": "0.001",
            "l2LimitFee": "0.048131",
            "l2ExpireTime": "1737257867612",
            "l2Signature": {
                "r": "0x072f299b86c199e161508ed554889d50476bc96d5a0c320bcd5b7e579b692c06",
                "s": "0x05b24b988f84bca951b3bb4e69b11e0aa1ce08cca38fea0f3afd94b5e7cd09f8",
                "v": ""
            },
            "extraType": "",
            "extraDataJson": "",
            "status": "OPEN",
            "matchSequenceId": "35229771",
            "triggerTime": "0",
            "triggerPriceTime": "0",
            "triggerPriceValue": "0",
            "cancelReason": "UNKNOWN_ORDER_CANCEL_REASON",
            "cumFillSize": "0",
            "cumFillValue": "0",
            "cumFillFee": "0",
            "maxFillPrice": "0",
            "minFillPrice": "0",
            "cumLiquidateFee": "0",
            "cumRealizePnl": "0",
            "cumMatchSize": "0",
            "cumMatchValue": "0",
            "cumMatchFee": "0",
            "cumFailSize": "0",
            "cumFailValue": "0",
            "cumFailFee": "0",
            "cumApprovedSize": "0",
            "cumApprovedValue": "0",
            "cumApprovedFee": "0",
            "createdTime": "1734665867870",
            "updatedTime": "1734665867876"
        }
    ],
    "msg": null,
    "errorParam": null,
    "requestTime": "1734665901264",
    "responseTime": "1734665901281",
    "traceId": "65ca2097b4d9cfb487bd9cef53097040"
}
```

#### Response

| Status Code | Status Code Description                                 | Description      | Schema |
| ----------- | ------------------------------------------------------- | ---------------- | ------ |
| 200         | [OK](https://tools.ietf.org/html/rfc7231#section-6.3.1) | default response | Inline |

#### Response Data Structure

### GET Get Orders by Client Order IDs (Batch)

GET /api/v1/private/order/getOrderByClientOrderId

#### Request Parameters

| Name              | Location | Type   | Required | Description              |
| ----------------- | -------- | ------ | -------- | ------------------------ |
| accountId         | query    | string | No       | Account ID               |
| clientOrderIdList | query    | string | No       | Client-defined order IDs |

> Response Example

> 200 Response

```json
{
    "code": "SUCCESS",
    "data": [
        {
            "id": "564829588270612618",
            "userId": "543429922866069763",
            "accountId": "551109015904453258",
            "coinId": "1000",
            "contractId": "10000001",
            "side": "BUY",
            "price": "96260.7",
            "size": "0.001",
            "clientOrderId": "9311381563209122",
            "type": "LIMIT",
            "timeInForce": "GOOD_TIL_CANCEL",
            "reduceOnly": false,
            "triggerPrice": "0",
            "triggerPriceType": "UNKNOWN_PRICE_TYPE",
            "expireTime": "1736480267612",
            "sourceKey": "",
            "isPositionTpsl": false,
            "isLiquidate": false,
            "isDeleverage": false,
            "openTpslParentOrderId": "0",
            "isSetOpenTp": false,
            "openTp": {
                "side": "UNKNOWN_ORDER_SIDE",
                "price": "",
                "size": "",
                "clientOrderId": "",
                "triggerPrice": "",
                "triggerPriceType": "UNKNOWN_PRICE_TYPE",
                "expireTime": "0",
                "l2Nonce": "0",
                "l2Value": "",
                "l2Size": "",
                "l2LimitFee": "",
                "l2ExpireTime": "0",
                "l2Signature": {
                    "r": "",
                    "s": "",
                    "v": ""
                }
            },
            "isSetOpenSl": false,
            "openSl": {
                "side": "UNKNOWN_ORDER_SIDE",
                "price": "",
                "size": "",
                "clientOrderId": "",
                "triggerPrice": "",
                "triggerPriceType": "UNKNOWN_PRICE_TYPE",
                "expireTime": "0",
                "l2Nonce": "0",
                "l2Value": "",
                "l2Size": "",
                "l2LimitFee": "",
                "l2ExpireTime": "0",
                "l2Signature": {
                    "r": "",
                    "s": "",
                    "v": ""
                }
            },
            "isWithoutMatch": false,
            "withoutMatchFillSize": "0",
            "withoutMatchFillValue": "0",
            "withoutMatchPeerAccountId": "0",
            "withoutMatchPeerOrderId": "0",
            "maxLeverage": "50",
            "takerFeeRate": "0.000500",
            "makerFeeRate": "0.000180",
            "liquidateFeeRate": "0.01",
            "marketLimitPrice": "0",
            "marketLimitValue": "0",
            "l2Nonce": "3353661024",
            "l2Value": "96.260700",
            "l2Size": "0.001",
            "l2LimitFee": "0.048131",
            "l2ExpireTime": "1737257867612",
            "l2Signature": {
                "r": "0x072f299b86c199e161508ed554889d50476bc96d5a0c320bcd5b7e579b692c06",
                "s": "0x05b24b988f84bca951b3bb4e69b11e0aa1ce08cca38fea0f3afd94b5e7cd09f8",
                "v": ""
            },
            "extraType": "",
            "extraDataJson": "",
            "status": "OPEN",
            "matchSequenceId": "35229771",
            "triggerTime": "0",
            "triggerPriceTime": "0",
            "triggerPriceValue": "0",
            "cancelReason": "UNKNOWN_ORDER_CANCEL_REASON",
            "cumFillSize": "0",
            "cumFillValue": "0",
            "cumFillFee": "0",
            "maxFillPrice": "0",
            "minFillPrice": "0",
            "cumLiquidateFee": "0",
            "cumRealizePnl": "0",
            "cumMatchSize": "0",
            "cumMatchValue": "0",
            "cumMatchFee": "0",
            "cumFailSize": "0",
            "cumFailValue": "0",
            "cumFailFee": "0",
            "cumApprovedSize": "0",
            "cumApprovedValue": "0",
            "cumApprovedFee": "0",
            "createdTime": "1734665867870",
            "updatedTime": "1734665867876"
        }
    ],
    "msg": null,
    "errorParam": null,
    "requestTime": "1734665947238",
    "responseTime": "1734665947256",
    "traceId": "64913ab9c62058bc2d9edaeafc3da271"
}
```

#### Response

| Status Code | Status Code Description                                 | Description      | Schema |
| ----------- | ------------------------------------------------------- | ---------------- | ------ |
| 200         | [OK](https://tools.ietf.org/html/rfc7231#section-6.3.1) | default response | Inline |

### GET Get Historical Orders (Paginated)

GET /api/v1/private/order/getHistoryOrderPage

#### Request Parameters

| Name                            | Location | Type   | Required | Description                                                                                           |
| ------------------------------- | -------- | ------ | -------- | ----------------------------------------------------------------------------------------------------- |
| accountId                       | query    | string | No       | Account ID                                                                                            |
| size                            | query    | string | No       | Number of items to fetch. Must be greater than 0 and less than or equal to 100.                       |
| offsetData                      | query    | string | No       | Pagination offset. If not provided or empty, retrieves the first page.                                |
| filterCoinIdList                | query    | string | No       | Filters by collateral coin IDs. If empty, fetches orders for all collateral coin IDs.                 |
| filterContractIdList            | query    | string | No       | Filters by contract IDs. If empty, fetches orders for all contracts.                                  |
| filterTypeList                  | query    | string | No       | Filters by order types. If empty, fetches orders of all types.                                        |
| filterStatusList                | query    | string | No       | Filters by order status. If empty, fetches orders of all statuses.                                    |
| filterIsLiquidateList           | query    | string | No       | Filters by liquidate orders. If empty, fetches all orders                                             |
| filterIsDeleverageList          | query    | string | No       | Filters by deleverage orders. If empty, fetches all orders                                            |
| filterIsPositionTpslList        | query    | string | No       | Filters by position TP/SL orders. If empty, fetches all orders                                        |
| filterStartCreatedTimeInclusive | query    | string | No       | Filters orders created after or on this time (inclusive). If empty or 0, retrieves from the earliest. |
| filterEndCreatedTimeExclusive   | query    | string | No       | Filters orders created before this time (exclusive). If empty or 0, retrieves to the latest.          |

> Response Example

> 200 Response

```json
{
    "code": "SUCCESS",
    "data": {
        "dataList": [
            {
                "id": "564815695875932430",
                "userId": "543429922866069763",
                "accountId": "543429922991899150",
                "coinId": "1000",
                "contractId": "10000001",
                "side": "BUY",
                "price": "97444.5",
                "size": "0.001",
                "clientOrderId": "553364074986685",
                "type": "LIMIT",
                "timeInForce": "GOOD_TIL_CANCEL",
                "reduceOnly": false,
                "triggerPrice": "0",
                "triggerPriceType": "UNKNOWN_PRICE_TYPE",
                "expireTime": "1736476955478",
                "sourceKey": "",
                "isPositionTpsl": false,
                "isLiquidate": false,
                "isDeleverage": false,
                "openTpslParentOrderId": "0",
                "isSetOpenTp": false,
                "openTp": {
                    "side": "UNKNOWN_ORDER_SIDE",
                    "price": "",
                    "size": "",
                    "clientOrderId": "",
                    "triggerPrice": "",
                    "triggerPriceType": "UNKNOWN_PRICE_TYPE",
                    "expireTime": "0",
                    "l2Nonce": "0",
                    "l2Value": "",
                    "l2Size": "",
                    "l2LimitFee": "",
                    "l2ExpireTime": "0",
                    "l2Signature": {
                        "r": "",
                        "s": "",
                        "v": ""
                    }
                },
                "isSetOpenSl": false,
                "openSl": {
                    "side": "UNKNOWN_ORDER_SIDE",
                    "price": "",
                    "size": "",
                    "clientOrderId": "",
                    "triggerPrice": "",
                    "triggerPriceType": "UNKNOWN_PRICE_TYPE",
                    "expireTime": "0",
                    "l2Nonce": "0",
                    "l2Value": "",
                    "l2Size": "",
                    "l2LimitFee": "",
                    "l2ExpireTime": "0",
                    "l2Signature": {
                        "r": "",
                        "s": "",
                        "v": ""
                    }
                },
                "isWithoutMatch": false,
                "withoutMatchFillSize": "0",
                "withoutMatchFillValue": "0",
                "withoutMatchPeerAccountId": "0",
                "withoutMatchPeerOrderId": "0",
                "maxLeverage": "50",
                "takerFeeRate": "0.000500",
                "makerFeeRate": "0.000180",
                "liquidateFeeRate": "0.01",
                "marketLimitPrice": "0",
                "marketLimitValue": "0",
                "l2Nonce": "2054491946",
                "l2Value": "97.444500",
                "l2Size": "0.001",
                "l2LimitFee": "0.048723",
                "l2ExpireTime": "1737254555478",
                "l2Signature": {
                    "r": "0x009af59c2963f1650449904fde059a83fed5beb4acdd67ffa22c551c4be977de",
                    "s": "0x04940a395f2d1b39c0f2b969e47fec478fbfea9ce227bfedd07d407175dcac3e",
                    "v": ""
                },
                "extraType": "",
                "extraDataJson": "",
                "status": "FILLED",
                "matchSequenceId": "35196430",
                "triggerTime": "0",
                "triggerPriceTime": "0",
                "triggerPriceValue": "0",
                "cancelReason": "UNKNOWN_ORDER_CANCEL_REASON",
                "cumFillSize": "0.001",
                "cumFillValue": "97.4445",
                "cumFillFee": "0.017540",
                "maxFillPrice": "97444.5",
                "minFillPrice": "97444.5",
                "cumLiquidateFee": "0",
                "cumRealizePnl": "-0.017540",
                "cumMatchSize": "0.001",
                "cumMatchValue": "97.4445",
                "cumMatchFee": "0.017540",
                "cumFailSize": "0",
                "cumFailValue": "0",
                "cumFailFee": "0",
                "cumApprovedSize": "0",
                "cumApprovedValue": "0",
                "cumApprovedFee": "0",
                "createdTime": "1734662555665",
                "updatedTime": "1734662617992"
            }
        ],
        "nextPageOffsetData": ""
    },
    "msg": null,
    "errorParam": null,
    "requestTime": "1734662697584",
    "responseTime": "1734662697601",
    "traceId": "1cd03694d7da308cb13603f34b0836e6"
}
```

#### Response

| Status Code | Status Code Description                                 | Description      | Schema                  |
| ----------- | ------------------------------------------------------- | ---------------- | ----------------------- |
| 200         | [OK](https://tools.ietf.org/html/rfc7231#section-6.3.1) | default response | [Result](#schemaresult) |

### GET Get Historical Order Fill Transactions (Paginated)

GET /api/v1/private/order/getHistoryOrderFillTransactionPage

#### Request Parameters

| Name                            | Location | Type   | Required | Description                                                                                                            |
| ------------------------------- | -------- | ------ | -------- | ---------------------------------------------------------------------------------------------------------------------- |
| accountId                       | query    | string | No       | Account ID                                                                                                             |
| size                            | query    | string | No       | Number of items to fetch. Must be greater than 0 and less than or equal to 100.                                        |
| offsetData                      | query    | string | No       | Pagination offset. If not provided or empty, retrieves the first page.                                                 |
| filterCoinIdList                | query    | string | No       | Filters by collateral coin IDs. If empty, fetches order fill transactions for all collateral coin IDs.                 |
| filterContractIdList            | query    | string | No       | Filters by contract IDs. If empty, fetches order fill transactions for all contracts.                                  |
| filterOrderIdList               | query    | string | No       | Filters by order IDs. If empty, fetches order fill transactions for all orders.                                        |
| filterIsLiquidateList           | query    | string | No       | Filters by liquidate orders. If empty, fetches all orders                                                              |
| filterIsDeleverageList          | query    | string | No       | Filters by deleverage orders. If empty, fetches all orders                                                             |
| filterIsPositionTpslList        | query    | string | No       | Filters by position TP/SL orders. If empty, fetches all orders                                                         |
| filterStartCreatedTimeInclusive | query    | string | No       | Filters order fill transactions created after or on this time (inclusive). If empty or 0, retrieves from the earliest. |
| filterEndCreatedTimeExclusive   | query    | string | No       | Filters order fill transactions created before this time (exclusive). If empty or 0, retrieves to the latest.          |

> Response Example

> 200 Response

```json
{
    "code": "SUCCESS",
    "data": {
        "dataList": [
            {
                "id": "564815957260763406",
                "userId": "543429922866069763",
                "accountId": "543429922991899150",
                "coinId": "1000",
                "contractId": "10000001",
                "orderId": "564815695875932430",
                "orderSide": "BUY",
                "fillSize": "0.001",
                "fillValue": "97.4445",
                "fillFee": "0.017540",
                "fillPrice": "97444.5",
                "liquidateFee": "0",
                "realizePnl": "-0.017540",
                "direction": "MAKER",
                "isPositionTpsl": false,
                "isLiquidate": false,
                "isDeleverage": false,
                "isWithoutMatch": false,
                "matchSequenceId": "35196430",
                "matchIndex": 0,
                "matchTime": "1734662617982",
                "matchAccountId": "555790606509539863",
                "matchOrderId": "564815957235597591",
                "matchFillId": "05d14491-db7d-478a-9d9f-2dc55c3ff3ca",
                "positionTransactionId": "564815957294318862",
                "collateralTransactionId": "564815957294317838",
                "extraType": "",
                "extraDataJson": "",
                "censorStatus": "CENSOR_SUCCESS",
                "censorTxId": "893031",
                "censorTime": "1734662617988",
                "censorFailCode": "",
                "censorFailReason": "",
                "l2TxId": "1084582",
                "l2RejectTime": "0",
                "l2RejectCode": "",
                "l2RejectReason": "",
                "l2ApprovedTime": "0",
                "createdTime": "1734662617984",
                "updatedTime": "1734662617992"
            }
        ],
        "nextPageOffsetData": ""
    },
    "msg": null,
    "errorParam": null,
    "requestTime": "1734662681040",
    "responseTime": "1734662681051",
    "traceId": "770fcce6222c2d88b65b4ecb36e84c43"
}
```

#### Response

| Status Code | Status Code Description                                 | Description      | Schema                                              |
| ----------- | ------------------------------------------------------- | ---------------- | --------------------------------------------------- |
| 200         | [OK](https://tools.ietf.org/html/rfc7231#section-6.3.1) | default response | [Result](#schemaresultpagedataorderfilltransaction) |

### GET Get Historical Order Fill Transactions by ID (Batch)

GET /api/v1/private/order/getHistoryOrderFillTransactionById

#### Request Parameters

| Name                       | Location | Type   | Required | Description                |
| -------------------------- | -------- | ------ | -------- | -------------------------- |
| accountId                  | query    | string | No       | Account ID                 |
| orderFillTransactionIdList | query    | string | No       | Order fill transaction IDs |

> Response Example

> 200 Response

```json
{
    "code": "SUCCESS",
    "data": [
        {
            "id": "564815957260763406",
            "userId": "543429922866069763",
            "accountId": "543429922991899150",
            "coinId": "1000",
            "contractId": "10000001",
            "orderId": "564815695875932430",
            "orderSide": "BUY",
            "fillSize": "0.001",
            "fillValue": "97.4445",
            "fillFee": "0.017540",
            "fillPrice": "97444.5",
            "liquidateFee": "0",
            "realizePnl": "-0.017540",
            "direction": "MAKER",
            "isPositionTpsl": false,
            "isLiquidate": false,
            "isDeleverage": false,
            "isWithoutMatch": false,
            "matchSequenceId": "35196430",
            "matchIndex": 0,
            "matchTime": "1734662617982",
            "matchAccountId": "555790606509539863",
            "matchOrderId": "564815957235597591",
            "matchFillId": "05d14491-db7d-478a-9d9f-2dc55c3ff3ca",
            "positionTransactionId": "564815957294318862",
            "collateralTransactionId": "564815957294317838",
            "extraType": "",
            "extraDataJson": "",
            "censorStatus": "CENSOR_SUCCESS",
            "censorTxId": "893031",
            "censorTime": "1734662617988",
            "censorFailCode": "",
            "censorFailReason": "",
            "l2TxId": "1084582",
            "l2RejectTime": "0",
            "l2RejectCode": "",
            "l2RejectReason": "",
            "l2ApprovedTime": "0",
            "createdTime": "1734662617984",
            "updatedTime": "1734662617992"
        }
    ],
    "msg": null,
    "errorParam": null,
    "requestTime": "1734666041607",
    "responseTime": "1734666041619",
    "traceId": "629acb9f32074715a1ea9befd171c452"
}
```

#### Response

| Status Code | Status Code Description                                 | Description      | Schema                                              |
| ----------- | ------------------------------------------------------- | ---------------- | --------------------------------------------------- |
| 200         | [OK](https://tools.ietf.org/html/rfc7231#section-6.3.1) | default response | [Result](#schemaresultpagedataorderfilltransaction) |

### GET Get Historical Orders by ID (Batch)

GET /api/v1/private/order/getHistoryOrderById

#### Request Parameters

| Name        | Location | Type   | Required | Description |
| ----------- | -------- | ------ | -------- | ----------- |
| accountId   | query    | string | No       | Account ID  |
| orderIdList | query    | string | No       | Order IDs   |

> Response Example

> 200 Response

```json
{
    "code": "SUCCESS",
    "data": [
        {
            "id": "564815695875932430",
            "userId": "543429922866069763",
            "accountId": "543429922991899150",
            "coinId": "1000",
            "contractId": "10000001",
            "side": "BUY",
            "price": "97444.5",
            "size": "0.001",
            "clientOrderId": "553364074986685",
            "type": "LIMIT",
            "timeInForce": "GOOD_TIL_CANCEL",
            "reduceOnly": false,
            "triggerPrice": "0",
            "triggerPriceType": "UNKNOWN_PRICE_TYPE",
            "expireTime": "1736476955478",
            "sourceKey": "",
            "isPositionTpsl": false,
            "isLiquidate": false,
            "isDeleverage": false,
            "openTpslParentOrderId": "0",
            "isSetOpenTp": false,
            "openTp": {
                "side": "UNKNOWN_ORDER_SIDE",
                "price": "",
                "size": "",
                "clientOrderId": "",
                "triggerPrice": "",
                "triggerPriceType": "UNKNOWN_PRICE_TYPE",
                "expireTime": "0",
                "l2Nonce": "0",
                "l2Value": "",
                "l2Size": "",
                "l2LimitFee": "",
                "l2ExpireTime": "0",
                "l2Signature": {
                    "r": "",
                    "s": "",
                    "v": ""
                }
            },
            "isSetOpenSl": false,
            "openSl": {
                "side": "UNKNOWN_ORDER_SIDE",
                "price": "",
                "size": "",
                "clientOrderId": "",
                "triggerPrice": "",
                "triggerPriceType": "UNKNOWN_PRICE_TYPE",
                "expireTime": "0",
                "l2Nonce": "0",
                "l2Value": "",
                "l2Size": "",
                "l2LimitFee": "",
                "l2ExpireTime": "0",
                "l2Signature": {
                    "r": "",
                    "s": "",
                    "v": ""
                }
            },
            "isWithoutMatch": false,
            "withoutMatchFillSize": "0",
            "withoutMatchFillValue": "0",
            "withoutMatchPeerAccountId": "0",
            "withoutMatchPeerOrderId": "0",
            "maxLeverage": "50",
            "takerFeeRate": "0.000500",
            "makerFeeRate": "0.000180",
            "liquidateFeeRate": "0.01",
            "marketLimitPrice": "0",
            "marketLimitValue": "0",
            "l2Nonce": "2054491946",
            "l2Value": "97.444500",
            "l2Size": "0.001",
            "l2LimitFee": "0.048723",
            "l2ExpireTime": "1737254555478",
            "l2Signature": {
                "r": "0x009af59c2963f1650449904fde059a83fed5beb4acdd67ffa22c551c4be977de",
                "s": "0x04940a395f2d1b39c0f2b969e47fec478fbfea9ce227bfedd07d407175dcac3e",
                "v": ""
            },
            "extraType": "",
            "extraDataJson": "",
            "status": "FILLED",
            "matchSequenceId": "35196430",
            "triggerTime": "0",
            "triggerPriceTime": "0",
            "triggerPriceValue": "0",
            "cancelReason": "UNKNOWN_ORDER_CANCEL_REASON",
            "cumFillSize": "0.001",
            "cumFillValue": "97.4445",
            "cumFillFee": "0.017540",
            "maxFillPrice": "97444.5",
            "minFillPrice": "97444.5",
            "cumLiquidateFee": "0",
            "cumRealizePnl": "-0.017540",
            "cumMatchSize": "0.001",
            "cumMatchValue": "97.4445",
            "cumMatchFee": "0.017540",
            "cumFailSize": "0",
            "cumFailValue": "0",
            "cumFailFee": "0",
            "cumApprovedSize": "0",
            "cumApprovedValue": "0",
            "cumApprovedFee": "0",
            "createdTime": "1734662555665",
            "updatedTime": "1734662617992"
        }
    ],
    "msg": null,
    "errorParam": null,
    "requestTime": "1734666077826",
    "responseTime": "1734666077846",
    "traceId": "5773d3492c5913ba4f8c93071f3e426e"
}
```

#### Response

| Status Code | Status Code Description                                 | Description      | Schema                               |
| ----------- | ------------------------------------------------------- | ---------------- | ------------------------------------ |
| 200         | [OK](https://tools.ietf.org/html/rfc7231#section-6.3.1) | default response | [Result](#schemaresultpagedataorder) |

#### Response Data Structure

### GET Get Historical Orders by Client Order IDs (Batch)

GET /api/v1/private/order/getHistoryOrderByClientOrderId

#### Request Parameters

| Name              | Location | Type   | Required | Description           |
| ----------------- | -------- | ------ | -------- | --------------------- |
| accountId         | query    | string | No       | Account ID            |
| clientOrderIdList | query    | string | No       | Order client order id |

> Response Example

> 200 Response

```json
{
    "code": "SUCCESS",
    "data": [
        {
            "id": "564815695875932430",
            "userId": "543429922866069763",
            "accountId": "543429922991899150",
            "coinId": "1000",
            "contractId": "10000001",
            "side": "BUY",
            "price": "97444.5",
            "size": "0.001",
            "clientOrderId": "553364074986685",
            "type": "LIMIT",
            "timeInForce": "GOOD_TIL_CANCEL",
            "reduceOnly": false,
            "triggerPrice": "0",
            "triggerPriceType": "UNKNOWN_PRICE_TYPE",
            "expireTime": "1736476955478",
            "sourceKey": "",
            "isPositionTpsl": false,
            "isLiquidate": false,
            "isDeleverage": false,
            "openTpslParentOrderId": "0",
            "isSetOpenTp": false,
            "openTp": {
                "side": "UNKNOWN_ORDER_SIDE",
                "price": "",
                "size": "",
                "clientOrderId": "",
                "triggerPrice": "",
                "triggerPriceType": "UNKNOWN_PRICE_TYPE",
                "expireTime": "0",
                "l2Nonce": "0",
                "l2Value": "",
                "l2Size": "",
                "l2LimitFee": "",
                "l2ExpireTime": "0",
                "l2Signature": {
                    "r": "",
                    "s": "",
                    "v": ""
                }
            },
            "isSetOpenSl": false,
            "openSl": {
                "side": "UNKNOWN_ORDER_SIDE",
                "price": "",
                "size": "",
                "clientOrderId": "",
                "triggerPrice": "",
                "triggerPriceType": "UNKNOWN_PRICE_TYPE",
                "expireTime": "0",
                "l2Nonce": "0",
                "l2Value": "",
                "l2Size": "",
                "l2LimitFee": "",
                "l2ExpireTime": "0",
                "l2Signature": {
                    "r": "",
                    "s": "",
                    "v": ""
                }
            },
            "isWithoutMatch": false,
            "withoutMatchFillSize": "0",
            "withoutMatchFillValue": "0",
            "withoutMatchPeerAccountId": "0",
            "withoutMatchPeerOrderId": "0",
            "maxLeverage": "50",
            "takerFeeRate": "0.000500",
            "makerFeeRate": "0.000180",
            "liquidateFeeRate": "0.01",
            "marketLimitPrice": "0",
            "marketLimitValue": "0",
            "l2Nonce": "2054491946",
            "l2Value": "97.444500",
            "l2Size": "0.001",
            "l2LimitFee": "0.048723",
            "l2ExpireTime": "1737254555478",
            "l2Signature": {
                "r": "0x009af59c2963f1650449904fde059a83fed5beb4acdd67ffa22c551c4be977de",
                "s": "0x04940a395f2d1b39c0f2b969e47fec478fbfea9ce227bfedd07d407175dcac3e",
                "v": ""
            },
            "extraType": "",
            "extraDataJson": "",
            "status": "FILLED",
            "matchSequenceId": "35196430",
            "triggerTime": "0",
            "triggerPriceTime": "0",
            "triggerPriceValue": "0",
            "cancelReason": "UNKNOWN_ORDER_CANCEL_REASON",
            "cumFillSize": "0.001",
            "cumFillValue": "97.4445",
            "cumFillFee": "0.017540",
            "maxFillPrice": "97444.5",
            "minFillPrice": "97444.5",
            "cumLiquidateFee": "0",
            "cumRealizePnl": "-0.017540",
            "cumMatchSize": "0.001",
            "cumMatchValue": "97.4445",
            "cumMatchFee": "0.017540",
            "cumFailSize": "0",
            "cumFailValue": "0",
            "cumFailFee": "0",
            "cumApprovedSize": "0",
            "cumApprovedValue": "0",
            "cumApprovedFee": "0",
            "createdTime": "1734662555665",
            "updatedTime": "1734662617992"
        }
    ],
    "msg": null,
    "errorParam": null,
    "requestTime": "1734666143318",
    "responseTime": "1734666143331",
    "traceId": "e19f71177e8cf0c7f34d45d85064c07c"
}
```

#### Response

| Status Code | Status Code Description                                 | Description      | Schema                               |
| ----------- | ------------------------------------------------------- | ---------------- | ------------------------------------ |
| 200         | [OK](https://tools.ietf.org/html/rfc7231#section-6.3.1) | default response | [Result](#schemaresultpagedataorder) |

#### Response Data Structure

### GET Get Active Orders (Paginated)

GET /api/v1/private/order/getActiveOrderPage

#### Request Parameters

| Name                            | Location | Type   | Required | Description                                                                                           |
| ------------------------------- | -------- | ------ | -------- | ----------------------------------------------------------------------------------------------------- |
| accountId                       | query    | string | No       | Account ID                                                                                            |
| size                            | query    | string | No       | Number of items to fetch. Must be greater than 0 and less than or equal to 200.                       |
| offsetData                      | query    | string | No       | Pagination offset. If not provided or empty, retrieves the first page.                                |
| filterCoinIdList                | query    | string | No       | Filters by collateral coin IDs. If empty, fetches active orders for all collateral coin IDs.          |
| filterContractIdList            | query    | string | No       | Filters by contract IDs. If empty, fetches active orders for all contracts.                           |
| filterTypeList                  | query    | string | No       | Filters by order types. If empty, fetches orders of all types.                                        |
| filterStatusList                | query    | string | No       | Filters by order status. If empty, fetches orders of all statuses.                                    |
| filterIsLiquidateList           | query    | string | No       | Filters by liquidate orders. If empty, fetches all orders                                             |
| filterIsDeleverageList          | query    | string | No       | Filters by deleverage orders. If empty, fetches all orders                                            |
| filterIsPositionTpslList        | query    | string | No       | Filters by position TP/SL orders. If empty, fetches all orders                                        |
| filterStartCreatedTimeInclusive | query    | string | No       | Filters orders created after or on this time (inclusive). If empty or 0, retrieves from the earliest. |
| filterEndCreatedTimeExclusive   | query    | string | No       | Filters orders created before this time (exclusive). If empty or 0, retrieves to the latest.          |

> Response Example

> 200 Response

```json
{
    "code": "SUCCESS",
    "data": {
        "dataList": [
            {
                "id": "564815695875932430",
                "userId": "543429922866069763",
                "accountId": "543429922991899150",
                "coinId": "1000",
                "contractId": "10000001",
                "side": "BUY",
                "price": "97444.5",
                "size": "0.001",
                "clientOrderId": "553364074986685",
                "type": "LIMIT",
                "timeInForce": "GOOD_TIL_CANCEL",
                "reduceOnly": false,
                "triggerPrice": "0",
                "triggerPriceType": "UNKNOWN_PRICE_TYPE",
                "expireTime": "1736476955478",
                "sourceKey": "",
                "isPositionTpsl": false,
                "isLiquidate": false,
                "isDeleverage": false,
                "openTpslParentOrderId": "0",
                "isSetOpenTp": false,
                "openTp": {
                    "side": "UNKNOWN_ORDER_SIDE",
                    "price": "",
                    "size": "",
                    "clientOrderId": "",
                    "triggerPrice": "",
                    "triggerPriceType": "UNKNOWN_PRICE_TYPE",
                    "expireTime": "0",
                    "l2Nonce": "0",
                    "l2Value": "",
                    "l2Size": "",
                    "l2LimitFee": "",
                    "l2ExpireTime": "0",
                    "l2Signature": {
                        "r": "",
                        "s": "",
                        "v": ""
                    }
                },
                "isSetOpenSl": false,
                "openSl": {
                    "side": "UNKNOWN_ORDER_SIDE",
                    "price": "",
                    "size": "",
                    "clientOrderId": "",
                    "triggerPrice": "",
                    "triggerPriceType": "UNKNOWN_PRICE_TYPE",
                    "expireTime": "0",
                    "l2Nonce": "0",
                    "l2Value": "",
                    "l2Size": "",
                    "l2LimitFee": "",
                    "l2ExpireTime": "0",
                    "l2Signature": {
                        "r": "",
                        "s": "",
                        "v": ""
                    }
                },
                "isWithoutMatch": false,
                "withoutMatchFillSize": "0",
                "withoutMatchFillValue": "0",
                "withoutMatchPeerAccountId": "0",
                "withoutMatchPeerOrderId": "0",
                "maxLeverage": "50",
                "takerFeeRate": "0.000500",
                "makerFeeRate": "0.000180",
                "liquidateFeeRate": "0.01",
                "marketLimitPrice": "0",
                "marketLimitValue": "0",
                "l2Nonce": "2054491946",
                "l2Value": "97.444500",
                "l2Size": "0.001",
                "l2LimitFee": "0.048723",
                "l2ExpireTime": "1737254555478",
                "l2Signature": {
                    "r": "0x009af59c2963f1650449904fde059a83fed5beb4acdd67ffa22c551c4be977de",
                    "s": "0x04940a395f2d1b39c0f2b969e47fec478fbfea9ce227bfedd07d407175dcac3e",
                    "v": ""
                },
                "extraType": "",
                "extraDataJson": "",
                "status": "OPEN",
                "matchSequenceId": "35195888",
                "triggerTime": "0",
                "triggerPriceTime": "0",
                "triggerPriceValue": "0",
                "cancelReason": "UNKNOWN_ORDER_CANCEL_REASON",
                "cumFillSize": "0",
                "cumFillValue": "0",
                "cumFillFee": "0",
                "maxFillPrice": "0",
                "minFillPrice": "0",
                "cumLiquidateFee": "0",
                "cumRealizePnl": "0",
                "cumMatchSize": "0",
                "cumMatchValue": "0",
                "cumMatchFee": "0",
                "cumFailSize": "0",
                "cumFailValue": "0",
                "cumFailFee": "0",
                "cumApprovedSize": "0",
                "cumApprovedValue": "0",
                "cumApprovedFee": "0",
                "createdTime": "1734662555665",
                "updatedTime": "1734662555672"
            }
        ],
        "nextPageOffsetData": ""
    },
    "msg": null,
    "errorParam": null,
    "requestTime": "1734662566830",
    "responseTime": "1734662566836",
    "traceId": "4a97b2e8da4933980f399581dd4a1264"
}
```

#### Response

| Status Code | Status Code Description                                 | Description      | Schema                               |
| ----------- | ------------------------------------------------------- | ---------------- | ------------------------------------ |
| 200         | [OK](https://tools.ietf.org/html/rfc7231#section-6.3.1) | default response | [Result](#schemaresultpagedataorder) |

## Data Models

#### schemaresultlistorderfilltransaction

| Name         | Type                                                   | Required | Constraints | Description                                            |
| ------------ | ------------------------------------------------------ | -------- | ----------- | ------------------------------------------------------ |
| code         | string                                                 | false    | none        | Status code. "SUCCESS" for success, otherwise failure. |
| data         | \[[OrderFillTransaction](#schemaorderfilltransaction)] | false    | none        | Successful response data.                              |
| errorParam   | object                                                 | false    | none        | Parameter information in error messages.               |
| requestTime  | string(timestamp)                                      | false    | none        | Server request receive time.                           |
| responseTime | string(timestamp)                                      | false    | none        | Server response return time.                           |
| traceId      | string                                                 | false    | none        | Call trace ID.                                         |

#### schemaorderfilltransaction

| Name                    | Type           | Required | Constraints | Description                                                                                                                                         |
| ----------------------- | -------------- | -------- | ----------- | --------------------------------------------------------------------------------------------------------------------------------------------------- |
| id                      | string(int64)  | false    | none        | Unique identifier.                                                                                                                                  |
| userId                  | string(int64)  | false    | none        | User ID.                                                                                                                                            |
| accountId               | string(int64)  | false    | none        | Account ID.                                                                                                                                         |
| coinId                  | string(int64)  | false    | none        | Collateral coin ID.                                                                                                                                 |
| contractId              | string(int64)  | false    | none        | Contract ID.                                                                                                                                        |
| orderId                 | string(int64)  | false    | none        | Order ID.                                                                                                                                           |
| orderSide               | string         | false    | none        | Buy/Sell direction.                                                                                                                                 |
| fillSize                | string         | false    | none        | Actual filled quantity.                                                                                                                             |
| fillValue               | string         | false    | none        | Actual filled value.                                                                                                                                |
| fillFee                 | string         | false    | none        | Actual filled fee.                                                                                                                                  |
| fillPrice               | string         | false    | none        | Fill price (not precise, for display purposes only).                                                                                                |
| liquidateFee            | string         | false    | none        | Liquidation fee if it's a liquidation (forced liquidation) transaction.                                                                             |
| realizePnl              | string         | false    | none        | Realized profit and loss (only available if the fill includes closing a position).                                                                  |
| direction               | string         | false    | none        | Actual fill direction.                                                                                                                              |
| isPositionTpsl          | boolean        | false    | none        | Whether this is a position take-profit/stop-loss order.                                                                                             |
| isLiquidate             | boolean        | false    | none        | Whether this is a liquidation (forced liquidation) fill.                                                                                            |
| isDeleverage            | boolean        | false    | none        | Whether this is an auto-deleverage fill.                                                                                                            |
| isWithoutMatch          | boolean        | false    | none        | Whether this order was filled directly without matching.                                                                                            |
| matchSequenceId         | string(int64)  | false    | none        | Sequence ID after submitting to the matching engine.                                                                                                |
| matchIndex              | integer(int32) | false    | none        | Index for multiple fills after submitting to the matching engine.                                                                                   |
| matchTime               | string(int64)  | false    | none        | Time after submitting to the matching engine.                                                                                                       |
| matchAccountId          | string(int64)  | false    | none        | Counterparty account ID.                                                                                                                            |
| matchOrderId            | string(int64)  | false    | none        | Counterparty order ID.                                                                                                                              |
| matchFillId             | string         | false    | none        | Fill ID returned by the matching engine.                                                                                                            |
| positionTransactionId   | string(int64)  | false    | none        | Associated position transaction ID.                                                                                                                 |
| collateralTransactionId | string(int64)  | false    | none        | Associated collateral transaction ID.                                                                                                               |
| extraType               | string         | false    | none        | Additional type for upper-layer business use.                                                                                                       |
| extraDataJson           | string         | false    | none        | Additional data in JSON format. Defaults to an empty string.                                                                                        |
| censorStatus            | string         | false    | none        | Current censorship status.                                                                                                                          |
| censorTxId              | string(int64)  | false    | none        | Censorship processing sequence ID. Exists when `censor_status` is `CENSOR_SUCCESS`/`CENSOR_FAILURE`/`L2_APPROVED`/`L2_REJECT`/`L2_REJECT_APPROVED`. |
| censorTime              | string(int64)  | false    | none        | Censorship processing time. Exists when `censor_status` is `CENSOR_SUCCESS`/`CENSOR_FAILURE`/`L2_APPROVED`/`L2_REJECT`/`L2_REJECT_APPROVED`.        |
| censorFailCode          | string         | false    | none        | Censorship failure error code. Exists when `censor_status` is `CENSOR_FAILURE`.                                                                     |
| censorFailReason        | string         | false    | none        | Censorship failure reason. Exists when `censor_status` is `CENSOR_FAILURE`.                                                                         |
| l2TxId                  | string(int64)  | false    | none        | L2 push transaction ID. Exists when `censor_status` is `CENSOR_SUCCESS`/`L2_APPROVED`/`L2_REJECT`/`L2_REJECT_APPROVED`.                             |
| l2RejectTime            | string(int64)  | false    | none        | L2 rejection time. Exists when `censor_status` is `L2_REJECT`/`L2_REJECT_APPROVED`.                                                                 |
| l2RejectCode            | string         | false    | none        | L2 rejection error code. Exists when `censor_status` is `L2_REJECT`/`L2_REJECT_APPROVED`.                                                           |
| l2RejectReason          | string         | false    | none        | L2 rejection reason. Exists when `censor_status` is `L2_REJECT`/`L2_REJECT_APPROVED`.                                                               |
| l2ApprovedTime          | string(int64)  | false    | none        | L2 batch verification time. Exists when `status` is `L2_APPROVED`/`L2_REJECT_APPROVED`.                                                             |
| createdTime             | string(int64)  | false    | none        | Creation time.                                                                                                                                      |
| updatedTime             | string(int64)  | false    | none        | Update time.                                                                                                                                        |

**Enum Values**

| Property     | Value                         |
| ------------ | ----------------------------- |
| orderSide    | UNKNOWN\_ORDER\_SIDE          |
| orderSide    | BUY                           |
| orderSide    | SELL                          |
| orderSide    | UNRECOGNIZED                  |
| direction    | UNKNOWN\_LIQUIDITY\_DIRECTION |
| direction    | MAKER                         |
| direction    | TAKER                         |
| direction    | UNRECOGNIZED                  |
| censorStatus | UNKNOWN\_TRANSACTION\_STATUS  |
| censorStatus | INIT                          |
| censorStatus | CENSOR\_SUCCESS               |
| censorStatus | CENSOR\_FAILURE               |
| censorStatus | L2\_APPROVED                  |
| censorStatus | L2\_REJECT                    |
| censorStatus | L2\_REJECT\_APPROVED          |
| censorStatus | UNRECOGNIZED                  |

#### schemaresultpagedataorderfilltransaction

| Name         | Type                                                                | Required | Constraints | Description                                            |
| ------------ | ------------------------------------------------------------------- | -------- | ----------- | ------------------------------------------------------ |
| code         | string                                                              | false    | none        | Status code. "SUCCESS" for success, otherwise failure. |
| data         | [PageDataOrderFillTransaction](#schemapagedataorderfilltransaction) | false    | none        | Generic paginated response.                            |
| errorParam   | object                                                              | false    | none        | Parameter information in error messages.               |
| requestTime  | string(timestamp)                                                   | false    | none        | Server request receive time.                           |
| responseTime | string(timestamp)                                                   | false    | none        | Server response return time.                           |
| traceId      | string                                                              | false    | none        | Call trace ID.                                         |

#### schemapagedataorderfilltransaction

| Name               | Type                                                   | Required | Constraints | Description                                                                  |
| ------------------ | ------------------------------------------------------ | -------- | ----------- | ---------------------------------------------------------------------------- |
| dataList           | \[[OrderFillTransaction](#schemaorderfilltransaction)] | false    | none        | Data list.                                                                   |
| nextPageOffsetData | string                                                 | false    | none        | Offset for retrieving the next page. Empty string if no more data available. |

#### schemaresultpagedataorder

| Name         | Type                                  | Required | Constraints | Description                                            |
| ------------ | ------------------------------------- | -------- | ----------- | ------------------------------------------------------ |
| code         | string                                | false    | none        | Status code. "SUCCESS" for success, otherwise failure. |
| data         | [PageDataOrder](#schemapagedataorder) | false    | none        | Generic paginated response.                            |
| errorParam   | object                                | false    | none        | Parameter information in error messages.               |
| requestTime  | string(timestamp)                     | false    | none        | Server request receive time.                           |
| responseTime | string(timestamp)                     | false    | none        | Server response return time.                           |
| traceId      | string                                | false    | none        | Call trace ID.                                         |

#### schemapagedataorder

| Name               | Type                     | Required | Constraints | Description                                                                  |
| ------------------ | ------------------------ | -------- | ----------- | ---------------------------------------------------------------------------- |
| dataList           | \[[Order](#schemaorder)] | false    | none        | Data list.                                                                   |
| nextPageOffsetData | string                   | false    | none        | Offset for retrieving the next page. Empty string if no more data available. |

#### schemaorder

| Name                      | Type                              | Required | Constraints | Description                                                                                                                                                                                                                                                  |
| ------------------------- | --------------------------------- | -------- | ----------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ |
| id                        | string(int64)                     | false    | none        | Order ID. Value greater than 0.                                                                                                                                                                                                                              |
| userId                    | string(int64)                     | false    | none        | User ID.                                                                                                                                                                                                                                                     |
| accountId                 | string(int64)                     | false    | none        | Account ID.                                                                                                                                                                                                                                                  |
| coinId                    | string(int64)                     | false    | none        | Collateral coin ID.                                                                                                                                                                                                                                          |
| contractId                | string(int64)                     | false    | none        | Contract ID.                                                                                                                                                                                                                                                 |
| side                      | string                            | false    | none        | Buy/Sell direction.                                                                                                                                                                                                                                          |
| price                     | string                            | false    | none        | Order price (worst acceptable price), actual type is decimal.                                                                                                                                                                                                |
| size                      | string                            | false    | none        | Order quantity, actual type is decimal.                                                                                                                                                                                                                      |
| clientOrderId             | string                            | false    | none        | Client-defined ID for idempotency checks.                                                                                                                                                                                                                    |
| type                      | string                            | false    | none        | Order type.                                                                                                                                                                                                                                                  |
| timeInForce               | string                            | false    | none        | Order execution policy. Relevant when `type` is `LIMIT`/`STOP_LIMIT`/`TAKE_PROFIT_LIMIT`.                                                                                                                                                                    |
| reduceOnly                | boolean                           | false    | none        | Whether this is a reduce-only order.                                                                                                                                                                                                                         |
| triggerPrice              | string                            | false    | none        | Trigger price. Relevant when `type` is `STOP_LIMIT`/`STOP_MARKET`/`TAKE_PROFIT_LIMIT`/`TAKE_PROFIT_MARKET`. If 0, the field is empty. Actual type is decimal.                                                                                                |
| triggerPriceType          | string                            | false    | none        | Price type: Last price, Mark price, etc. Relevant when `type` is `STOP_LIMIT`/`STOP_MARKET`/`TAKE_PROFIT_LIMIT`/`TAKE_PROFIT_MARKET`.                                                                                                                        |
| expireTime                | string(int64)                     | false    | none        | Expiration time.                                                                                                                                                                                                                                             |
| sourceKey                 | string                            | false    | none        | Source key, UUID.                                                                                                                                                                                                                                            |
| isPositionTpsl            | boolean                           | false    | none        | Whether this is a position take-profit/stop-loss order.                                                                                                                                                                                                      |
| isLiquidate               | boolean                           | false    | none        | Whether this is a liquidation (forced liquidation) order.                                                                                                                                                                                                    |
| isDeleverage              | boolean                           | false    | none        | Whether this is an auto-deleverage order.                                                                                                                                                                                                                    |
| openTpslParentOrderId     | string(int64)                     | false    | none        | Order ID of the opening order for a take-profit or stop-loss order.                                                                                                                                                                                          |
| isSetOpenTp               | boolean                           | false    | none        | Whether take-profit is set for opening order.                                                                                                                                                                                                                |
| openTp                    | [OpenTpSl](#schemaopentpsl)       | false    | none        | Take-profit/stop-loss parameters for opening order.                                                                                                                                                                                                          |
| isSetOpenSl               | boolean                           | false    | none        | Whether stop-loss is set for opening order.                                                                                                                                                                                                                  |
| openSl                    | [OpenTpSl](#schemaopentpsl)       | false    | none        | Take-profit/stop-loss parameters for opening order.                                                                                                                                                                                                          |
| isWithoutMatch            | boolean                           | false    | none        | Whether this order is directly filled without matching.                                                                                                                                                                                                      |
| withoutMatchFillSize      | string                            | false    | none        | Off-exchange fill quantity (valid only when `is_without_match` is true).                                                                                                                                                                                     |
| withoutMatchFillValue     | string                            | false    | none        | Off-exchange fill value (valid only when `is_without_match` is true).                                                                                                                                                                                        |
| withoutMatchPeerAccountId | string(int64)                     | false    | none        | Off-exchange counterparty account ID (valid only when `is_without_match` is true).                                                                                                                                                                           |
| withoutMatchPeerOrderId   | string(int64)                     | false    | none        | Off-exchange counterparty order ID (valid only when `is_without_match` is true).                                                                                                                                                                             |
| maxLeverage               | string                            | false    | none        | Leverage used when placing the order. Actual type is decimal.                                                                                                                                                                                                |
| takerFeeRate              | string                            | false    | none        | Taker fee rate when placing the order. Actual type is decimal.                                                                                                                                                                                               |
| makerFeeRate              | string                            | false    | none        | Maker fee rate when placing the order. Actual type is decimal.                                                                                                                                                                                               |
| liquidateFeeRate          | string                            | false    | none        | Liquidation fee rate when placing the order. Actual type is decimal.                                                                                                                                                                                         |
| marketLimitPrice          | string                            | false    | none        | Limit price for submitting market orders to the matching engine (only exists for market orders, 0 otherwise). Actual type is decimal.                                                                                                                        |
| marketLimitValue          | string                            | false    | none        | Limit value for submitting market orders to the matching engine (only exists for market orders, 0 otherwise). Actual type is decimal.                                                                                                                        |
| l2Nonce                   | string(int64)                     | false    | none        | L2 signature nonce. Takes the first 32 bits of sha256(`client_order_id`).                                                                                                                                                                                    |
| l2Value                   | string                            | false    | none        | L2 signature order value (the actual filled price must be equal to or better than `l2_value` / `l2_size`). May differ from `price` x `size`. Actual type is decimal.                                                                                         |
| l2Size                    | string                            | false    | none        | L2 signature order quantity. May differ from the `size` field. Actual type is decimal.                                                                                                                                                                       |
| l2LimitFee                | string                            | false    | none        | Maximum acceptable fee for L2 signature.                                                                                                                                                                                                                     |
| l2ExpireTime              | string(int64)                     | false    | none        | L2 signature expiration time in milliseconds. The hour value should be used when generating/verifying the signature, i.e. `l2_expire_time` / 3600000. Note that this value must be greater or equal to `expire_time` + 8 \* 24 \* 60 \* 60 \* 1000 (8 days). |
| l2Signature               | [L2Signature](#schemal2signature) | false    | none        | L2 signature information.                                                                                                                                                                                                                                    |
| extraType                 | string                            | false    | none        | Additional type for upper-layer business use.                                                                                                                                                                                                                |
| extraDataJson             | string                            | false    | none        | Additional data in JSON format. Defaults to an empty string.                                                                                                                                                                                                 |
| status                    | string                            | false    | none        | Order status.                                                                                                                                                                                                                                                |
| matchSequenceId           | string(int64)                     | false    | none        | Sequence ID handled by the matching engine.                                                                                                                                                                                                                  |
| triggerTime               | string(int64)                     | false    | none        | Conditional order trigger time.                                                                                                                                                                                                                              |
| triggerPriceTime          | string(int64)                     | false    | none        | Conditional order trigger price time.                                                                                                                                                                                                                        |
| triggerPriceValue         | string                            | false    | none        | Conditional order trigger price value.                                                                                                                                                                                                                       |
| cancelReason              | string                            | false    | none        | Order cancellation reason.                                                                                                                                                                                                                                   |
| cumFillSize               | string(decimal)                   | false    | none        | Cumulative filled quantity after censorship. Actual type is decimal.                                                                                                                                                                                         |
| cumFillValue              | string(decimal)                   | false    | none        | Cumulative filled value after censorship. Actual type is decimal.                                                                                                                                                                                            |
| cumFillFee                | string(decimal)                   | false    | none        | Cumulative filled fee after censorship. Actual type is decimal.                                                                                                                                                                                              |
| maxFillPrice              | string(decimal)                   | false    | none        | Maximum filled price for the current order after censorship. Actual type is decimal.                                                                                                                                                                         |
| minFillPrice              | string(decimal)                   | false    | none        | Minimum filled price for the current order after censorship. Actual type is decimal.                                                                                                                                                                         |
| cumLiquidateFee           | string(decimal)                   | false    | none        | Cumulative liquidation fee after censorship. Actual type is decimal.                                                                                                                                                                                         |
| cumRealizePnl             | string(decimal)                   | false    | none        | Cumulative realized PnL after censorship. Actual type is decimal.                                                                                                                                                                                            |
| cumMatchSize              | string(decimal)                   | false    | none        | Cumulative matched quantity. Actual type is decimal.                                                                                                                                                                                                         |
| cumMatchValue             | string(decimal)                   | false    | none        | Cumulative matched value. Actual type is decimal.                                                                                                                                                                                                            |
| cumMatchFee               | string(decimal)                   | false    | none        | Cumulative matched fee. Actual type is decimal.                                                                                                                                                                                                              |
| cumFailSize               | string                            | false    | none        | Cumulative failed/L2 rejected quantity. Actual type is decimal.                                                                                                                                                                                              |
| cumFailValue              | string                            | false    | none        | Cumulative failed/L2 rejected value. Actual type is decimal.                                                                                                                                                                                                 |
| cumFailFee                | string                            | false    | none        | Cumulative failed/L2 rejected fee. Actual type is decimal.                                                                                                                                                                                                   |
| cumApprovedSize           | string                            | false    | none        | Cumulative quantity approved by L2.                                                                                                                                                                                                                          |
| cumApprovedValue          | string                            | false    | none        | Cumulative value approved by L2.                                                                                                                                                                                                                             |
| cumApprovedFee            | string                            | false    | none        | Cumulative fee approved by L2.                                                                                                                                                                                                                               |
| createdTime               | string(int64)                     | false    | none        | Creation time.                                                                                                                                                                                                                                               |
| updatedTime               | string(int64)                     | false    | none        | Update time.                                                                                                                                                                                                                                                 |

**Enum Values**

| Property         | Value                          |
| ---------------- | ------------------------------ |
| side             | UNKNOWN\_ORDER\_SIDE           |
| side             | BUY                            |
| side             | SELL                           |
| side             | UNRECOGNIZED                   |
| type             | UNKNOWN\_ORDER\_TYPE           |
| type             | LIMIT                          |
| type             | MARKET                         |
| type             | STOP\_LIMIT                    |
| type             | STOP\_MARKET                   |
| type             | TAKE\_PROFIT\_LIMIT            |
| type             | TAKE\_PROFIT\_MARKET           |
| type             | UNRECOGNIZED                   |
| timeInForce      | UNKNOWN\_TIME\_IN\_FORCE       |
| timeInForce      | GOOD\_TIL\_CANCEL              |
| timeInForce      | FILL\_OR\_KILL                 |
| timeInForce      | IMMEDIATE\_OR\_CANCEL          |
| timeInForce      | POST\_ONLY                     |
| timeInForce      | UNRECOGNIZED                   |
| triggerPriceType | UNKNOWN\_PRICE\_TYPE           |
| triggerPriceType | ORACLE\_PRICE                  |
| triggerPriceType | INDEX\_PRICE                   |
| triggerPriceType | LAST\_PRICE                    |
| triggerPriceType | ASK1\_PRICE                    |
| triggerPriceType | BID1\_PRICE                    |
| triggerPriceType | OPEN\_INTEREST                 |
| triggerPriceType | UNRECOGNIZED                   |
| status           | UNKNOWN\_ORDER\_STATUS         |
| status           | PENDING                        |
| status           | OPEN                           |
| status           | FILLED                         |
| status           | CANCELING                      |
| status           | CANCELED                       |
| status           | UNTRIGGERED                    |
| status           | UNRECOGNIZED                   |
| cancelReason     | UNKNOWN\_ORDER\_CANCEL\_REASON |
| cancelReason     | USER\_CANCELED                 |
| cancelReason     | EXPIRE\_CANCELED               |
| cancelReason     | COULD\_NOT\_FILL               |
| cancelReason     | REDUCE\_ONLY\_CANCELED         |
| cancelReason     | LIQUIDATE\_CANCELED            |
| cancelReason     | MARGIN\_NOT\_ENOUGH            |
| cancelReason     | SYSTEM\_LIMIT\_EVICTED         |
| cancelReason     | ADMIN\_CANCELED                |
| cancelReason     | INTERNAL\_FAILED               |
| cancelReason     | UNRECOGNIZED                   |

#### schemal2signature

| Name | Type   | Required | Constraints | Description                  |
| ---- | ------ | -------- | ----------- | ---------------------------- |
| r    | string | false    | none        | Big integer as a hex string. |
| s    | string | false    | none        | Big integer as a hex string. |
| v    | string | false    | none        | Big integer as a hex string. |

#### schemaopentpsl

| Name             | Type                              | Required | Constraints | Description                                                                                                                                                           |
| ---------------- | --------------------------------- | -------- | ----------- | --------------------------------------------------------------------------------------------------------------------------------------------------------------------- |
| side             | string                            | false    | none        | Buy/sell direction. This field is required.                                                                                                                           |
| price            | string                            | false    | none        | Order price (worst acceptable price), actual type is decimal. Required, enter 0 for market orders.                                                                    |
| size             | string                            | false    | none        | Order quantity, actual type is decimal. Required.                                                                                                                     |
| clientOrderId    | string                            | false    | none        | Client-defined ID for signature and idempotency checks. This field is required.                                                                                       |
| triggerPrice     | string                            | false    | none        | Trigger price. This field is required.                                                                                                                                |
| triggerPriceType | string                            | false    | none        | Price type: Last price, Mark price, etc. This field is required.                                                                                                      |
| expireTime       | string(int64)                     | false    | none        | Expiration time.                                                                                                                                                      |
| l2Nonce          | string(int64)                     | false    | none        | L2 signature nonce. Takes the first 32 bits of sha256(`client_order_id`).                                                                                             |
| l2Value          | string                            | false    | none        | L2 signature order value (the actual filled price must be equal to or better than `l2_value` / `l2_price`). May differ from `price` x `size`. Actual type is decimal. |
| l2Size           | string                            | false    | none        | L2 signature order quantity. May differ from the `size` field. Actual type is decimal.                                                                                |
| l2LimitFee       | string                            | false    | none        | Maximum acceptable fee for L2 signature.                                                                                                                              |
| l2ExpireTime     | string(int64)                     | false    | none        | L2 signature expiration time in unix hour. Must be at least 10 hours after `expire_time`.                                                                             |
| l2Signature      | [L2Signature](#schemal2signature) | false    | none        | L2 signature information.                                                                                                                                             |

**Enum Values**

| Property         | Value                |
| ---------------- | -------------------- |
| side             | UNKNOWN\_ORDER\_SIDE |
| side             | BUY                  |
| side             | SELL                 |
| side             | UNRECOGNIZED         |
| triggerPriceType | UNKNOWN\_PRICE\_TYPE |
| triggerPriceType | ORACLE\_PRICE        |
| triggerPriceType | INDEX\_PRICE         |
| triggerPriceType | LAST\_PRICE          |
| triggerPriceType | ASK1\_PRICE          |
| triggerPriceType | BID1\_PRICE          |
| triggerPriceType | OPEN\_INTEREST       |
| triggerPriceType | UNRECOGNIZED         |

#### schemaresultlistorder

| Name         | Type                     | Required | Constraints | Description                                            |
| ------------ | ------------------------ | -------- | ----------- | ------------------------------------------------------ |
| code         | string                   | false    | none        | Status code. "SUCCESS" for success, otherwise failure. |
| data         | \[[Order](#schemaorder)] | false    | none        | Successful response data.                              |
| errorParam   | object                   | false    | none        | Parameter information in error messages.               |
| requestTime  | string(timestamp)        | false    | none        | Server request receive time.                           |
| responseTime | string(timestamp)        | false    | none        | Server response return time.                           |
| traceId      | string                   | false    | none        | Call trace ID.                                         |

#### schemacancelallorderparam

| Name                  | Type          | Required | Constraints | Description                                                                                                       |
| --------------------- | ------------- | -------- | ----------- | ----------------------------------------------------------------------------------------------------------------- |
| accountId             | string(int64) | false    | none        | Account ID.                                                                                                       |
| filterCoinIdList      | \[string]     | false    | none        | Filter to cancel active orders for specific collateral coin IDs. If empty, cancels all.                           |
| filterContractIdList  | \[string]     | false    | none        | Filter to cancel active orders for specific contract IDs. If empty, cancels all.                                  |
| filterOrderTypeList   | \[string]     | false    | none        | Filter to cancel orders of specific types. If empty, cancels all types.                                           |
| filterOrderStatusList | \[string]     | false    | none        | Filter to cancel orders of specific statuses. If empty, cancels all statuses.                                     |
| filterIsPositionTpsl  | \[boolean]    | false    | none        | Filter to cancel only corresponding position take-profit/stop-loss orders. If empty, cancels all contract orders. |

<### schemacancelorderbyclientorderid

| Name            | Type   | Required | Constraints | Description |
| --------------- | ------ | -------- | ----------- | ----------- |
| cancelResultMap | object | false    | none        | None        |

**Enum Values**

| Property                 | Value                          |
| ------------------------ | ------------------------------ |
| **additionalProperties** | UNKNOWN\_ORDER\_CANCEL\_RESULT |
| **additionalProperties** | SUCCESS                        |
| **additionalProperties** | SUCCESS\_ORDER\_CANCELING      |
| **additionalProperties** | SUCCESS\_ORDER\_CANCELED       |
| **additionalProperties** | FAILED\_ORDER\_NOT\_FOUND      |
| **additionalProperties** | FAILED\_ORDER\_FILLED          |
| **additionalProperties** | FAILED\_ORDER\_UNKNOWN\_STATUS |
| **additionalProperties** | UNRECOGNIZED                   |

#### schemaresultcancelorder

| Name         | Type                              | Required | Constraints | Description                                            |
| ------------ | --------------------------------- | -------- | ----------- | ------------------------------------------------------ |
| code         | string                            | false    | none        | Status code. "SUCCESS" for success, otherwise failure. |
| data         | [CancelOrder](#schemacancelorder) | false    | none        | Response for canceling orders.                         |
| errorParam   | object                            | false    | none        | Parameter information in error messages.               |
| requestTime  | string(timestamp)                 | false    | none        | Server request receive time.                           |
| responseTime | string(timestamp)                 | false    | none        | Server response return time.                           |
| traceId      | string                            | false    | none        | Call trace ID.                                         |

#### schemacancelorder

| Name            | Type   | Required | Constraints | Description |
| --------------- | ------ | -------- | ----------- | ----------- |
| cancelResultMap | object | false    | none        | None        |

**Enum Values**

| Property                 | Value                          |
| ------------------------ | ------------------------------ |
| **additionalProperties** | UNKNOWN\_ORDER\_CANCEL\_RESULT |
| **additionalProperties** | SUCCESS                        |
| **additionalProperties** | SUCCESS\_ORDER\_CANCELING      |
| **additionalProperties** | SUCCESS\_ORDER\_CANCELED       |
| **additionalProperties** | FAILED\_ORDER\_NOT\_FOUND      |
| **additionalProperties** | FAILED\_ORDER\_FILLED          |
| **additionalProperties** | FAILED\_ORDER\_UNKNOWN\_STATUS |
| **additionalProperties** | UNRECOGNIZED                   |

#### schemacancelorderbyidparam

| Name        | Type          | Required | Constraints | Description |
| ----------- | ------------- | -------- | ----------- | ----------- |
| accountId   | string(int64) | false    | none        | Account ID. |
| orderIdList | \[string]     | true     | none        | Order ID.   |

#### schemaresultcreateorder

| Name         | Type                              | Required | Constraints | Description                                            |
| ------------ | --------------------------------- | -------- | ----------- | ------------------------------------------------------ |
| code         | string                            | false    | none        | Status code. "SUCCESS" for success, otherwise failure. |
| data         | [CreateOrder](#schemacreateorder) | false    | none        | Response for creating orders.                          |
| errorParam   | object                            | false    | none        | Parameter information in error messages.               |
| requestTime  | string(timestamp)                 | false    | none        | Server request receive time.                           |
| responseTime | string(timestamp)                 | false    | none        | Server response return time.                           |
| traceId      | string                            | false    | none        | Call trace ID.                                         |

#### schemacreateorder

| Name    | Type          | Required | Constraints | Description |
| ------- | ------------- | -------- | ----------- | ----------- |
| orderId | string(int64) | false    | none        | Order ID.   |

#### schemacreateorderparam

| Name                  | Type                                  | Required | Constraints | Description                                                                                                                                                                                                                                                  |
| --------------------- | ------------------------------------- | -------- | ----------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ |
| accountId             | string(int64)                         | false    | none        | Account ID.                                                                                                                                                                                                                                                  |
| contractId            | string(int64)                         | false    | none        | Contract ID.                                                                                                                                                                                                                                                 |
| side                  | string                                | false    | none        | Buy/sell direction. This field is required.                                                                                                                                                                                                                  |
| size                  | string                                | false    | none        | Order quantity. Actual type is decimal. This field is required.                                                                                                                                                                                              |
| price                 | string                                | false    | none        | Order price (worst acceptable price). Actual type is decimal. This field is required, enter 0 for market orders.                                                                                                                                             |
| clientOrderId         | string                                | false    | none        | Client-defined ID for idempotency checks. This field is required.                                                                                                                                                                                            |
| type                  | string                                | false    | none        | Order type. This field is required.                                                                                                                                                                                                                          |
| timeInForce           | string                                | false    | none        | Order execution policy. Relevant when `type` is `LIMIT`/`STOP_LIMIT`/`TAKE_PROFIT_LIMIT`. This field is required, and should be `IMMEDIATE_OR_CANCEL` for market orders.                                                                                     |
| reduceOnly            | boolean                               | false    | none        | Whether this is a reduce-only order. This field is required.                                                                                                                                                                                                 |
| triggerPrice          | string                                | false    | none        | Trigger price. Relevant when `type` is `STOP_LIMIT`/`STOP_MARKET`/`TAKE_PROFIT_LIMIT`/`TAKE_PROFIT_MARKET`. If 0, the field is empty. Actual type is decimal. Required for conditional orders.                                                               |
| triggerPriceType      | string                                | false    | none        | Price type: Last price, Mark price, etc. Relevant when the order is conditional. Required for conditional orders.                                                                                                                                            |
| expireTime            | string(int64)                         | false    | none        | Expiration time.                                                                                                                                                                                                                                             |
| sourceKey             | string                                | false    | none        | Source key, UUID.                                                                                                                                                                                                                                            |
| isPositionTpsl        | boolean                               | false    | none        | Whether this is a position take-profit/stop-loss order. This field is required, defaults to false.                                                                                                                                                           |
| openTpslParentOrderId | string(int64)                         | false    | none        | Order ID of the opening order for a take-profit or stop-loss order.                                                                                                                                                                                          |
| isSetOpenTp           | boolean                               | false    | none        | Whether to set take-profit for the opening order. This field is required.                                                                                                                                                                                    |
| openTp                | [OpenTpSlParam](#schemaopentpslparam) | false    | none        | Take-profit/stop-loss parameters for the opening order.                                                                                                                                                                                                      |
| openSl                | [OpenTpSlParam](#schemaopentpslparam) | false    | none        | Take-profit/stop-loss parameters for the opening order.                                                                                                                                                                                                      |
| l2Nonce               | string(int64)                         | false    | none        | L2 signature nonce. Takes the first 32 bits of sha256(`client_order_id`).                                                                                                                                                                                    |
| l2Value               | string                                | false    | none        | L2 signature order value (the actual filled price must be equal to or better than `l2_value` / `l2_price`). May differ from `price` x `size`. Actual type is decimal.                                                                                        |
| l2Size                | string                                | false    | none        | L2 signature order quantity. May differ from the `size` field. Actual type is decimal.                                                                                                                                                                       |
| l2LimitFee            | string                                | false    | none        | Maximum acceptable fee for L2 signature.                                                                                                                                                                                                                     |
| l2ExpireTime          | string(int64)                         | false    | none        | L2 signature expiration time in milliseconds. The hour value should be used when generating/verifying the signature, i.e. `l2_expire_time` / 3600000. Note that this value must be greater or equal to `expire_time` + 8 \* 24 \* 60 \* 60 \* 1000 (8 days). |
| l2Signature           | string                                | false    | none        | L2 signature.                                                                                                                                                                                                                                                |
| extraType             | string                                | false    | none        | Additional type for upper-layer business use.                                                                                                                                                                                                                |
| extraDataJson         | string                                | false    | none        | Additional data in JSON format. Defaults to an empty string.                                                                                                                                                                                                 |

**Enum Values**

| Property         | Value                    |
| ---------------- | ------------------------ |
| side             | UNKNOWN\_ORDER\_SIDE     |
| side             | BUY                      |
| side             | SELL                     |
| side             | UNRECOGNIZED             |
| type             | UNKNOWN\_ORDER\_TYPE     |
| type             | LIMIT                    |
| type             | MARKET                   |
| type             | STOP\_LIMIT              |
| type             | STOP\_MARKET             |
| type             | TAKE\_PROFIT\_LIMIT      |
| type             | TAKE\_PROFIT\_MARKET     |
| type             | UNRECOGNIZED             |
| timeInForce      | UNKNOWN\_TIME\_IN\_FORCE |
| timeInForce      | GOOD\_TIL\_CANCEL        |
| timeInForce      | FILL\_OR\_KILL           |
| timeInForce      | IMMEDIATE\_OR\_CANCEL    |
| timeInForce      | POST\_ONLY               |
| timeInForce      | UNRECOGNIZED             |
| triggerPriceType | UNKNOWN\_PRICE\_TYPE     |
| triggerPriceType | ORACLE\_PRICE            |
| triggerPriceType | INDEX\_PRICE             |
| triggerPriceType | LAST\_PRICE              |
| triggerPriceType | ASK1\_PRICE              |
| triggerPriceType | BID1\_PRICE              |
| triggerPriceType | OPEN\_INTEREST           |
| triggerPriceType | UNRECOGNIZED             |

#### schemaopentpslparam

| Name             | Type          | Required | Constraints | Description                                                                                                                                                           |
| ---------------- | ------------- | -------- | ----------- | --------------------------------------------------------------------------------------------------------------------------------------------------------------------- |
| side             | string        | false    | none        | Buy/sell direction. This field is required.                                                                                                                           |
| price            | string        | false    | none        | Order price (worst acceptable price). Actual type is decimal. This field is required, enter 0 for market orders.                                                      |
| size             | string        | false    | none        | Order quantity. Actual type is decimal. This field is required.                                                                                                       |
| clientOrderId    | string        | false    | none        | Client-defined ID for signature and idempotency checks. This field is required.                                                                                       |
| triggerPrice     | string        | false    | none        | Trigger price. This field is required.                                                                                                                                |
| triggerPriceType | string        | false    | none        | Price type: Last price, Mark price, etc. This field is required.                                                                                                      |
| expireTime       | string(int64) | false    | none        | Expiration time.                                                                                                                                                      |
| l2Nonce          | string(int64) | false    | none        | L2 signature nonce. Takes the first 32 bits of sha256(`client_order_id`).                                                                                             |
| l2Value          | string        | false    | none        | L2 signature order value (the actual filled price must be equal to or better than `l2_value` / `l2_price`). May differ from `price` x `size`. Actual type is decimal. |
| l2Size           | string        | false    | none        | L2 signature order quantity. May differ from the `size` field. Actual type is decimal.                                                                                |
| l2LimitFee       | string        | false    | none        | Maximum acceptable fee for L2 signature.                                                                                                                              |
| l2ExpireTime     | string        | false    | none        | L2 signature expiration time in unix hour. Must be at least 10 hours after `expire_time`.                                                                             |
| l2Signature      | string        | false    | none        | L2 signature.                                                                                                                                                         |

**Enum Values**

| Property         | Value                |
| ---------------- | -------------------- |
| side             | UNKNOWN\_ORDER\_SIDE |
| side             | BUY                  |
| side             | SELL                 |
| side             | UNRECOGNIZED         |
| triggerPriceType | UNKNOWN\_PRICE\_TYPE |
| triggerPriceType | ORACLE\_PRICE        |
| triggerPriceType | INDEX\_PRICE         |
| triggerPriceType | LAST\_PRICE          |
| triggerPriceType | ASK1\_PRICE          |
| triggerPriceType | BID1\_PRICE          |
| triggerPriceType | OPEN\_INTEREST       |
| triggerPriceType | UNRECOGNIZED         |

#### schemaresultgetmaxcreateordersize

| Name         | Type                                                  | Required | Constraints | Description                                            |
| ------------ | ----------------------------------------------------- | -------- | ----------- | ------------------------------------------------------ |
| code         | string                                                | false    | none        | Status code. "SUCCESS" for success, otherwise failure. |
| data         | [GetMaxCreateOrderSize](#schemagetmaxcreateordersize) | false    | none        | Response for getting the maximum order size.           |
| errorParam   | object                                                | false    | none        | Parameter information in error messages.               |
| requestTime  | string(timestamp)                                     | false    | none        | Server request receive time.                           |
| responseTime | string(timestamp)                                     | false    | none        | Server response return time.                           |
| traceId      | string                                                | false    | none        | Call trace ID.                                         |

#### schemagetmaxcreateordersize

| Name        | Type            | Required | Constraints | Description        |
| ----------- | --------------- | -------- | ----------- | ------------------ |
| maxBuySize  | string(decimal) | false    | none        | Maximum buy size.  |
| maxSellSize | string(decimal) | false    | none        | Maximum sell size. |
| ask1Price   | string(decimal) | false    | none        | Best ask price.    |
| bid1Price   | string(decimal) | false    | none        | Best bid price.    |

#### schemagetmaxcreateordersizeparam

| Name       | Type          | Required | Constraints | Description  |
| ---------- | ------------- | -------- | ----------- | ------------ |
| accountId  | string(int64) | false    | none        | Account ID.  |
| contractId | string(int64) | false    | none        | Contract ID. |
| price      | string        | false    | none        | Order price. |

# Transfer API

## TransferPrivateApi

### POST Create Transfer Out Order

POST /api/v1/private/transfer/createTransferOut

> Body Request Parameters

```json
{
    "accountId": "543429922991899150",
    "coinId": "1000",
    "amount": "1.000000",
    "receiverAccountId": "551109015904453258",
    "receiverL2Key": "0x03eec711e360695bb44b1170057a25340303c1f16893a8def7450e44294405a8",
    "clientTransferId": "3877531064364166",
    "transferReason": "USER_TRANSFER",
    "l2Nonce": "2280110103",
    "l2ExpireTime": "1735873200000",
    "l2Signature": "0141279ec45ce1ea37b11cfa4683cfab8443bcbf8da3f066cef3e437862573f9034efe12eee1be3fc715c7b511f69e3ba32ec67a9ac89538fbb73de46fefc5e5",
    "extraType": "",
    "extraDataJson": ""
}
```

#### Request Parameters

| Name | Location | Type                                                    | Required | Description |
| ---- | -------- | ------------------------------------------------------- | -------- | ----------- |
| body | body     | [CreateTransferOutParam](#schemacreatetransferoutparam) | No       | none        |

> Response Example

> 200 Response

```json
{
    "code": "SUCCESS",
    "data": {
        "transferOutId": "564819036077031694"
    },
    "msg": null,
    "errorParam": null,
    "requestTime": "1734663351997",
    "responseTime": "1734663352035",
    "traceId": "33728335fc663ba9230e61d4f4b924df"
}
```

#### Response Codes

| Status Code | Description                                             | Notes            | Schema                                   |
| ----------- | ------------------------------------------------------- | ---------------- | ---------------------------------------- |
| 200         | [OK](https://tools.ietf.org/html/rfc7231#section-6.3.1) | default response | [Result](#schemaresultcreatetransferout) |

### GET Get Transfer Out Orders by ID

GET /api/v1/private/transfer/getTransferOutById

#### Request Parameters

| Name              | Location | Type   | Required | Description     |
| ----------------- | -------- | ------ | -------- | --------------- |
| accountId         | query    | string | No       | Account ID      |
| transferOutIdList | query    | string | No       | Transfer out ID |

> Response Example

> 200 Response

```json
{
    "code": "SUCCESS",
    "data": [
        {
            "id": "564819036077031694",
            "userId": "543429922866069763",
            "accountId": "543429922991899150",
            "coinId": "1000",
            "amount": "1.000000",
            "receiverAccountId": "551109015904453258",
            "receiverL2Key": "0x3eec711e360695bb44b1170057a25340303c1f16893a8def7450e44294405a8",
            "clientTransferId": "3877531064364166",
            "isConditionTransfer": false,
            "conditionFactRegistryAddress": "",
            "conditionFactErc20Address": "",
            "conditionFactAmount": "",
            "conditionFact": "",
            "transferReason": "USER_TRANSFER",
            "l2Nonce": "2280110103",
            "l2ExpireTime": "1735873200000",
            "l2Signature": {
                "r": "0x0141279ec45ce1ea37b11cfa4683cfab8443bcbf8da3f066cef3e437862573f9",
                "s": "0x034efe12eee1be3fc715c7b511f69e3ba32ec67a9ac89538fbb73de46fefc5e5",
                "v": ""
            },
            "extraType": "",
            "extraDataJson": "",
            "status": "SUCCESS_CENSOR_SUCCESS",
            "receiverTransferInId": "564819036173500554",
            "collateralTransactionId": "564819036223832334",
            "censorTxId": "893179",
            "censorTime": "1734663352062",
            "censorFailCode": "",
            "censorFailReason": "",
            "l2TxId": "1084730",
            "l2RejectTime": "0",
            "l2RejectCode": "",
            "l2RejectReason": "",
            "l2ApprovedTime": "0",
            "createdTime": "1734663352031",
            "updatedTime": "1734663352066"
        }
    ],
    "msg": null,
    "errorParam": null,
    "requestTime": "1734663607244",
    "responseTime": "1734663607271",
    "traceId": "39366eb1153313ba1415851a08762265"
}
```

#### Response Codes

| Status Code | Description                                             | Notes            | Schema                                 |
| ----------- | ------------------------------------------------------- | ---------------- | -------------------------------------- |
| 200         | [OK](https://tools.ietf.org/html/rfc7231#section-6.3.1) | default response | [Result](#schemaresultlisttransferout) |

### GET Get Available Withdrawal Amount

GET /api/v1/private/transfer/getTransferOutAvailableAmount

#### Request Parameters

| Name      | Location | Type   | Required | Description |
| --------- | -------- | ------ | -------- | ----------- |
| accountId | query    | string | No       | Account ID  |
| coinId    | query    | string | No       | Coin ID     |

> Response Example

> 200 Response

```json
{
    "code": "SUCCESS",
    "data": {
        "availableAmount": "10.964371"
    },
    "msg": null,
    "errorParam": null,
    "requestTime": "1734663286946",
    "responseTime": "1734663286951",
    "traceId": "957f0396a8e6059b027b99d232f8b113"
}
```

#### Response Codes

| Status Code | Description                                             | Notes            | Schema                                               |
| ----------- | ------------------------------------------------------- | ---------------- | ---------------------------------------------------- |
| 200         | [OK](https://tools.ietf.org/html/rfc7231#section-6.3.1) | default response | [Result](#schemaresultgettransferoutavailableamount) |

### GET Get Transfer In Orders by ID

GET /api/v1/private/transfer/getTransferInById

#### Request Parameters

| Name             | Location | Type   | Required | Description    |
| ---------------- | -------- | ------ | -------- | -------------- |
| accountId        | query    | string | No       | Account ID     |
| transferInIdList | query    | string | No       | Transfer In ID |

> Response Example

> 200 Response

```json
{
    "code": "SUCCESS",
    "data": [
        {
            "id": "564819036173500554",
            "userId": "543429922866069763",
            "accountId": "551109015904453258",
            "coinId": "1000",
            "amount": "1.000000",
            "senderAccountId": "543429922991899150",
            "senderL2Key": "0x5580341e2c99823a0a35356b8ac84e372dd38fd1f4b50f607b931ec8038c211",
            "senderTransferOutId": "564819036077031694",
            "clientTransferId": "543429922991899150:3877531064364166",
            "isConditionTransfer": false,
            "conditionFactRegistryAddress": "",
            "conditionFactErc20Address": "",
            "conditionFactAmount": "",
            "conditionFact": "",
            "transferReason": "USER_TRANSFER",
            "extraType": "",
            "extraDataJson": "",
            "status": "SUCCESS_CENSOR_SUCCESS",
            "collateralTransactionId": "564819036219637898",
            "censorTxId": "893179",
            "censorTime": "1734663352062",
            "censorFailCode": "",
            "censorFailReason": "",
            "l2TxId": "1084730",
            "l2RejectTime": "0",
            "l2RejectCode": "",
            "l2RejectReason": "",
            "l2ApprovedTime": "0",
            "createdTime": "1734663352054",
            "updatedTime": "1734663352065"
        }
    ],
    "msg": null,
    "errorParam": null,
    "requestTime": "1734663945432",
    "responseTime": "1734663945452",
    "traceId": "eb4cfe0a20f14b62b4fdbbd046255171"
}
```

#### Response Codes

| Status Code | Description                                             | Notes            | Schema                                |
| ----------- | ------------------------------------------------------- | ---------------- | ------------------------------------- |
| 200         | [OK](https://tools.ietf.org/html/rfc7231#section-6.3.1) | default response | [Result](#schemaresultlisttransferin) |

## Data Models

#### schemaresultpagedatatransferin

| Name         | Type                                            | Required | Constraints | Description                                                        |
| ------------ | ----------------------------------------------- | -------- | ----------- | ------------------------------------------------------------------ |
| code         | string                                          | false    | none        | Status code. "SUCCESS" for success, other values indicate failure. |
| data         | [PageDataTransferIn](#schemapagedatatransferin) | false    | none        | Generic paginated response data                                    |
| errorParam   | object                                          | false    | none        | Parameter information in error messages                            |
| requestTime  | string(timestamp)                               | false    | none        | Server request receiving timestamp                                 |
| responseTime | string(timestamp)                               | false    | none        | Server response returning timestamp                                |
| traceId      | string                                          | false    | none        | Call trace ID                                                      |

#### schemapagedatatransferin

| Name               | Type                               | Required | Constraints | Description                                                                               |
| ------------------ | ---------------------------------- | -------- | ----------- | ----------------------------------------------------------------------------------------- |
| dataList           | \[[TransferIn](#schematransferin)] | false    | none        | Data list                                                                                 |
| nextPageOffsetData | string                             | false    | none        | Offset to retrieve the next page. If no next page data, the value will be an empty string |

#### schematransferin

| Name                         | Type          | Required | Constraints | Description                                                                                                                         |
| ---------------------------- | ------------- | -------- | ----------- | ----------------------------------------------------------------------------------------------------------------------------------- |
| id                           | string(int64) | false    | none        | Transfer In order ID                                                                                                                |
| userId                       | string(int64) | false    | none        | User ID                                                                                                                             |
| accountId                    | string(int64) | false    | none        | Account ID                                                                                                                          |
| coinId                       | string(int64) | false    | none        | Coin ID                                                                                                                             |
| amount                       | string        | false    | none        | Transfer amount                                                                                                                     |
| senderAccountId              | string(int64) | false    | none        | Sender Account ID                                                                                                                   |
| senderL2Key                  | string        | false    | none        | Sender account L2 key. bigint for hex str                                                                                           |
| senderTransferOutId          | string(int64) | false    | none        | Sender transfer out order ID                                                                                                        |
| clientTransferId             | string        | false    | none        | Client defined ID. Used for idempotent checks and signature generation nonce                                                        |
| isConditionTransfer          | boolean       | false    | none        | Whether it is a conditional transfer                                                                                                |
| conditionFactRegistryAddress | string        | false    | none        | Address of condition fact registry contract. Required when is\_condition\_transfer=true                                             |
| conditionFactErc20Address    | string        | false    | none        | ERC20 address used to generate the condition fact. Required when is\_conditional\_transfer=true                                     |
| conditionFactAmount          | string        | false    | none        | Amount used to generate condition fact. Required when is\_conditional\_transfer=true.                                               |
| conditionFact                | string        | false    | none        | The conditional transfer fact. Required when is\_condition\_transfer=true                                                           |
| transferReason               | string        | false    | none        | Transfer reason                                                                                                                     |
| extraType                    | string        | false    | none        | Additional type. Used by upper layer business                                                                                       |
| extraDataJson                | string        | false    | none        | Additional data in JSON format. Defaults to empty string                                                                            |
| status                       | string        | false    | none        | Transfer status                                                                                                                     |
| collateralTransactionId      | string(int64) | false    | none        | ID of related collateral detail. Exists when status=SUCCESS\_XXX/FAILED\_L2\_REJECT/FAILED\_L2\_REJECT\_APPROVED                    |
| censorTxId                   | string(int64) | false    | none        | Censor processing sequence. Exists when status=SUCCESS\_XXX/FAILED\_CENSOR\_FAILURE/FAILED\_L2\_REJECT/FAILED\_L2\_REJECT\_APPROVED |
| censorTime                   | string(int64) | false    | none        | Censor processing time. Exists when status=SUCCESS\_XXX/FAILED\_CENSOR\_FAILURE/FAILED\_L2\_REJECT/FAILED\_L2\_REJECT\_APPROVED     |
| censorFailCode               | string        | false    | none        | Censor failure error code. Exists when status=FAILED\_CENSOR\_FAILURE                                                               |
| censorFailReason             | string        | false    | none        | Censor failure reason. Exists when status=FAILED\_CENSOR\_FAILURE                                                                   |
| l2TxId                       | string(int64) | false    | none        | L2 push transaction ID. Exists when censor\_status=CENSOR\_SUCCESS/L2\_APPROVED/L2\_REJECT/L2\_REJECT\_APPROVED                     |
| l2RejectTime                 | string(int64) | false    | none        | L2 rejection time. Exists when censor\_status=L2\_REJECT/L2\_REJECT\_APPROVED                                                       |
| l2RejectCode                 | string        | false    | none        | L2 rejection error code. Exists when censor\_status=L2\_REJECT/L2\_REJECT\_APPROVED                                                 |
| l2RejectReason               | string        | false    | none        | L2 rejection reason. Exists when censor\_status=L2\_REJECT/L2\_REJECT\_APPROVED                                                     |
| l2ApprovedTime               | string(int64) | false    | none        | L2 batch verification time. Exists when status=L2\_APPROVED/L2\_REJECT\_APPROVED                                                    |
| createdTime                  | string(int64) | false    | none        | Creation time                                                                                                                       |
| updatedTime                  | string(int64) | false    | none        | Update time                                                                                                                         |

**Enum Values**

| Property       | Value                        |
| -------------- | ---------------------------- |
| transferReason | UNKNOWN\_TRANSFER\_REASON    |
| transferReason | USER\_TRANSFER               |
| transferReason | FAST\_WITHDRAW               |
| transferReason | CROSS\_DEPOSIT               |
| transferReason | CROSS\_WITHDRAW              |
| transferReason | UNRECOGNIZED                 |
| status         | UNKNOWN\_TRANSFER\_STATUS    |
| status         | PENDING\_CHECKING            |
| status         | PENDING\_CENSORING           |
| status         | SUCCESS\_CENSOR\_SUCCESS     |
| status         | SUCCESS\_L2\_APPROVED        |
| status         | FAILED\_CHECK\_INVALID       |
| status         | FAILED\_CENSOR\_FAILURE      |
| status         | FAILED\_L2\_REJECT           |
| status         | FAILED\_L2\_REJECT\_APPROVED |
| status         | UNRECOGNIZED                 |

#### schemaresultpagedatatransferout

| Name         | Type                                              | Required | Constraints | Description                                                        |
| ------------ | ------------------------------------------------- | -------- | ----------- | ------------------------------------------------------------------ |
| code         | string                                            | false    | none        | Status code. "SUCCESS" for success, other values indicate failure. |
| data         | [PageDataTransferOut](#schemapagedatatransferout) | false    | none        | Generic paginated response data                                    |
| errorParam   | object                                            | false    | none        | Parameter information in error messages                            |
| requestTime  | string(timestamp)                                 | false    | none        | Server request receiving timestamp                                 |
| responseTime | string(timestamp)                                 | false    | none        | Server response returning timestamp                                |
| traceId      | string                                            | false    | none        | Call trace ID                                                      |

#### schemapagedatatransferout

| Name               | Type                                 | Required | Constraints | Description                                                                               |
| ------------------ | ------------------------------------ | -------- | ----------- | ----------------------------------------------------------------------------------------- |
| dataList           | \[[TransferOut](#schematransferout)] | false    | none        | Data list                                                                                 |
| nextPageOffsetData | string                               | false    | none        | Offset to retrieve the next page. If no next page data, the value will be an empty string |

#### schematransferout

| Name                         | Type                              | Required | Constraints | Description                                                                                                                                |
| ---------------------------- | --------------------------------- | -------- | ----------- | ------------------------------------------------------------------------------------------------------------------------------------------ |
| id                           | string(int64)                     | false    | none        | Transfer out order ID                                                                                                                      |
| userId                       | string(int64)                     | false    | none        | User ID                                                                                                                                    |
| accountId                    | string(int64)                     | false    | none        | Account ID                                                                                                                                 |
| coinId                       | string(int64)                     | false    | none        | Coin ID                                                                                                                                    |
| amount                       | string                            | false    | none        | Transfer amount                                                                                                                            |
| receiverAccountId            | string(int64)                     | false    | none        | Receiver Account ID                                                                                                                        |
| receiverL2Key                | string                            | false    | none        | Receiver account L2 key. bigint for hex str                                                                                                |
| clientTransferId             | string                            | false    | none        | Client defined ID. Used for idempotent checks and signature generation nonce                                                               |
| isConditionTransfer          | boolean                           | false    | none        | Whether it is a conditional transfer                                                                                                       |
| conditionFactRegistryAddress | string                            | false    | none        | Address of condition fact registry contract. Required when is\_conditional\_transfer=true                                                  |
| conditionFactErc20Address    | string                            | false    | none        | ERC20 address used to generate the condition fact. Required when is\_conditional\_transfer=true                                            |
| conditionFactAmount          | string                            | false    | none        | Amount used to generate condition fact. Required when is\_conditional\_transfer=true.                                                      |
| conditionFact                | string                            | false    | none        | The conditional transfer fact. Required when is\_conditional\_transfer=true                                                                |
| transferReason               | string                            | false    | none        | Transfer reason                                                                                                                            |
| l2Nonce                      | string(int64)                     | false    | none        | L2 signature nonce. Take the first 32 bits of sha256(client\_transfer\_id)                                                                 |
| l2ExpireTime                 | string(int64)                     | false    | none        | L2 signature expiration time in milliseconds. When generating/verifying the signature, the hour should be used: l2\_expire\_time / 3600000 |
| l2Signature                  | [L2Signature](#schemal2signature) | false    | none        | L2 signature information                                                                                                                   |
| extraType                    | string                            | false    | none        | Additional type. Used by upper layer business                                                                                              |
| extraDataJson                | string                            | false    | none        | Additional data in JSON format. Defaults to empty string                                                                                   |
| status                       | string                            | false    | none        | Transfer status                                                                                                                            |
| receiverTransferInId         | string(int64)                     | false    | none        | ID of receiver transfer in order.                                                                                                          |
| collateralTransactionId      | string(int64)                     | false    | none        | ID of related collateral detail. Exists when status=SUCCESS\_XXX/FAILED\_L2\_REJECT/FAILED\_L2\_REJECT\_APPROVED                           |
| censorTxId                   | string(int64)                     | false    | none        | Censor processing sequence. Exists when status=SUCCESS\_XXX/FAILED\_CENSOR\_FAILURE/FAILED\_L2\_REJECT/FAILED\_L2\_REJECT\_APPROVED        |
| censorTime                   | string(int64)                     | false    | none        | Censor processing time. Exists when status=SUCCESS\_XXX/FAILED\_CENSOR\_FAILURE/FAILED\_L2\_REJECT/FAILED\_L2\_REJECT\_APPROVED            |
| censorFailCode               | string                            | false    | none        | Censor failure error code. Exists when status=FAILED\_CENSOR\_FAILURE                                                                      |
| censorFailReason             | string                            | false    | none        | Censor failure reason. Exists when status=FAILED\_CENSOR\_FAILURE                                                                          |
| l2TxId                       | string(int64)                     | false    | none        | L2 push transaction ID. Exists when censor\_status=CENSOR\_SUCCESS/L2\_APPROVED/L2\_REJECT/L2\_REJECT\_APPROVED                            |
| l2RejectTime                 | string(int64)                     | false    | none        | L2 rejection time. Exists when censor\_status=L2\_REJECT/L2\_REJECT\_APPROVED                                                              |
| l2RejectCode                 | string                            | false    | none        | L2 rejection error code. Exists when censor\_status=L2\_REJECT/L2\_REJECT\_APPROVED                                                        |
| l2RejectReason               | string                            | false    | none        | L2 rejection reason. Exists when censor\_status=L2\_REJECT/L2\_REJECT\_APPROVED                                                            |
| l2ApprovedTime               | string(int64)                     | false    | none        | L2 batch verification time. Exists when status=L2\_APPROVED/L2\_REJECT\_APPROVED                                                           |
| createdTime                  | string(int64)                     | false    | none        | Creation time                                                                                                                              |
| updatedTime                  | string(int64)                     | false    | none        | Update time                                                                                                                                |

**Enum Values**

| Property       | Value                        |
| -------------- | ---------------------------- |
| transferReason | UNKNOWN\_TRANSFER\_REASON    |
| transferReason | USER\_TRANSFER               |
| transferReason | FAST\_WITHDRAW               |
| transferReason | CROSS\_DEPOSIT               |
| transferReason | CROSS\_WITHDRAW              |
| transferReason | UNRECOGNIZED                 |
| status         | UNKNOWN\_TRANSFER\_STATUS    |
| status         | PENDING\_CHECKING            |
| status         | PENDING\_CENSORING           |
| status         | SUCCESS\_CENSOR\_SUCCESS     |
| status         | SUCCESS\_L2\_APPROVED        |
| status         | FAILED\_CHECK\_INVALID       |
| status         | FAILED\_CENSOR\_FAILURE      |
| status         | FAILED\_L2\_REJECT           |
| status         | FAILED\_L2\_REJECT\_APPROVED |
| status         | UNRECOGNIZED                 |

#### schemal2signature

| Name | Type   | Required | Constraints | Description        |
| ---- | ------ | -------- | ----------- | ------------------ |
| r    | string | false    | none        | bigint for hex str |
| s    | string | false    | none        | bigint for hex str |
| v    | string | false    | none        | bigint for hex str |

#### schemaresultlisttransferin

| Name         | Type                               | Required | Constraints | Description                                                        |
| ------------ | ---------------------------------- | -------- | ----------- | ------------------------------------------------------------------ |
| code         | string                             | false    | none        | Status code. "SUCCESS" for success, other values indicate failure. |
| data         | \[[TransferIn](#schematransferin)] | false    | none        | Correct response data                                              |
| errorParam   | object                             | false    | none        | Parameter information in error messages                            |
| requestTime  | string(timestamp)                  | false    | none        | Server request receiving timestamp                                 |
| responseTime | string(timestamp)                  | false    | none        | Server response returning timestamp                                |
| traceId      | string                             | false    | none        | Call trace ID                                                      |

#### schemaresultgettransferoutavailableamount

| Name         | Type                                                            | Required | Constraints | Description                                                        |
| ------------ | --------------------------------------------------------------- | -------- | ----------- | ------------------------------------------------------------------ |
| code         | string                                                          | false    | none        | Status code. "SUCCESS" for success, other values indicate failure. |
| data         | [GetTransferAvailableAmount](#schemagettransferavailableamount) | false    | none        | Get Transfer Available Amount - Response                           |
| errorParam   | object                                                          | false    | none        | Parameter information in error messages                            |
| requestTime  | string(timestamp)                                               | false    | none        | Server request receiving timestamp                                 |
| responseTime | string(timestamp)                                               | false    | none        | Server response returning timestamp                                |
| traceId      | string                                                          | false    | none        | Call trace ID                                                      |

#### schemagettransferavailableamount

| Name            | Type            | Required | Constraints | Description      |
| --------------- | --------------- | -------- | ----------- | ---------------- |
| availableAmount | string(decimal) | false    | none        | Available amount |

#### schemaresultlisttransferout

| Name         | Type                                 | Required | Constraints | Description                                                        |
| ------------ | ------------------------------------ | -------- | ----------- | ------------------------------------------------------------------ |
| code         | string                               | false    | none        | Status code. "SUCCESS" for success, other values indicate failure. |
| data         | \[[TransferOut](#schematransferout)] | false    | none        | Correct response data                                              |
| errorParam   | object                               | false    | none        | Parameter information in error messages                            |
| requestTime  | string(timestamp)                    | false    | none        | Server request receiving timestamp                                 |
| responseTime | string(timestamp)                    | false    | none        | Server response returning timestamp                                |
| traceId      | string                               | false    | none        | Call trace ID                                                      |

#### schemaresultcreatetransferout

| Name         | Type                                          | Required | Constraints | Description                                                        |
| ------------ | --------------------------------------------- | -------- | ----------- | ------------------------------------------------------------------ |
| code         | string                                        | false    | none        | Status code. "SUCCESS" for success, other values indicate failure. |
| data         | [CreateTransferOut](#schemacreatetransferout) | false    | none        | Create Transfer Out Order - Response                               |
| errorParam   | object                                        | false    | none        | Parameter information in error messages                            |
| requestTime  | string(timestamp)                             | false    | none        | Server request receiving timestamp                                 |
| responseTime | string(timestamp)                             | false    | none        | Server response returning timestamp                                |
| traceId      | string                                        | false    | none        | Call trace ID                                                      |

#### schemacreatetransferout

| Name          | Type          | Required | Constraints | Description           |
| ------------- | ------------- | -------- | ----------- | --------------------- |
| transferOutId | string(int64) | false    | none        | Transfer out order ID |

#### schemacreatetransferoutparam

| Name              | Type          | Required | Constraints | Description                                                                                                                                |
| ----------------- | ------------- | -------- | ----------- | ------------------------------------------------------------------------------------------------------------------------------------------ |
| accountId         | string(int64) | false    | none        | Account ID                                                                                                                                 |
| coinId            | string(int64) | false    | none        | Asset ID                                                                                                                                   |
| amount            | string        | false    | none        | Transfer amount                                                                                                                            |
| receiverAccountId | string        | false    | none        | Receiver account ID                                                                                                                        |
| receiverL2Key     | string        | false    | none        | Receiver account L2 key. bigint for hex str                                                                                                |
| clientTransferId  | string        | false    | none        | Client defined ID. Used for idempotent checks and signature generation nonce                                                               |
| transferReason    | string        | false    | none        | Transfer reason                                                                                                                            |
| l2Nonce           | string(int64) | false    | none        | L2 signature nonce. Take the first 32 bits of sha256(client\_withdraw\_id)                                                                 |
| l2ExpireTime      | string(int64) | false    | none        | L2 signature expiration time in milliseconds. When generating/verifying the signature, the hour should be used: l2\_expire\_time / 3600000 |
| l2Signature       | string        | false    | none        | L2 signature                                                                                                                               |
| extraType         | string        | false    | none        | Additional type. Used by upper layer business                                                                                              |
| extraDataJson     | string        | false    | none        | Additional data in JSON format. Defaults to empty string                                                                                   |

**Enum Values**

| Property       | Value                     |
| -------------- | ------------------------- |
| transferReason | UNKNOWN\_TRANSFER\_REASON |
| transferReason | USER\_TRANSFER            |
| transferReason | FAST\_WITHDRAW            |
| transferReason | CROSS\_DEPOSIT            |
| transferReason | CROSS\_WITHDRAW           |
| transferReason | UNRECOGNIZED              |

# Asset API

## AssetsPrivateApi

### POST Create Normal Withdrawal Order

POST /api/v1/private/assets/createNormalWithdraw

> Body Request Parameters

```json
{
    "accountId": "551109015904453258",
    "coinId": "1000",
    "amount": "1.000000",
    "ethAddress": "0x1fB51aa234287C3CA1F957eA9AD0E148Bb814b7A",
    "clientWithdrawId": "745410645654877",
    "expireTime": "1735887600000",
    "l2Signature": "007bf80407c6a7bb14f5ca3b848a5d908627993f23b073c902e359a6fa4a6a92040cea4c98e25e35ad1d8cc4e18758c463c45bf451299ce55aa49abbdb916d03"
}
```

#### Request Parameters

| Name | Location | Type                                                          | Required | Description |
| ---- | -------- | ------------------------------------------------------------- | -------- | ----------- |
| body | body     | [CreateNormalWithdrawParam](#schemacreatenormalwithdrawparam) | No       | None        |

> Response Example

> 200 Response

```json
{
    "code": "SUCCESS",
    "data": {
        "withdrawId": "1054639949233524736"
    },
    "msg": null,
    "errorParam": null,
    "requestTime": "1734674558154",
    "responseTime": "1734674558171",
    "traceId": "9e3bfe2b9e1ef82583cb96f36e43e537"
}
```

#### Response

| Status Code | Status Code Description                                 | Description      | Data Model                      |
| ----------- | ------------------------------------------------------- | ---------------- | ------------------------------- |
| 200         | [OK](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Default response | [Result](#createnormalwithdraw) |

### POST Create Cross-Chain Withdrawal Order

POST /api/v1/private/assets/createCrossWithdraw

> Body Request Parameters

```json
{
  "accountId": "string",
  "coinId": "string",
  "amount": "string",
  "ethAddress": "string",
  "erc20Address": "string",
  "lpAccountId": "string",
  "clientCrossWithdrawId": "string",
  "expireTime": "string",
  "l2Signature": "string",
  "fee": "string",
  "chainId": "string",
  "mpcAddress": "string",
  "mpcSignature": "string",
  "mpcSignTime": "string"
}
```

#### Request Parameters

| Name | Location | Type                                                        | Required | Description |
| ---- | -------- | ----------------------------------------------------------- | -------- | ----------- |
| body | body     | [CreateCrossWithdrawParam](#schemacreatecrosswithdrawparam) | No       | None        |

> Response Example

> 200 Response

```json
{
  "code": "string",
  "msg": "string",
  "requestTime": "string",
  "responseTime": "string"
}
```

#### Response

| Status Code | Status Code Description                                 | Description      | Data Model                                 |
| ----------- | ------------------------------------------------------- | ---------------- | ------------------------------------------ |
| 200         | [OK](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Default response | [Result](#schemaresultcreatecrosswithdraw) |

### GET User's Normal Withdrawable Amount

GET /api/v1/private/assets/getNormalWithdrawableAmount

#### Request Parameters

| Name    | Location | Type   | Required | Description  |
| ------- | -------- | ------ | -------- | ------------ |
| address | query    | string | Yes      | User address |

> Response Example

> 200 Response

```json
{
    "code": "SUCCESS",
    "data": {
        "amount": "0"
    },
    "msg": null,
    "errorParam": null,
    "requestTime": "1734674463329",
    "responseTime": "1734674464181",
    "traceId": "6e8a3b8326f00683cf73f701f3edcfb6"
}
```

#### Response

| Status Code | Status Code Description                                 | Description      | Data Model                                         |
| ----------- | ------------------------------------------------------- | ---------------- | -------------------------------------------------- |
| 200         | [OK](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Default response | [Result](#schemaresultgetnormalwithdrawableamount) |

### GET Get Normal Withdrawal Orders by Account ID and Withdrawal ID

GET /api/v1/private/assets/getNormalWithdrawById

#### Request Parameters

| Name                 | Location | Type   | Required | Description   |
| -------------------- | -------- | ------ | -------- | ------------- |
| accountId            | query    | string | No       | Account ID    |
| normalWithdrawIdList | query    | string | No       | Withdrawal ID |

> Response Example

> 200 Response

```json
{
  "code": "string",
  "msg": "string",
  "requestTime": "string",
  "responseTime": "string"
}
```

#### Response

| Status Code | Status Code Description                                 | Description      | Data Model                                |
| ----------- | ------------------------------------------------------- | ---------------- | ----------------------------------------- |
| 200         | [OK](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Default response | [Result](#schemaresultlistnormalwithdraw) |

### GET Get Information Required for Cross-Chain Withdrawal Signature

GET /api/v1/private/assets/getCrossWithdrawSignInfo

#### Request Parameters

| Name    | Location | Type   | Required | Description       |
| ------- | -------- | ------ | -------- | ----------------- |
| chainId | query    | string | No       | Chain ID          |
| amount  | query    | string | No       | Withdrawal amount |

> Response Example

> 200 Response

```json
{
    "code": "SUCCESS",
    "data": {
        "lpAccountId": "542076087396467085",
        "crossWithdrawL2Key": "0x03bf794b4433e0a8b353da361bb7284c670914d27ed04698e6abed0bf1198028",
        "crossWithdrawMaxAmount": "48799.686154",
        "fee": "2"
    },
    "msg": null,
    "errorParam": null,
    "requestTime": "1734674557578",
    "responseTime": "1734674557997",
    "traceId": "3aa3d5c94c7bc9aef69f590e188058ef"
}
```

#### Response

| Status Code | Status Code Description                                 | Description      | Data Model                                      |
| ----------- | ------------------------------------------------------- | ---------------- | ----------------------------------------------- |
| 200         | [OK](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Default response | [Result](#schemaresultgetcrosswithdrawsigninfo) |

### GET Get Cross-Chain Withdrawal Orders by Account ID and Withdrawal ID

GET /api/v1/private/assets/getCrossWithdrawById

#### Request Parameters

| Name                | Location | Type   | Required | Description   |
| ------------------- | -------- | ------ | -------- | ------------- |
| accountId           | query    | string | No       | Account ID    |
| crossWithdrawIdList | query    | string | No       | Withdrawal ID |

> Response Example

> 200 Response

```json
{
  "code": "string",
  "msg": "string",
  "requestTime": "string",
  "responseTime": "string"
}
```

#### Response

| Status Code | Status Code Description                                 | Description      | Data Model                               |
| ----------- | ------------------------------------------------------- | ---------------- | ---------------------------------------- |
| 200         | [OK](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Default response | [Result](#schemaresultlistcrosswithdraw) |

### GET Aggregate Query of All Deposit and Withdrawal Order Records

GET /api/v1/private/assets/getAllOrdersPage

#### Request Parameters

| Name       | Location | Type   | Required | Description                                                    |
| ---------- | -------- | ------ | -------- | -------------------------------------------------------------- |
| accountId  | query    | string | No       | Account ID                                                     |
| startTime  | query    | string | No       | Start time, Unix time in seconds                               |
| endTime    | query    | string | No       | End time, Unix time in seconds                                 |
| chainId    | query    | string | No       | Chain ID                                                       |
| typeList   | query    | string | No       | Order type list                                                |
| size       | query    | string | No       | Number of items per page. Must be > 0 and <= 100.              |
| offsetData | query    | string | No       | Offset for page retrieval. If not provided, returns first page |

> Response Example

> 200 Response

```json
{
    "code": "SUCCESS",
    "data": {
        "dataList": [
            {
                "orderId": "1054639949233524736",
                "time": "1734674558",
                "type": "ORDER_TYPE_NORMAL_WITHDRAW",
                "status": 3,
                "amount": "1",
                "fee": "",
                "txId": "",
                "chain": "Sepolia - Testnet",
                "address": "0x1fB51aa234287C3CA1F957eA9AD0E148Bb814b7A",
                "coin": "USDT",
                "chainId": "11155111",
                "transferSenderAccountId": "0",
                "transferReceiverAccountId": "0"
            }
        ],
        "nextPageOffsetData": "b3fa59aa-8b42-49a3-9729-d7e89d8d9c8d"
    },
    "msg": null,
    "errorParam": null,
    "requestTime": "1734675194541",
    "responseTime": "1734675194553",
    "traceId": "d6f1fe9e521e306a49f30158257a07a2"
}
```

#### Response

| Status Code | Status Code Description                                 | Description      | Data Model                               |
| ----------- | ------------------------------------------------------- | ---------------- | ---------------------------------------- |
| 200         | [OK](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Default response | [Result](#schemaresultpagedatassetorder) |

## Data Models

#### schemaresultpagedatassetorder

| Name         | Type                                            | Required | Constraints | Description                 | Notes                                                    |
| ------------ | ----------------------------------------------- | -------- | ----------- | --------------------------- | -------------------------------------------------------- |
| code         | string                                          | false    | none        | Status code                 | Returns "SUCCESS" for success, otherwise it's a failure. |
| data         | [PageDataAssetOrder](#schemapagedataassetorder) | false    | none        | Generic paginated return    |                                                          |
| errorParam   | object                                          | false    | none        | Error parameter information |                                                          |
| requestTime  | string(timestamp)                               | false    | none        | Server request receive time |                                                          |
| responseTime | string(timestamp)                               | false    | none        | Server response return time |                                                          |
| traceId      | string                                          | false    | none        | Call trace ID               |                                                          |

#### schemapagedataassetorder

| Name               | Type                               | Required | Constraints | Description          | Notes                                         |
| ------------------ | ---------------------------------- | -------- | ----------- | -------------------- | --------------------------------------------- |
| dataList           | \[[AssetOrder](#schemaassetorder)] | false    | none        | List of data         |                                               |
| nextPageOffsetData | string                             | false    | none        | Offset for next page | Empty string when there are no further pages. |

#### schemaassetorder

| Name                      | Type           | Required | Constraints | Description             | Notes |
| ------------------------- | -------------- | -------- | ----------- | ----------------------- | ----- |
| orderId                   | string(int64)  | false    | none        | Order ID                |       |
| time                      | string(int64)  | false    | none        | Order creation time     |       |
| type                      | string         | false    | none        | Order type              |       |
| status                    | integer(int32) | false    | none        | Order status            |       |
| amount                    | string         | false    | none        | Order amount            |       |
| fee                       | string         | false    | none        | Order fee               |       |
| txId                      | string         | false    | none        | Chain tx\_id            |       |
| chain                     | string         | false    | none        | Chain                   |       |
| address                   | string         | false    | none        | Address                 |       |
| coin                      | string         | false    | none        | Coin                    |       |
| chainId                   | string         | false    | none        | Chain ID                |       |
| transferSenderAccountId   | string         | false    | none        | Transfer out account ID |       |
| transferReceiverAccountId | string         | false    | none        | Transfer in account ID  |       |

**Enum Values**

| Property | Value                         |
| -------- | ----------------------------- |
| type     | UNKNOWN\_ORDER\_TYPE          |
| type     | ORDER\_TYPE\_NORMAL\_DEPOSIT  |
| type     | ORDER\_TYPE\_CROSS\_DEPOSIT   |
| type     | ORDER\_TYPE\_NORMAL\_WITHDRAW |
| type     | ORDER\_TYPE\_CROSS\_WITHDRAW  |
| type     | ORDER\_TYPE\_FAST\_WITHDRAW   |
| type     | ORDER\_TYPE\_TRANSFER\_IN     |
| type     | ORDER\_TYPE\_TRANSFER\_OUT    |
| type     | UNRECOGNIZED                  |

#### schemaresultlistcrosswithdraw

| Name         | Type                                     | Required | Constraints | Description                 | Notes |
| ------------ | ---------------------------------------- | -------- | ----------- | --------------------------- | ----- |
| code         | string                                   | false    | none        | Status code                 |       |
| data         | \[[CrossWithdraw](#schemacrosswithdraw)] | false    | none        | Correct response data       |       |
| requestTime  | string(timestamp)                        | false    | none        | Server request receive time |       |
| responseTime | string(timestamp)                        | false    | none        | Server response return time |       |
| traceId      | string                                   | false    | none        | Call trace ID               |       |

#### schemacrosswithdraw

| Name                    | Type                              | Required | Constraints | Description                                                                                                                         | Notes |
| ----------------------- | --------------------------------- | -------- | ----------- | ----------------------------------------------------------------------------------------------------------------------------------- | ----- |
| id                      | string(int64)                     | false    | none        | Withdrawal order ID                                                                                                                 |       |
| userId                  | string(int64)                     | false    | none        | User ID                                                                                                                             |       |
| accountId               | string(int64)                     | false    | none        | Account ID                                                                                                                          |       |
| coinId                  | string(int64)                     | false    | none        | Collateral coin ID                                                                                                                  |       |
| amount                  | string                            | false    | none        | Withdrawal amount                                                                                                                   |       |
| ethAddress              | string                            | false    | none        | ETH address for withdrawal, may differ from the account's ETH address.                                                              |       |
| erc20Address            | string                            | false    | none        | L1 ERC20 contract address for the withdrawn asset                                                                                   |       |
| lpAccountId             | string(int64)                     | false    | none        | LP account ID for L2 receiving user transfers                                                                                       |       |
| lpAccountL2Key          | string(int64)                     | false    | none        | L2 key for the receiving account                                                                                                    |       |
| clientCrossWithdrawId   | string                            | false    | none        | Client-defined ID for idempotent checks                                                                                             |       |
| fee                     | string                            | false    | none        | Transaction fee                                                                                                                     |       |
| chainId                 | string                            | false    | none        | Chain ID for withdrawal                                                                                                             |       |
| l2Nonce                 | string(int64)                     | false    | none        | L2 signature nonce. First 32 bits of sha256(client\_withdraw\_id)                                                                   |       |
| l2ExpireTime            | string(int64)                     | false    | none        | L2 signature expiration time. Unix time in hours, must be at least 24 hours after order creation.                                   |       |
| l2Signature             | [L2Signature](#schemal2signature) | false    | none        | L2 signature information                                                                                                            |       |
| extraType               | string                            | false    | none        | Additional type for upper-layer business usage                                                                                      |       |
| extraDataJson           | string                            | false    | none        | Extra data, JSON format, defaults to empty string.                                                                                  |       |
| status                  | string                            | false    | none        | Normal withdrawal order status                                                                                                      |       |
| collateralTransactionId | string                            | false    | none        | Related collateral detail ID. Exists when status=SUCCESS\_XXX/FAILED\_L2\_REJECTED                                                  |       |
| censorTxId              | string(int64)                     | false    | none        | Censorship processing sequence number. Exists when status=SUCCESS\_XXX/FAILED\_CENSOR\_FAILURE/FAILED\_L2\_REJECTED                 |       |
| censorTime              | string(int64)                     | false    | none        | Censorship processing time. Exists when status=SUCCESS\_XXX/FAILED\_CENSOR\_FAILURE/FAILED\_L2\_REJECTED                            |       |
| censorFailCode          | string                            | false    | none        | Censorship failure error code. Exists when status=FAILED\_CENSOR\_FAILURE                                                           |       |
| censorFailReason        | string                            | false    | none        | Censorship failure reason. Exists when status=FAILED\_CENSOR\_FAILURE                                                               |       |
| l2TxId                  | string(int64)                     | false    | none        | L2 transaction ID. Exists when status=SUCCESS\_XXX/FAILED\_CENSOR\_FAILURE/FAILED\_L2\_REJECTED                                     |       |
| l2HandleTime            | string(int64)                     | false    | none        | L2 processing time. Exists when status=SUCCESS\_L1\_CONFIRMING/SUCCESS\_L1\_WITHDRAWING/SUCCESS\_L1\_COMPLETED/FAILED\_L2\_REJECTED |       |
| l2RejectCode            | string                            | false    | none        | L2 reject error code. Exists when status=FAILED\_L2\_REJECTED                                                                       |       |
| l2RejectReason          | string                            | false    | none        | L2 reject reason. Exists when status=FAILED\_L2\_REJECTED                                                                           |       |
| l1ConfirmedTx           | [L1Tx](#schemal1tx)               | false    | none        | L1 transaction information                                                                                                          |       |
| l1ConfirmedTime         | string(int64)                     | false    | none        | L1 transaction confirmation time                                                                                                    |       |
| l1CompletedTx           | [L1Tx](#schemal1tx)               | false    | none        | L1 transaction information                                                                                                          |       |
| l1CompletedEthAddress   | string                            | false    | none        | L1 withdrawal completion ETH address                                                                                                |       |
| l1CompletedTime         | string(int64)                     | false    | none        | L1 withdrawal completion time                                                                                                       |       |
| l1RejectedReasonCode    | string                            | false    | none        | L1 rejection reason code                                                                                                            |       |
| l1RejectedReasonMsg     | string                            | false    | none        | L1 rejection reason message                                                                                                         |       |
| riskSignature           | [L2Signature](#schemal2signature) | false    | none        | L2 signature information                                                                                                            |       |
| transferOutId           | string(int64)                     | false    | none        | Transfer out order ID                                                                                                               |       |
| createdTime             | string(int64)                     | false    | none        | Creation time                                                                                                                       |       |
| updatedTime             | string(int64)                     | false    | none        | Update time                                                                                                                         |       |

**Enum Values**

| Property | Value                                                        |
| -------- | ------------------------------------------------------------ |
| status   | CROSS\_WITHDRAW\_UNKNOWN                                     |
| status   | CROSS\_WITHDRAW\_PENDING\_RISK\_CHECKING                     |
| status   | CROSS\_WITHDRAW\_PENDING\_CHECKING                           |
| status   | CROSS\_WITHDRAW\_SUCCESS\_SUBMIT\_CENSOR                     |
| status   | CROSS\_WITHDRAW\_PENDING\_CENSOR\_CHECKING\_ACCOUNT          |
| status   | CROSS\_WITHDRAW\_PENDING\_CENSORING                          |
| status   | CROSS\_WITHDRAW\_PENDING\_L2\_APPROVING                      |
| status   | CROSS\_WITHDRAW\_PENDING\_L1\_SUBMIT                         |
| status   | CROSS\_WITHDRAW\_PENDING\_L1\_CONFIRMING                     |
| status   | CROSS\_WITHDRAW\_SUCCESS                                     |
| status   | CROSS\_WITHDRAW\_FAILED\_RISK\_CHECK\_FAILURE                |
| status   | CROSS\_WITHDRAW\_FAILED\_TRANSFER\_REJECTED                  |
| status   | CROSS\_WITHDRAW\_FAILED\_CENSOR\_CHECKING\_ACCOUNT\_REJECTED |
| status   | CROSS\_WITHDRAW\_FAILED\_CENSORING                           |
| status   | CROSS\_WITHDRAW\_FAILED\_L2\_REJECTED                        |
| status   | CROSS\_WITHDRAW\_FAILED\_L1\_SUBMIT\_REJECTED                |
| status   | CROSS\_WITHDRAW\_FAILED\_L1\_REJECTED                        |
| status   | CROSS\_WITHDRAW\_FAILED\_USER\_BALANCE\_NOT\_ENOUGH          |
| status   | UNRECOGNIZED                                                 |

#### schemal1tx

| Name        | Type           | Required | Constraints | Description                         | Notes |
| ----------- | -------------- | -------- | ----------- | ----------------------------------- | ----- |
| hash        | string         | false    | none        | Transaction hash                    |       |
| index       | integer(int32) | false    | none        | Index of the tx hash                |       |
| time        | string(int64)  | false    | none        | Tx chain timestamp, in milliseconds |       |
| blockHeight | string(int64)  | false    | none        | Block height of the tx              |       |

#### schemal2signature

| Name | Type   | Required | Constraints | Description           | Notes |
| ---- | ------ | -------- | ----------- | --------------------- | ----- |
| r    | string | false    | none        | Bigint for hex string |       |
| s    | string | false    | none        | Bigint for hex string |       |
| v    | string | false    | none        | Bigint for hex string |       |

#### schemaresultgetcrosswithdrawsigninfo

| Name         | Type                                                        | Required | Constraints | Description                                                              | Notes                                                    |
| ------------ | ----------------------------------------------------------- | -------- | ----------- | ------------------------------------------------------------------------ | -------------------------------------------------------- |
| code         | string                                                      | false    | none        | Status code                                                              | Returns "SUCCESS" for success, otherwise it's a failure. |
| data         | [GetCrossWithdrawSignInfo](#schemagetcrosswithdrawsigninfo) | false    | none        | Get information required for cross-chain withdrawal signature - Response |                                                          |
| errorParam   | object                                                      | false    | none        | Error parameter information                                              |                                                          |
| requestTime  | string(timestamp)                                           | false    | none        | Server request receive time                                              |                                                          |
| responseTime | string(timestamp)                                           | false    | none        | Server response return time                                              |                                                          |
| traceId      | string                                                      | false    | none        | Call trace ID                                                            |                                                          |

#### schemagetcrosswithdrawsigninfo

| Name                   | Type   | Required | Constraints | Description                                    | Notes |
| ---------------------- | ------ | -------- | ----------- | ---------------------------------------------- | ----- |
| lpAccountId            | string | false    | none        | LP account ID for L2 receiving user transfers  |       |
| crossWithdrawL2Key     | string | false    | none        | L2 key for fast withdrawal account             |       |
| crossWithdrawMaxAmount | string | false    | none        | Maximum amount for fast cross-chain withdrawal |       |
| fee                    | string | false    | none        | Transaction fee                                |       |

#### schemaresultlistnormalwithdraw

| Name         | Type                                       | Required | Constraints | Description                 | Notes                                                    |
| ------------ | ------------------------------------------ | -------- | ----------- | --------------------------- | -------------------------------------------------------- |
| code         | string                                     | false    | none        | Status code                 | Returns "SUCCESS" for success, otherwise it's a failure. |
| data         | \[[NormalWithdraw](#schemanormalwithdraw)] | false    | none        | Correct response data       |                                                          |
| errorParam   | object                                     | false    | none        | Error parameter information |                                                          |
| requestTime  | string(timestamp)                          | false    | none        | Server request receive time |                                                          |
| responseTime | string(timestamp)                          | false    | none        | Server response return time |                                                          |
| traceId      | string                                     | false    | none        | Call trace ID               |                                                          |

#### schemanormalwithdraw

| Name             | Type                              | Required | Constraints | Description                                                                                       | Notes |
| ---------------- | --------------------------------- | -------- | ----------- | ------------------------------------------------------------------------------------------------- | ----- |
| id               | string(int64)                     | false    | none        | Withdrawal order ID                                                                               |       |
| userId           | string(int64)                     | false    | none        | User ID                                                                                           |       |
| accountId        | string(int64)                     | false    | none        | Account ID                                                                                        |       |
| coinId           | string(int64)                     | false    | none        | Collateral coin ID                                                                                |       |
| amount           | string                            | false    | none        | Withdrawal amount                                                                                 |       |
| ethAddress       | string                            | false    | none        | ETH address for withdrawal, may differ from the account's ETH address.                            |       |
| clientWithdrawId | string                            | false    | none        | Client-defined ID for idempotent checks                                                           |       |
| l2Nonce          | string(int64)                     | false    | none        | L2 signature nonce. First 32 bits of sha256(client\_withdraw\_id)                                 |       |
| l2ExpireTime     | string(int64)                     | false    | none        | L2 signature expiration time. Unix time in hours, must be at least 24 hours after order creation. |       |
| l2Signature      | [L2Signature](#schemal2signature) | false    | none        | L2 signature information                                                                          |       |
| status           | string                            | false    | none        | Normal withdrawal order status                                                                    |       |
| tradeWithdrawId  | string(int64)                     | false    | none        | Corresponding trading service withdraw order ID                                                   |       |
| riskSignature    | [L2Signature](#schemal2signature) | false    | none        | L2 signature information                                                                          |       |
| l1ConfirmedTx    | [L1Tx](#schemal1tx)               | false    | none        | L1 transaction information                                                                        |       |
| l1ConfirmedTime  | string(int64)                     | false    | none        | L1 transaction confirmation time                                                                  |       |
| l1CompletedTime  | string(int64)                     | false    | none        | L1 withdrawal completion time                                                                     |       |
| createdTime      | string(int64)                     | false    | none        | Creation time                                                                                     |       |
| updatedTime      | string(int64)                     | false    | none        | Update time                                                                                       |       |

**Enum Values**

| Property | Value                                          |
| -------- | ---------------------------------------------- |
| status   | NORMAL\_WITHDRAW\_UNKNOWN                      |
| status   | NORMAL\_WITHDRAW\_PENDING\_RISK\_CHECKING      |
| status   | NORMAL\_WITHDRAW\_PENDING\_TRADE\_PROCESSING   |
| status   | NORMAL\_WITHDRAW\_PENDING\_L2\_APPROVING       |
| status   | NORMAL\_WITHDRAW\_PENDING\_L1\_CONFIRMING      |
| status   | NORMAL\_WITHDRAW\_PENDING\_L1\_WITHDRAWING     |
| status   | NORMAL\_WITHDRAW\_SUCCESS\_L1\_COMPLETED       |
| status   | NORMAL\_WITHDRAW\_FAILED\_RISK\_CHECK\_FAILURE |
| status   | NORMAL\_WITHDRAW\_FAILED\_CENSOR\_FAILURE      |
| status   | NORMAL\_WITHDRAW\_FAILED\_L2\_REJECTED         |
| status   | UNRECOGNIZED                                   |

#### schemaresultgetnormalwithdrawableamount

\| Name | Type Okay, continuing the translated documentation:

| Name         | Type                                                              | Required | Constraints | Description                                                       | Notes                                                    |
| ------------ | ----------------------------------------------------------------- | -------- | ----------- | ----------------------------------------------------------------- | -------------------------------------------------------- |
| code         | string                                                            | false    | none        | Status code                                                       | Returns "SUCCESS" for success, otherwise it's a failure. |
| data         | [GetNormalWithdrawableAmount](#schemagetnormalwithdrawableamount) | false    | none        | Query normal withdrawable claim amount by user address - Response |                                                          |
| errorParam   | object                                                            | false    | none        | Error parameter information                                       |                                                          |
| requestTime  | string(timestamp)                                                 | false    | none        | Server request receive time                                       |                                                          |
| responseTime | string(timestamp)                                                 | false    | none        | Server response return time                                       |                                                          |
| traceId      | string                                                            | false    | none        | Call trace ID                                                     |                                                          |

#### schemagetnormalwithdrawableamount

| Name   | Type   | Required | Constraints | Description         | Notes |
| ------ | ------ | -------- | ----------- | ------------------- | ----- |
| amount | string | false    | none        | Withdrawable amount |       |

#### schemaresultcreatecrosswithdraw

| Name         | Type                                              | Required | Constraints | Description                                    | Notes                                                    |
| ------------ | ------------------------------------------------- | -------- | ----------- | ---------------------------------------------- | -------------------------------------------------------- |
| code         | string                                            | false    | none        | Status code                                    | Returns "SUCCESS" for success, otherwise it's a failure. |
| data         | [CreateCrossWithdraw](#schemacreatecrosswithdraw) | false    | none        | Create cross-chain withdrawal order - Response |                                                          |
| errorParam   | object                                            | false    | none        | Error parameter information                    |                                                          |
| requestTime  | string(timestamp)                                 | false    | none        | Server request receive time                    |                                                          |
| responseTime | string(timestamp)                                 | false    | none        | Server response return time                    |                                                          |
| traceId      | string                                            | false    | none        | Call trace ID                                  |                                                          |

#### schemacreatecrosswithdraw

| Name            | Type          | Required | Constraints | Description                     | Notes |
| --------------- | ------------- | -------- | ----------- | ------------------------------- | ----- |
| crossWithdrawId | string(int64) | false    | none        | Cross-chain withdrawal order ID |       |

#### schemacreatecrosswithdrawparam

| Name                  | Type          | Required | Constraints | Description                                                                                 | Notes |
| --------------------- | ------------- | -------- | ----------- | ------------------------------------------------------------------------------------------- | ----- |
| accountId             | string(int64) | false    | none        | Account ID                                                                                  |       |
| coinId                | string(int64) | false    | none        | Coin ID                                                                                     |       |
| amount                | string        | false    | none        | Withdrawal amount                                                                           |       |
| ethAddress            | string        | false    | none        | Withdrawal address. If empty, withdraw to the corresponding address of the current account. |       |
| erc20Address          | string        | false    | none        | L1 ERC20 contract address for the withdrawn asset                                           |       |
| lpAccountId           | string        | false    | none        | LP account ID for L2 receiving user transfers                                               |       |
| clientCrossWithdrawId | string        | false    | none        | Client-defined ID, used for signature & idempotent check. Must be filled.                   |       |
| expireTime            | string(int64) | false    | none        | Expiration time                                                                             |       |
| l2Signature           | string        | false    | none        | L2 signature                                                                                |       |
| fee                   | string        | false    | none        | Gas + fee obtained from front-end                                                           |       |
| chainId               | string        | false    | none        | Chain ID for withdrawal                                                                     |       |
| mpcAddress            | string        | false    | none        | Which mpc address initiated the withdraw                                                    |       |
| mpcSignature          | string        | false    | none        | Signature of the mpc address to the withdraw field                                          |       |
| mpcSignTime           | string        | false    | none        | mpc signature timestamp,unix timestamp in seconds                                           |       |

#### createnormalwithdraw

| Name         | Type                                                | Required | Constraints | Description                               | Notes                                                    |
| ------------ | --------------------------------------------------- | -------- | ----------- | ----------------------------------------- | -------------------------------------------------------- |
| code         | string                                              | false    | none        | Status code                               | Returns "SUCCESS" for success, otherwise it's a failure. |
| data         | [CreateNormalWithdraw](#schemacreatenormalwithdraw) | false    | none        | Create normal withdrawal order - Response |                                                          |
| errorParam   | object                                              | false    | none        | Error parameter information               |                                                          |
| requestTime  | string(timestamp)                                   | false    | none        | Server request receive time               |                                                          |
| responseTime | string(timestamp)                                   | false    | none        | Server response return time               |                                                          |
| traceId      | string                                              | false    | none        | Call trace ID                             |                                                          |

#### schemacreatenormalwithdraw

| Name       | Type          | Required | Constraints | Description         | Notes |
| ---------- | ------------- | -------- | ----------- | ------------------- | ----- |
| withdrawId | string(int64) | false    | none        | Withdrawal order ID |       |

#### schemacreatenormalwithdrawparam

| Name             | Type          | Required | Constraints | Description                                                                                 | Notes |
| ---------------- | ------------- | -------- | ----------- | ------------------------------------------------------------------------------------------- | ----- |
| accountId        | string(int64) | false    | none        | Account ID                                                                                  |       |
| coinId           | string(int64) | false    | none        | Coin ID                                                                                     |       |
| amount           | string        | false    | none        | Withdrawal amount                                                                           |       |
| ethAddress       | string        | false    | none        | Withdrawal address. If empty, withdraw to the corresponding address of the current account. |       |
| clientWithdrawId | string        | false    | none        | Client-defined ID, used for signature & idempotent check. Must be filled.                   |       |
| expireTime       | string(int64) | false    | none        | Expiration time                                                                             |       |
| l2Signature      | string        | false    | none        | L2 signature                                                                                |       |

# Websocket API

### WebSocket API Documentation

This document outlines the WebSocket API for both private (user account) and public (market data) information.

### (Private WebSocket) User Account Information WebSocket Interface

#### Description

* **01.** Private WebSocket connections do not require subscriptions; data is automatically pushed after a successful connection. This includes both trading messages and custom messages.
* **02.** Trading messages are identified with the type `type-event`. Other message types will be defined separately.
* **03.** The `event` field within the body of a trading message can be one of the following: `Snapshot`, `ACCOUNT_UPDATE`, `DEPOSIT_UPDATE`, `WITHDRAW_UPDATE`, `TRANSFER_IN_UPDATE`, `TRANSFER_OUT_UPDATE`, `ORDER_UPDATE`, `FORCE_WITHDRAW_UPDATE`, `FORCE_TRADE_UPDATE`, `FUNDING_SETTLEMENT`, `ORDER_FILL_FEE_INCOME`, `START_LIQUIDATING`, `FINISH_LIQUIDATING`, or `UNRECOGNIZED`.
* **04.** Ping-Pong Mechanism:
  * **Server Ping (Heartbeat):**
    * After a successful WebSocket connection, the server sends a Ping message at a fixed interval. The message body looks like: `{"type":"ping","time":"1693208170000"}`. The `time` field is the server's timestamp when the Ping was sent.
    * The client must respond with a Pong message upon receipt, with a body like: `{"type":"pong","time":"1693208170000"}`.
    * If the server doesn't receive a Pong response after 5 consecutive Pings, the server will terminate the connection.
  * **Client Ping (Latency Measurement):**
    * After a successful WebSocket connection, the client can also initiate a Ping message with a body like: `{"type":"ping","time":"1693208170000"}`. The `time` field is the client's timestamp when the Ping was sent.
    * The server will immediately respond with a Pong message, with a body like: `{"type":"pong","time":"1693208170000"}`. The `time` field in the Pong will match the `time` field in the client's Ping.
* **05.** Authentication:
  * **Web:**
    * Browsers don't allow custom headers during WebSocket connections, so special handling is required.
    * Use the same authentication logic as HTTP. Create a JSON string using the `X-edgeX-Api-Signature`, `X-edgeX-Api-Timestamp` key-value pairs, for example: `{"X-edgeX-Api-Signature": "00e6b34cf9c3c0ca407cc2fe149fad836206c97201f236137c0e89fd079760470672b5257fa372710b5863d1ec6e0215e5bd6b2c3a319eda88886250a100524706ea3dd81a7fc864893c8c6f674e4a4510c369f939bdc0259a0980dfde882c2d", "X-edgeX-Api-Timestamp": "1705720068228"}`.
    * Base64 encode this JSON string.
    * During the WebSocket request, pass the base64 encoded value in the `SEC_WEBSOCKET_PROTOCOL` header.
  * **App/API:**
    * App/API WebSocket connections can use [custom](../authentication#private-api) headers. Therefore, Apps/API can continue using the same authentication logic as HTTP, or they can use the Web authentication method described above.
    * WebSocket is a GET request and there is no need to sign the request body.

#### URL: `/api/v1/private/ws`

**Payload**

```json
{
  // The type for trading messages is "trade-event". Custom messages have their own defined type. "error" indicates an error message sent by the server.
  "type": "trade-event",
  // The body of a trading message has the structure below. The message structure for custom messages will be defined separately by the user.
  "content": {
    // The event that triggered the data update
    "event": "ACCOUNT_UPDATE",
    // Data update version
    "version": "1000",
    // Data
    "data": {
      // Account information
      "account": [
      ],
      // Collateral information
      "collateral": [
      ],
      // Collateral transaction details
      "collateralTransaction": [
      ],
      // Position information
      "position": [
      ],
      // Position transaction details
      "positionTransaction": [
      ],
       // Deposit records
      "deposit": [
      ],
      // Withdrawal records
      "withdraw": [
      ],
      // Transfer in records
      "transferIn": [
      ],
      // Transfer out records
      "transferOut": [
      ],
      // Order information
      "order": [
      ],
      // Trade details
      "orderFillTransaction": [
      ]
    }
  }
}
```

### (Public WebSocket) Market Data WebSocket Interface

#### URL: `/api/v1/public/ws`

#### Description

* **01.** When subscribing or unsubscribing, the server will validate the channel. For invalid channels, the server will respond with an error message, for example: `{"type":"error","content":{"code":"INVALID_CONTRACT_ID""msg":"invalid contractId:100000001"}}`
* **02.** The message structure for subscribing and unsubscribing is: `{"type": "subscribe", "channel": "ticker.10000001"}`.
* **03.** Ping-Pong Mechanism:
  * **Server Ping (Heartbeat):**
    * After a successful WebSocket connection, the server sends a Ping message at a fixed interval. The message body looks like: `{"type":"ping","time":"1693208170000"}`. The `time` field is the server's timestamp when the Ping was sent.
    * The client must respond with a Pong message upon receipt, with a body like: `{"type":"pong","time":"1693208170000"}`.
    * If the server doesn't receive a Pong response after 5 consecutive Pings, the server will terminate the connection.
  * **Client Ping (Latency Measurement):**
    * After a successful WebSocket connection, the client can also initiate a Ping message with a body like: `{"type":"ping","time":"1693208170000"}`. The `time` field is the client's timestamp when the Ping was sent.
    * The server will immediately respond with a Pong message, with a body like: `{"type":"pong","time":"1693208170000"}`. The `time` field in the Pong will match the `time` field in the client's Ping.

#### Subscription Metadata

**Request**

```json
{
  "type": "subscribe",
  "channel": "metadata"
}
```

**Response**

```json
{
  "type": "subscribed",
  "channel": "metadata"
}
```

**Payload**

```json
{
  // error
  "type":  "quote-event",
  "channel": "metadata",
  "content": {
    // snapshot quote-event 
    "dataType": "Snapshot", 
    // 
    "channel": "metadata",
    "data": [
      {
        // Coin information
        "coin": [
        ],
        // Contract information
        "contract": [
        ]
      }
    ]
  }
}
```

#### Subscribe to 24-Hour Market Ticker

**Channel Explanation**

| Channel             | Description                                              |
| ------------------- | -------------------------------------------------------- |
| ticker.{contractId} | Subscribe to the ticker of contract `contractId`         |
| ticker.all          | Subscribe to the ticker of all contracts                 |
| ticker.all.1s       | Subscribe to the ticker of all contracts (periodic push) |

**Request**

```json
{
  "type": "subscribe",
  "channel": "ticker.10000001"
}
```

**Response**

```json
{
  "type": "subscribed",
  "channel": "ticker.10000001"
}
```

**Payload**

```json
{
  "type": "payload",
  "channel": "ticker.10000001",
  "content": {
    "dataType": "Snapshot",
    "channel": "ticker.10000001",
    "data": [
      {
        "contractId": "string",
        "priceChange": "string",
        "priceChangePercent": "string",
        "trades": "string",
        "size": "string",
        "value": "string",
        "high": "string",
        "low": "string",
        "open": "string",
        "close": "string",
        "highTime": "string",
        "lowTime": "string",
        "startTime": "string",
        "endTime": "string",
        "lastPrice": "string"
      }
    ]
  }
}
```

#### Subscribe to K-Line Data

**Channel Explanation**

| Channel                                   | Description                                                                      |
| ----------------------------------------- | -------------------------------------------------------------------------------- |
| kline.{priceType}.{contractId}.{interval} | Subscribe to the `interval` K-Line of contract `contractId` based on `priceType` |

**`priceType` Parameter**

| Value       | Description       |
| ----------- | ----------------- |
| LAST\_PRICE | Last Price K-Line |
| MARK\_PRICE | Mark Price K-Line |

**`interval` Parameter**

| Value      | Description      |
| ---------- | ---------------- |
| MINUTE\_1  | 1-Minute K-Line  |
| MINUTE\_5  | 5-Minute K-Line  |
| MINUTE\_15 | 15-Minute K-Line |
| MINUTE\_30 | 30-Minute K-Line |
| HOUR\_1    | 1-Hour K-Line    |
| HOUR\_2    | 2-Hour K-Line    |
| HOUR\_4    | 4-Hour K-Line    |
| HOUR\_6    | 6-Hour K-Line    |
| HOUR\_8    | 8-Hour K-Line    |
| HOUR\_12   | 12-Hour K-Line   |
| DAY\_1     | Daily K-Line     |
| WEEK\_1    | Weekly K-Line    |
| MONTH\_1   | Monthly K-Line   |

**Request**

```json
{
  "type": "subscribe",
  "channel": "kline.LAST_PRICE.10000001.MINUTE_1"
}
```

**Response**

```json
{
  "type": "subscribed",
  "channel": "kline.LAST_PRICE.10000001.MINUTE_1"
}
```

**Payload**

```json
{
  "type": "payload",
  "channel": "kline.LAST_PRICE.10000001.MINUTE_1",
  "content": {
    "dataType": "Changed",
    "channel": "kline.LAST_PRICE.10000001.MINUTE_1",
    "data": [
      {
        "klineId": "1",
        "contractId": "10000001",
        "klineType": "MINUTE_1",
        "klineTime": "1688365544504",
        "trades": "5",
        "size": "10.1",
        "value": "100000",
        "high": "31200",
        "low": "31000",
        "open": "3150",
        "close": "31010",
        "makerBuySize": "5",
        "makerBuyValue": "150000"
      }
    ]
  }
}
```

#### Subscribe to Order Book

**Usage Instructions**

> After a successful subscription, a full dataset is pushed once initially (`depthType=SNAPSHOT`), and subsequent pushes will be incremental updates (`depthType=CHANGED`).

**Channel Explanation**

| Channel                    | Description                                                                  |
| -------------------------- | ---------------------------------------------------------------------------- |
| depth.{contractId}.{depth} | Subscribe to the order book of contract `contractId` with a depth of `depth` |

**`depth` Parameter**

| Value | Description |
| ----- | ----------- |
| 15    | 15 levels   |
| 200   | 200 levels  |

**Request**

```json
{
  "type": "subscribe",
  "channel": "depth.10000001.15"
}
```

**Response**

```json
{
  "type": "subscribed",
  "channel": "depth.10000001.15"
}
```

**Payload**

```json
{
  "type": "payload",
  "channel": "depth.10000001.15",
  "content": {
    "dataType": "Snapshot",
    "channel": "depth.10000001.15",
    "data": [
      {
        "startVersion": "string",
        "endVersion": "string",
        "level": 0,
        "contractId": "10000001",
        "depthType": "Snapshot", // Data type: SNAPSHOT for full data, CHANGED for incremental data
        "bids": [
          [
            "26092",
            // Price
            "0.9014"
            // Size. A size of 0 indicates a deletion. Positive numbers mean increase. Negative numbers mean decrease.
          ],
          [
            "26091",
            "0.9667"
          ]
        ],
        "asks": [
          [
            "26093",
            "0.964"
          ],
          [
            "26094",
            "1.0213"
          ]
        ]
      }
    ]
  }
}
```

#### Subscribe to Latest Trades

**Channel Explanation**

| Channel             | Description                                             |
| ------------------- | ------------------------------------------------------- |
| trades.{contractId} | Subscribe to the latest trades of contract `contractId` |

**Request**

```json
{
  "type": "subscribe",
  "channel": "trades.10000001"
}
```

**Response**

```json
{
  "type": "subscribed",
  "channel": "trades.10000001"
}
```

**Payload**

```json
{
  "type": "payload",
  "channel": "trades.10000001",
  "content": {
    "dataType": "Changed",
    "channel": "trades.10000001",
    "data": [
      {
        "ticketId": "1",
        "time": "1688365544504",
        "price": "30065.12",
        "size": "0.01",
        "value": "300.6512",
        "takerOrderId": "10",
        "makerOrderId": "11",
        "takerAccountId": "3001",
        "makerAccountId": "3002",
        "contractId": "10000001",
        "isBestMatch": true,
        "isBuyerMaker": false
      }
    ]
  }
}
```
